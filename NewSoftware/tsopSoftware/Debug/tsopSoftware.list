
tsopSoftware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006220  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000310  080062e0  080062e0  000162e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080065f0  080065f0  000200b0  2**0
                  CONTENTS
  4 .ARM          00000000  080065f0  080065f0  000200b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080065f0  080065f0  000200b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080065f0  080065f0  000165f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080065f4  080065f4  000165f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b0  20000000  080065f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000084  200000b0  080066a8  000200b0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000134  080066a8  00020134  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000200b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004cf6  00000000  00000000  000200d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001070  00000000  00000000  00024dce  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000578  00000000  00000000  00025e40  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000004e0  00000000  00000000  000263b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00016bfe  00000000  00000000  00026898  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000050bf  00000000  00000000  0003d496  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0008252e  00000000  00000000  00042555  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000c4a83  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001954  00000000  00000000  000c4b00  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200000b0 	.word	0x200000b0
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080062c8 	.word	0x080062c8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200000b4 	.word	0x200000b4
 8000104:	080062c8 	.word	0x080062c8

08000108 <__gnu_thumb1_case_uhi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5a09      	ldrh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	; 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	; 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			; (mov r8, r8)

08000408 <__aeabi_cdrcmple>:
 8000408:	4684      	mov	ip, r0
 800040a:	1c10      	adds	r0, r2, #0
 800040c:	4662      	mov	r2, ip
 800040e:	468c      	mov	ip, r1
 8000410:	1c19      	adds	r1, r3, #0
 8000412:	4663      	mov	r3, ip
 8000414:	e000      	b.n	8000418 <__aeabi_cdcmpeq>
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdcmpeq>:
 8000418:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800041a:	f001 fcb9 	bl	8001d90 <__ledf2>
 800041e:	2800      	cmp	r0, #0
 8000420:	d401      	bmi.n	8000426 <__aeabi_cdcmpeq+0xe>
 8000422:	2100      	movs	r1, #0
 8000424:	42c8      	cmn	r0, r1
 8000426:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000428 <__aeabi_dcmpeq>:
 8000428:	b510      	push	{r4, lr}
 800042a:	f001 fc11 	bl	8001c50 <__eqdf2>
 800042e:	4240      	negs	r0, r0
 8000430:	3001      	adds	r0, #1
 8000432:	bd10      	pop	{r4, pc}

08000434 <__aeabi_dcmplt>:
 8000434:	b510      	push	{r4, lr}
 8000436:	f001 fcab 	bl	8001d90 <__ledf2>
 800043a:	2800      	cmp	r0, #0
 800043c:	db01      	blt.n	8000442 <__aeabi_dcmplt+0xe>
 800043e:	2000      	movs	r0, #0
 8000440:	bd10      	pop	{r4, pc}
 8000442:	2001      	movs	r0, #1
 8000444:	bd10      	pop	{r4, pc}
 8000446:	46c0      	nop			; (mov r8, r8)

08000448 <__aeabi_dcmple>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f001 fca1 	bl	8001d90 <__ledf2>
 800044e:	2800      	cmp	r0, #0
 8000450:	dd01      	ble.n	8000456 <__aeabi_dcmple+0xe>
 8000452:	2000      	movs	r0, #0
 8000454:	bd10      	pop	{r4, pc}
 8000456:	2001      	movs	r0, #1
 8000458:	bd10      	pop	{r4, pc}
 800045a:	46c0      	nop			; (mov r8, r8)

0800045c <__aeabi_dcmpgt>:
 800045c:	b510      	push	{r4, lr}
 800045e:	f001 fc33 	bl	8001cc8 <__gedf2>
 8000462:	2800      	cmp	r0, #0
 8000464:	dc01      	bgt.n	800046a <__aeabi_dcmpgt+0xe>
 8000466:	2000      	movs	r0, #0
 8000468:	bd10      	pop	{r4, pc}
 800046a:	2001      	movs	r0, #1
 800046c:	bd10      	pop	{r4, pc}
 800046e:	46c0      	nop			; (mov r8, r8)

08000470 <__aeabi_dcmpge>:
 8000470:	b510      	push	{r4, lr}
 8000472:	f001 fc29 	bl	8001cc8 <__gedf2>
 8000476:	2800      	cmp	r0, #0
 8000478:	da01      	bge.n	800047e <__aeabi_dcmpge+0xe>
 800047a:	2000      	movs	r0, #0
 800047c:	bd10      	pop	{r4, pc}
 800047e:	2001      	movs	r0, #1
 8000480:	bd10      	pop	{r4, pc}
 8000482:	46c0      	nop			; (mov r8, r8)

08000484 <__aeabi_cfrcmple>:
 8000484:	4684      	mov	ip, r0
 8000486:	1c08      	adds	r0, r1, #0
 8000488:	4661      	mov	r1, ip
 800048a:	e7ff      	b.n	800048c <__aeabi_cfcmpeq>

0800048c <__aeabi_cfcmpeq>:
 800048c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800048e:	f000 fa5b 	bl	8000948 <__lesf2>
 8000492:	2800      	cmp	r0, #0
 8000494:	d401      	bmi.n	800049a <__aeabi_cfcmpeq+0xe>
 8000496:	2100      	movs	r1, #0
 8000498:	42c8      	cmn	r0, r1
 800049a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800049c <__aeabi_fcmpeq>:
 800049c:	b510      	push	{r4, lr}
 800049e:	f000 f9dd 	bl	800085c <__eqsf2>
 80004a2:	4240      	negs	r0, r0
 80004a4:	3001      	adds	r0, #1
 80004a6:	bd10      	pop	{r4, pc}

080004a8 <__aeabi_fcmplt>:
 80004a8:	b510      	push	{r4, lr}
 80004aa:	f000 fa4d 	bl	8000948 <__lesf2>
 80004ae:	2800      	cmp	r0, #0
 80004b0:	db01      	blt.n	80004b6 <__aeabi_fcmplt+0xe>
 80004b2:	2000      	movs	r0, #0
 80004b4:	bd10      	pop	{r4, pc}
 80004b6:	2001      	movs	r0, #1
 80004b8:	bd10      	pop	{r4, pc}
 80004ba:	46c0      	nop			; (mov r8, r8)

080004bc <__aeabi_fcmple>:
 80004bc:	b510      	push	{r4, lr}
 80004be:	f000 fa43 	bl	8000948 <__lesf2>
 80004c2:	2800      	cmp	r0, #0
 80004c4:	dd01      	ble.n	80004ca <__aeabi_fcmple+0xe>
 80004c6:	2000      	movs	r0, #0
 80004c8:	bd10      	pop	{r4, pc}
 80004ca:	2001      	movs	r0, #1
 80004cc:	bd10      	pop	{r4, pc}
 80004ce:	46c0      	nop			; (mov r8, r8)

080004d0 <__aeabi_fcmpgt>:
 80004d0:	b510      	push	{r4, lr}
 80004d2:	f000 f9eb 	bl	80008ac <__gesf2>
 80004d6:	2800      	cmp	r0, #0
 80004d8:	dc01      	bgt.n	80004de <__aeabi_fcmpgt+0xe>
 80004da:	2000      	movs	r0, #0
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	2001      	movs	r0, #1
 80004e0:	bd10      	pop	{r4, pc}
 80004e2:	46c0      	nop			; (mov r8, r8)

080004e4 <__aeabi_fcmpge>:
 80004e4:	b510      	push	{r4, lr}
 80004e6:	f000 f9e1 	bl	80008ac <__gesf2>
 80004ea:	2800      	cmp	r0, #0
 80004ec:	da01      	bge.n	80004f2 <__aeabi_fcmpge+0xe>
 80004ee:	2000      	movs	r0, #0
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	2001      	movs	r0, #1
 80004f4:	bd10      	pop	{r4, pc}
 80004f6:	46c0      	nop			; (mov r8, r8)

080004f8 <__aeabi_f2uiz>:
 80004f8:	219e      	movs	r1, #158	; 0x9e
 80004fa:	b510      	push	{r4, lr}
 80004fc:	05c9      	lsls	r1, r1, #23
 80004fe:	1c04      	adds	r4, r0, #0
 8000500:	f7ff fff0 	bl	80004e4 <__aeabi_fcmpge>
 8000504:	2800      	cmp	r0, #0
 8000506:	d103      	bne.n	8000510 <__aeabi_f2uiz+0x18>
 8000508:	1c20      	adds	r0, r4, #0
 800050a:	f000 fd63 	bl	8000fd4 <__aeabi_f2iz>
 800050e:	bd10      	pop	{r4, pc}
 8000510:	219e      	movs	r1, #158	; 0x9e
 8000512:	1c20      	adds	r0, r4, #0
 8000514:	05c9      	lsls	r1, r1, #23
 8000516:	f000 fb99 	bl	8000c4c <__aeabi_fsub>
 800051a:	f000 fd5b 	bl	8000fd4 <__aeabi_f2iz>
 800051e:	2380      	movs	r3, #128	; 0x80
 8000520:	061b      	lsls	r3, r3, #24
 8000522:	469c      	mov	ip, r3
 8000524:	4460      	add	r0, ip
 8000526:	e7f2      	b.n	800050e <__aeabi_f2uiz+0x16>

08000528 <__aeabi_fadd>:
 8000528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800052a:	4647      	mov	r7, r8
 800052c:	46ce      	mov	lr, r9
 800052e:	0243      	lsls	r3, r0, #9
 8000530:	0a5b      	lsrs	r3, r3, #9
 8000532:	0044      	lsls	r4, r0, #1
 8000534:	0fc2      	lsrs	r2, r0, #31
 8000536:	469c      	mov	ip, r3
 8000538:	0048      	lsls	r0, r1, #1
 800053a:	00dd      	lsls	r5, r3, #3
 800053c:	024b      	lsls	r3, r1, #9
 800053e:	0e24      	lsrs	r4, r4, #24
 8000540:	0a5b      	lsrs	r3, r3, #9
 8000542:	0e00      	lsrs	r0, r0, #24
 8000544:	b580      	push	{r7, lr}
 8000546:	4698      	mov	r8, r3
 8000548:	0026      	movs	r6, r4
 800054a:	4691      	mov	r9, r2
 800054c:	0fc9      	lsrs	r1, r1, #31
 800054e:	00db      	lsls	r3, r3, #3
 8000550:	1a27      	subs	r7, r4, r0
 8000552:	428a      	cmp	r2, r1
 8000554:	d029      	beq.n	80005aa <__aeabi_fadd+0x82>
 8000556:	2f00      	cmp	r7, #0
 8000558:	dd15      	ble.n	8000586 <__aeabi_fadd+0x5e>
 800055a:	2800      	cmp	r0, #0
 800055c:	d14a      	bne.n	80005f4 <__aeabi_fadd+0xcc>
 800055e:	2b00      	cmp	r3, #0
 8000560:	d000      	beq.n	8000564 <__aeabi_fadd+0x3c>
 8000562:	e095      	b.n	8000690 <__aeabi_fadd+0x168>
 8000564:	08ed      	lsrs	r5, r5, #3
 8000566:	2cff      	cmp	r4, #255	; 0xff
 8000568:	d100      	bne.n	800056c <__aeabi_fadd+0x44>
 800056a:	e088      	b.n	800067e <__aeabi_fadd+0x156>
 800056c:	026b      	lsls	r3, r5, #9
 800056e:	0a5b      	lsrs	r3, r3, #9
 8000570:	b2e6      	uxtb	r6, r4
 8000572:	025b      	lsls	r3, r3, #9
 8000574:	05f6      	lsls	r6, r6, #23
 8000576:	0a58      	lsrs	r0, r3, #9
 8000578:	4330      	orrs	r0, r6
 800057a:	07d2      	lsls	r2, r2, #31
 800057c:	4310      	orrs	r0, r2
 800057e:	bc0c      	pop	{r2, r3}
 8000580:	4690      	mov	r8, r2
 8000582:	4699      	mov	r9, r3
 8000584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000586:	2f00      	cmp	r7, #0
 8000588:	d000      	beq.n	800058c <__aeabi_fadd+0x64>
 800058a:	e087      	b.n	800069c <__aeabi_fadd+0x174>
 800058c:	1c60      	adds	r0, r4, #1
 800058e:	b2c0      	uxtb	r0, r0
 8000590:	2801      	cmp	r0, #1
 8000592:	dc00      	bgt.n	8000596 <__aeabi_fadd+0x6e>
 8000594:	e0b6      	b.n	8000704 <__aeabi_fadd+0x1dc>
 8000596:	1aee      	subs	r6, r5, r3
 8000598:	0172      	lsls	r2, r6, #5
 800059a:	d500      	bpl.n	800059e <__aeabi_fadd+0x76>
 800059c:	e0c5      	b.n	800072a <__aeabi_fadd+0x202>
 800059e:	2e00      	cmp	r6, #0
 80005a0:	d13d      	bne.n	800061e <__aeabi_fadd+0xf6>
 80005a2:	2200      	movs	r2, #0
 80005a4:	2600      	movs	r6, #0
 80005a6:	2300      	movs	r3, #0
 80005a8:	e7e3      	b.n	8000572 <__aeabi_fadd+0x4a>
 80005aa:	2f00      	cmp	r7, #0
 80005ac:	dc00      	bgt.n	80005b0 <__aeabi_fadd+0x88>
 80005ae:	e096      	b.n	80006de <__aeabi_fadd+0x1b6>
 80005b0:	2800      	cmp	r0, #0
 80005b2:	d05d      	beq.n	8000670 <__aeabi_fadd+0x148>
 80005b4:	2cff      	cmp	r4, #255	; 0xff
 80005b6:	d060      	beq.n	800067a <__aeabi_fadd+0x152>
 80005b8:	2280      	movs	r2, #128	; 0x80
 80005ba:	04d2      	lsls	r2, r2, #19
 80005bc:	4313      	orrs	r3, r2
 80005be:	2f1b      	cmp	r7, #27
 80005c0:	dd00      	ble.n	80005c4 <__aeabi_fadd+0x9c>
 80005c2:	e0ec      	b.n	800079e <__aeabi_fadd+0x276>
 80005c4:	2220      	movs	r2, #32
 80005c6:	1bd2      	subs	r2, r2, r7
 80005c8:	0018      	movs	r0, r3
 80005ca:	4093      	lsls	r3, r2
 80005cc:	40f8      	lsrs	r0, r7
 80005ce:	1e5a      	subs	r2, r3, #1
 80005d0:	4193      	sbcs	r3, r2
 80005d2:	4303      	orrs	r3, r0
 80005d4:	18ed      	adds	r5, r5, r3
 80005d6:	016b      	lsls	r3, r5, #5
 80005d8:	d57b      	bpl.n	80006d2 <__aeabi_fadd+0x1aa>
 80005da:	3401      	adds	r4, #1
 80005dc:	2cff      	cmp	r4, #255	; 0xff
 80005de:	d100      	bne.n	80005e2 <__aeabi_fadd+0xba>
 80005e0:	e0b7      	b.n	8000752 <__aeabi_fadd+0x22a>
 80005e2:	2201      	movs	r2, #1
 80005e4:	2607      	movs	r6, #7
 80005e6:	402a      	ands	r2, r5
 80005e8:	086b      	lsrs	r3, r5, #1
 80005ea:	4d9a      	ldr	r5, [pc, #616]	; (8000854 <__aeabi_fadd+0x32c>)
 80005ec:	401d      	ands	r5, r3
 80005ee:	4315      	orrs	r5, r2
 80005f0:	402e      	ands	r6, r5
 80005f2:	e029      	b.n	8000648 <__aeabi_fadd+0x120>
 80005f4:	2cff      	cmp	r4, #255	; 0xff
 80005f6:	d0b5      	beq.n	8000564 <__aeabi_fadd+0x3c>
 80005f8:	2280      	movs	r2, #128	; 0x80
 80005fa:	04d2      	lsls	r2, r2, #19
 80005fc:	4313      	orrs	r3, r2
 80005fe:	2f1b      	cmp	r7, #27
 8000600:	dd00      	ble.n	8000604 <__aeabi_fadd+0xdc>
 8000602:	e0b2      	b.n	800076a <__aeabi_fadd+0x242>
 8000604:	2220      	movs	r2, #32
 8000606:	1bd2      	subs	r2, r2, r7
 8000608:	0019      	movs	r1, r3
 800060a:	4093      	lsls	r3, r2
 800060c:	40f9      	lsrs	r1, r7
 800060e:	1e5a      	subs	r2, r3, #1
 8000610:	4193      	sbcs	r3, r2
 8000612:	430b      	orrs	r3, r1
 8000614:	1aed      	subs	r5, r5, r3
 8000616:	016b      	lsls	r3, r5, #5
 8000618:	d55b      	bpl.n	80006d2 <__aeabi_fadd+0x1aa>
 800061a:	01ad      	lsls	r5, r5, #6
 800061c:	09ae      	lsrs	r6, r5, #6
 800061e:	0030      	movs	r0, r6
 8000620:	f002 fb3a 	bl	8002c98 <__clzsi2>
 8000624:	3805      	subs	r0, #5
 8000626:	4086      	lsls	r6, r0
 8000628:	4284      	cmp	r4, r0
 800062a:	dc65      	bgt.n	80006f8 <__aeabi_fadd+0x1d0>
 800062c:	1b04      	subs	r4, r0, r4
 800062e:	0033      	movs	r3, r6
 8000630:	2020      	movs	r0, #32
 8000632:	3401      	adds	r4, #1
 8000634:	40e3      	lsrs	r3, r4
 8000636:	1b04      	subs	r4, r0, r4
 8000638:	40a6      	lsls	r6, r4
 800063a:	1e75      	subs	r5, r6, #1
 800063c:	41ae      	sbcs	r6, r5
 800063e:	4333      	orrs	r3, r6
 8000640:	2607      	movs	r6, #7
 8000642:	001d      	movs	r5, r3
 8000644:	2400      	movs	r4, #0
 8000646:	401e      	ands	r6, r3
 8000648:	2201      	movs	r2, #1
 800064a:	464b      	mov	r3, r9
 800064c:	401a      	ands	r2, r3
 800064e:	2e00      	cmp	r6, #0
 8000650:	d004      	beq.n	800065c <__aeabi_fadd+0x134>
 8000652:	230f      	movs	r3, #15
 8000654:	402b      	ands	r3, r5
 8000656:	2b04      	cmp	r3, #4
 8000658:	d000      	beq.n	800065c <__aeabi_fadd+0x134>
 800065a:	3504      	adds	r5, #4
 800065c:	016b      	lsls	r3, r5, #5
 800065e:	d400      	bmi.n	8000662 <__aeabi_fadd+0x13a>
 8000660:	e780      	b.n	8000564 <__aeabi_fadd+0x3c>
 8000662:	3401      	adds	r4, #1
 8000664:	b2e6      	uxtb	r6, r4
 8000666:	2cff      	cmp	r4, #255	; 0xff
 8000668:	d12f      	bne.n	80006ca <__aeabi_fadd+0x1a2>
 800066a:	26ff      	movs	r6, #255	; 0xff
 800066c:	2300      	movs	r3, #0
 800066e:	e780      	b.n	8000572 <__aeabi_fadd+0x4a>
 8000670:	2b00      	cmp	r3, #0
 8000672:	d152      	bne.n	800071a <__aeabi_fadd+0x1f2>
 8000674:	2cff      	cmp	r4, #255	; 0xff
 8000676:	d000      	beq.n	800067a <__aeabi_fadd+0x152>
 8000678:	e774      	b.n	8000564 <__aeabi_fadd+0x3c>
 800067a:	000a      	movs	r2, r1
 800067c:	08ed      	lsrs	r5, r5, #3
 800067e:	2d00      	cmp	r5, #0
 8000680:	d0f3      	beq.n	800066a <__aeabi_fadd+0x142>
 8000682:	2380      	movs	r3, #128	; 0x80
 8000684:	03db      	lsls	r3, r3, #15
 8000686:	432b      	orrs	r3, r5
 8000688:	025b      	lsls	r3, r3, #9
 800068a:	0a5b      	lsrs	r3, r3, #9
 800068c:	26ff      	movs	r6, #255	; 0xff
 800068e:	e770      	b.n	8000572 <__aeabi_fadd+0x4a>
 8000690:	3f01      	subs	r7, #1
 8000692:	2f00      	cmp	r7, #0
 8000694:	d0be      	beq.n	8000614 <__aeabi_fadd+0xec>
 8000696:	2cff      	cmp	r4, #255	; 0xff
 8000698:	d1b1      	bne.n	80005fe <__aeabi_fadd+0xd6>
 800069a:	e763      	b.n	8000564 <__aeabi_fadd+0x3c>
 800069c:	2c00      	cmp	r4, #0
 800069e:	d047      	beq.n	8000730 <__aeabi_fadd+0x208>
 80006a0:	28ff      	cmp	r0, #255	; 0xff
 80006a2:	d069      	beq.n	8000778 <__aeabi_fadd+0x250>
 80006a4:	2480      	movs	r4, #128	; 0x80
 80006a6:	04e4      	lsls	r4, r4, #19
 80006a8:	427a      	negs	r2, r7
 80006aa:	4325      	orrs	r5, r4
 80006ac:	2a1b      	cmp	r2, #27
 80006ae:	dd00      	ble.n	80006b2 <__aeabi_fadd+0x18a>
 80006b0:	e0c5      	b.n	800083e <__aeabi_fadd+0x316>
 80006b2:	002c      	movs	r4, r5
 80006b4:	2620      	movs	r6, #32
 80006b6:	40d4      	lsrs	r4, r2
 80006b8:	1ab2      	subs	r2, r6, r2
 80006ba:	4095      	lsls	r5, r2
 80006bc:	1e6a      	subs	r2, r5, #1
 80006be:	4195      	sbcs	r5, r2
 80006c0:	4325      	orrs	r5, r4
 80006c2:	1b5d      	subs	r5, r3, r5
 80006c4:	0004      	movs	r4, r0
 80006c6:	4689      	mov	r9, r1
 80006c8:	e7a5      	b.n	8000616 <__aeabi_fadd+0xee>
 80006ca:	01ab      	lsls	r3, r5, #6
 80006cc:	0a5b      	lsrs	r3, r3, #9
 80006ce:	e750      	b.n	8000572 <__aeabi_fadd+0x4a>
 80006d0:	2400      	movs	r4, #0
 80006d2:	2201      	movs	r2, #1
 80006d4:	464b      	mov	r3, r9
 80006d6:	401a      	ands	r2, r3
 80006d8:	076b      	lsls	r3, r5, #29
 80006da:	d1ba      	bne.n	8000652 <__aeabi_fadd+0x12a>
 80006dc:	e742      	b.n	8000564 <__aeabi_fadd+0x3c>
 80006de:	2f00      	cmp	r7, #0
 80006e0:	d13b      	bne.n	800075a <__aeabi_fadd+0x232>
 80006e2:	3401      	adds	r4, #1
 80006e4:	b2e0      	uxtb	r0, r4
 80006e6:	2801      	cmp	r0, #1
 80006e8:	dd4a      	ble.n	8000780 <__aeabi_fadd+0x258>
 80006ea:	2cff      	cmp	r4, #255	; 0xff
 80006ec:	d0bd      	beq.n	800066a <__aeabi_fadd+0x142>
 80006ee:	2607      	movs	r6, #7
 80006f0:	18ed      	adds	r5, r5, r3
 80006f2:	086d      	lsrs	r5, r5, #1
 80006f4:	402e      	ands	r6, r5
 80006f6:	e7a7      	b.n	8000648 <__aeabi_fadd+0x120>
 80006f8:	2307      	movs	r3, #7
 80006fa:	4d57      	ldr	r5, [pc, #348]	; (8000858 <__aeabi_fadd+0x330>)
 80006fc:	1a24      	subs	r4, r4, r0
 80006fe:	4035      	ands	r5, r6
 8000700:	401e      	ands	r6, r3
 8000702:	e7a1      	b.n	8000648 <__aeabi_fadd+0x120>
 8000704:	2c00      	cmp	r4, #0
 8000706:	d11b      	bne.n	8000740 <__aeabi_fadd+0x218>
 8000708:	2d00      	cmp	r5, #0
 800070a:	d16e      	bne.n	80007ea <__aeabi_fadd+0x2c2>
 800070c:	2b00      	cmp	r3, #0
 800070e:	d100      	bne.n	8000712 <__aeabi_fadd+0x1ea>
 8000710:	e09a      	b.n	8000848 <__aeabi_fadd+0x320>
 8000712:	000a      	movs	r2, r1
 8000714:	001d      	movs	r5, r3
 8000716:	003c      	movs	r4, r7
 8000718:	e724      	b.n	8000564 <__aeabi_fadd+0x3c>
 800071a:	3f01      	subs	r7, #1
 800071c:	2f00      	cmp	r7, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_fadd+0x1fa>
 8000720:	e758      	b.n	80005d4 <__aeabi_fadd+0xac>
 8000722:	2cff      	cmp	r4, #255	; 0xff
 8000724:	d000      	beq.n	8000728 <__aeabi_fadd+0x200>
 8000726:	e74a      	b.n	80005be <__aeabi_fadd+0x96>
 8000728:	e7a7      	b.n	800067a <__aeabi_fadd+0x152>
 800072a:	1b5e      	subs	r6, r3, r5
 800072c:	4689      	mov	r9, r1
 800072e:	e776      	b.n	800061e <__aeabi_fadd+0xf6>
 8000730:	2d00      	cmp	r5, #0
 8000732:	d11c      	bne.n	800076e <__aeabi_fadd+0x246>
 8000734:	000a      	movs	r2, r1
 8000736:	28ff      	cmp	r0, #255	; 0xff
 8000738:	d01f      	beq.n	800077a <__aeabi_fadd+0x252>
 800073a:	0004      	movs	r4, r0
 800073c:	001d      	movs	r5, r3
 800073e:	e711      	b.n	8000564 <__aeabi_fadd+0x3c>
 8000740:	2d00      	cmp	r5, #0
 8000742:	d15d      	bne.n	8000800 <__aeabi_fadd+0x2d8>
 8000744:	2b00      	cmp	r3, #0
 8000746:	d117      	bne.n	8000778 <__aeabi_fadd+0x250>
 8000748:	2380      	movs	r3, #128	; 0x80
 800074a:	2200      	movs	r2, #0
 800074c:	03db      	lsls	r3, r3, #15
 800074e:	26ff      	movs	r6, #255	; 0xff
 8000750:	e70f      	b.n	8000572 <__aeabi_fadd+0x4a>
 8000752:	000a      	movs	r2, r1
 8000754:	26ff      	movs	r6, #255	; 0xff
 8000756:	2300      	movs	r3, #0
 8000758:	e70b      	b.n	8000572 <__aeabi_fadd+0x4a>
 800075a:	2c00      	cmp	r4, #0
 800075c:	d121      	bne.n	80007a2 <__aeabi_fadd+0x27a>
 800075e:	2d00      	cmp	r5, #0
 8000760:	d166      	bne.n	8000830 <__aeabi_fadd+0x308>
 8000762:	28ff      	cmp	r0, #255	; 0xff
 8000764:	d1e9      	bne.n	800073a <__aeabi_fadd+0x212>
 8000766:	001d      	movs	r5, r3
 8000768:	e787      	b.n	800067a <__aeabi_fadd+0x152>
 800076a:	2301      	movs	r3, #1
 800076c:	e752      	b.n	8000614 <__aeabi_fadd+0xec>
 800076e:	1c7a      	adds	r2, r7, #1
 8000770:	d0a7      	beq.n	80006c2 <__aeabi_fadd+0x19a>
 8000772:	43fa      	mvns	r2, r7
 8000774:	28ff      	cmp	r0, #255	; 0xff
 8000776:	d199      	bne.n	80006ac <__aeabi_fadd+0x184>
 8000778:	000a      	movs	r2, r1
 800077a:	001d      	movs	r5, r3
 800077c:	24ff      	movs	r4, #255	; 0xff
 800077e:	e6f1      	b.n	8000564 <__aeabi_fadd+0x3c>
 8000780:	2e00      	cmp	r6, #0
 8000782:	d121      	bne.n	80007c8 <__aeabi_fadd+0x2a0>
 8000784:	2d00      	cmp	r5, #0
 8000786:	d04f      	beq.n	8000828 <__aeabi_fadd+0x300>
 8000788:	2b00      	cmp	r3, #0
 800078a:	d04c      	beq.n	8000826 <__aeabi_fadd+0x2fe>
 800078c:	18ed      	adds	r5, r5, r3
 800078e:	016b      	lsls	r3, r5, #5
 8000790:	d59e      	bpl.n	80006d0 <__aeabi_fadd+0x1a8>
 8000792:	4b31      	ldr	r3, [pc, #196]	; (8000858 <__aeabi_fadd+0x330>)
 8000794:	3607      	adds	r6, #7
 8000796:	402e      	ands	r6, r5
 8000798:	2401      	movs	r4, #1
 800079a:	401d      	ands	r5, r3
 800079c:	e754      	b.n	8000648 <__aeabi_fadd+0x120>
 800079e:	2301      	movs	r3, #1
 80007a0:	e718      	b.n	80005d4 <__aeabi_fadd+0xac>
 80007a2:	28ff      	cmp	r0, #255	; 0xff
 80007a4:	d0df      	beq.n	8000766 <__aeabi_fadd+0x23e>
 80007a6:	2480      	movs	r4, #128	; 0x80
 80007a8:	04e4      	lsls	r4, r4, #19
 80007aa:	427f      	negs	r7, r7
 80007ac:	4325      	orrs	r5, r4
 80007ae:	2f1b      	cmp	r7, #27
 80007b0:	dc4d      	bgt.n	800084e <__aeabi_fadd+0x326>
 80007b2:	2620      	movs	r6, #32
 80007b4:	1bf6      	subs	r6, r6, r7
 80007b6:	002c      	movs	r4, r5
 80007b8:	40b5      	lsls	r5, r6
 80007ba:	40fc      	lsrs	r4, r7
 80007bc:	1e6a      	subs	r2, r5, #1
 80007be:	4195      	sbcs	r5, r2
 80007c0:	4325      	orrs	r5, r4
 80007c2:	18ed      	adds	r5, r5, r3
 80007c4:	0004      	movs	r4, r0
 80007c6:	e706      	b.n	80005d6 <__aeabi_fadd+0xae>
 80007c8:	2d00      	cmp	r5, #0
 80007ca:	d0cc      	beq.n	8000766 <__aeabi_fadd+0x23e>
 80007cc:	2b00      	cmp	r3, #0
 80007ce:	d100      	bne.n	80007d2 <__aeabi_fadd+0x2aa>
 80007d0:	e753      	b.n	800067a <__aeabi_fadd+0x152>
 80007d2:	2180      	movs	r1, #128	; 0x80
 80007d4:	4660      	mov	r0, ip
 80007d6:	03c9      	lsls	r1, r1, #15
 80007d8:	4208      	tst	r0, r1
 80007da:	d003      	beq.n	80007e4 <__aeabi_fadd+0x2bc>
 80007dc:	4640      	mov	r0, r8
 80007de:	4208      	tst	r0, r1
 80007e0:	d100      	bne.n	80007e4 <__aeabi_fadd+0x2bc>
 80007e2:	001d      	movs	r5, r3
 80007e4:	2101      	movs	r1, #1
 80007e6:	4011      	ands	r1, r2
 80007e8:	e747      	b.n	800067a <__aeabi_fadd+0x152>
 80007ea:	2b00      	cmp	r3, #0
 80007ec:	d100      	bne.n	80007f0 <__aeabi_fadd+0x2c8>
 80007ee:	e6b9      	b.n	8000564 <__aeabi_fadd+0x3c>
 80007f0:	1aea      	subs	r2, r5, r3
 80007f2:	0150      	lsls	r0, r2, #5
 80007f4:	d525      	bpl.n	8000842 <__aeabi_fadd+0x31a>
 80007f6:	2607      	movs	r6, #7
 80007f8:	1b5d      	subs	r5, r3, r5
 80007fa:	402e      	ands	r6, r5
 80007fc:	4689      	mov	r9, r1
 80007fe:	e723      	b.n	8000648 <__aeabi_fadd+0x120>
 8000800:	24ff      	movs	r4, #255	; 0xff
 8000802:	2b00      	cmp	r3, #0
 8000804:	d100      	bne.n	8000808 <__aeabi_fadd+0x2e0>
 8000806:	e6ad      	b.n	8000564 <__aeabi_fadd+0x3c>
 8000808:	2280      	movs	r2, #128	; 0x80
 800080a:	4660      	mov	r0, ip
 800080c:	03d2      	lsls	r2, r2, #15
 800080e:	4210      	tst	r0, r2
 8000810:	d004      	beq.n	800081c <__aeabi_fadd+0x2f4>
 8000812:	4640      	mov	r0, r8
 8000814:	4210      	tst	r0, r2
 8000816:	d101      	bne.n	800081c <__aeabi_fadd+0x2f4>
 8000818:	001d      	movs	r5, r3
 800081a:	4689      	mov	r9, r1
 800081c:	2201      	movs	r2, #1
 800081e:	464b      	mov	r3, r9
 8000820:	24ff      	movs	r4, #255	; 0xff
 8000822:	401a      	ands	r2, r3
 8000824:	e69e      	b.n	8000564 <__aeabi_fadd+0x3c>
 8000826:	002b      	movs	r3, r5
 8000828:	08dd      	lsrs	r5, r3, #3
 800082a:	000a      	movs	r2, r1
 800082c:	2400      	movs	r4, #0
 800082e:	e69d      	b.n	800056c <__aeabi_fadd+0x44>
 8000830:	1c7a      	adds	r2, r7, #1
 8000832:	d0c6      	beq.n	80007c2 <__aeabi_fadd+0x29a>
 8000834:	43ff      	mvns	r7, r7
 8000836:	28ff      	cmp	r0, #255	; 0xff
 8000838:	d1b9      	bne.n	80007ae <__aeabi_fadd+0x286>
 800083a:	001d      	movs	r5, r3
 800083c:	e71d      	b.n	800067a <__aeabi_fadd+0x152>
 800083e:	2501      	movs	r5, #1
 8000840:	e73f      	b.n	80006c2 <__aeabi_fadd+0x19a>
 8000842:	1e15      	subs	r5, r2, #0
 8000844:	d000      	beq.n	8000848 <__aeabi_fadd+0x320>
 8000846:	e744      	b.n	80006d2 <__aeabi_fadd+0x1aa>
 8000848:	2200      	movs	r2, #0
 800084a:	2300      	movs	r3, #0
 800084c:	e691      	b.n	8000572 <__aeabi_fadd+0x4a>
 800084e:	2501      	movs	r5, #1
 8000850:	e7b7      	b.n	80007c2 <__aeabi_fadd+0x29a>
 8000852:	46c0      	nop			; (mov r8, r8)
 8000854:	7dffffff 	.word	0x7dffffff
 8000858:	fbffffff 	.word	0xfbffffff

0800085c <__eqsf2>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	0042      	lsls	r2, r0, #1
 8000860:	024e      	lsls	r6, r1, #9
 8000862:	004c      	lsls	r4, r1, #1
 8000864:	0245      	lsls	r5, r0, #9
 8000866:	0a6d      	lsrs	r5, r5, #9
 8000868:	0e12      	lsrs	r2, r2, #24
 800086a:	0fc3      	lsrs	r3, r0, #31
 800086c:	0a76      	lsrs	r6, r6, #9
 800086e:	0e24      	lsrs	r4, r4, #24
 8000870:	0fc9      	lsrs	r1, r1, #31
 8000872:	2aff      	cmp	r2, #255	; 0xff
 8000874:	d00f      	beq.n	8000896 <__eqsf2+0x3a>
 8000876:	2cff      	cmp	r4, #255	; 0xff
 8000878:	d011      	beq.n	800089e <__eqsf2+0x42>
 800087a:	2001      	movs	r0, #1
 800087c:	42a2      	cmp	r2, r4
 800087e:	d000      	beq.n	8000882 <__eqsf2+0x26>
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	42b5      	cmp	r5, r6
 8000884:	d1fc      	bne.n	8000880 <__eqsf2+0x24>
 8000886:	428b      	cmp	r3, r1
 8000888:	d00d      	beq.n	80008a6 <__eqsf2+0x4a>
 800088a:	2a00      	cmp	r2, #0
 800088c:	d1f8      	bne.n	8000880 <__eqsf2+0x24>
 800088e:	0028      	movs	r0, r5
 8000890:	1e45      	subs	r5, r0, #1
 8000892:	41a8      	sbcs	r0, r5
 8000894:	e7f4      	b.n	8000880 <__eqsf2+0x24>
 8000896:	2001      	movs	r0, #1
 8000898:	2d00      	cmp	r5, #0
 800089a:	d1f1      	bne.n	8000880 <__eqsf2+0x24>
 800089c:	e7eb      	b.n	8000876 <__eqsf2+0x1a>
 800089e:	2001      	movs	r0, #1
 80008a0:	2e00      	cmp	r6, #0
 80008a2:	d1ed      	bne.n	8000880 <__eqsf2+0x24>
 80008a4:	e7e9      	b.n	800087a <__eqsf2+0x1e>
 80008a6:	2000      	movs	r0, #0
 80008a8:	e7ea      	b.n	8000880 <__eqsf2+0x24>
 80008aa:	46c0      	nop			; (mov r8, r8)

080008ac <__gesf2>:
 80008ac:	b570      	push	{r4, r5, r6, lr}
 80008ae:	004a      	lsls	r2, r1, #1
 80008b0:	024e      	lsls	r6, r1, #9
 80008b2:	0245      	lsls	r5, r0, #9
 80008b4:	0044      	lsls	r4, r0, #1
 80008b6:	0a6d      	lsrs	r5, r5, #9
 80008b8:	0e24      	lsrs	r4, r4, #24
 80008ba:	0fc3      	lsrs	r3, r0, #31
 80008bc:	0a76      	lsrs	r6, r6, #9
 80008be:	0e12      	lsrs	r2, r2, #24
 80008c0:	0fc9      	lsrs	r1, r1, #31
 80008c2:	2cff      	cmp	r4, #255	; 0xff
 80008c4:	d015      	beq.n	80008f2 <__gesf2+0x46>
 80008c6:	2aff      	cmp	r2, #255	; 0xff
 80008c8:	d00e      	beq.n	80008e8 <__gesf2+0x3c>
 80008ca:	2c00      	cmp	r4, #0
 80008cc:	d115      	bne.n	80008fa <__gesf2+0x4e>
 80008ce:	2a00      	cmp	r2, #0
 80008d0:	d101      	bne.n	80008d6 <__gesf2+0x2a>
 80008d2:	2e00      	cmp	r6, #0
 80008d4:	d01c      	beq.n	8000910 <__gesf2+0x64>
 80008d6:	2d00      	cmp	r5, #0
 80008d8:	d014      	beq.n	8000904 <__gesf2+0x58>
 80008da:	428b      	cmp	r3, r1
 80008dc:	d027      	beq.n	800092e <__gesf2+0x82>
 80008de:	2002      	movs	r0, #2
 80008e0:	3b01      	subs	r3, #1
 80008e2:	4018      	ands	r0, r3
 80008e4:	3801      	subs	r0, #1
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	2e00      	cmp	r6, #0
 80008ea:	d0ee      	beq.n	80008ca <__gesf2+0x1e>
 80008ec:	2002      	movs	r0, #2
 80008ee:	4240      	negs	r0, r0
 80008f0:	e7f9      	b.n	80008e6 <__gesf2+0x3a>
 80008f2:	2d00      	cmp	r5, #0
 80008f4:	d1fa      	bne.n	80008ec <__gesf2+0x40>
 80008f6:	2aff      	cmp	r2, #255	; 0xff
 80008f8:	d00e      	beq.n	8000918 <__gesf2+0x6c>
 80008fa:	2a00      	cmp	r2, #0
 80008fc:	d10e      	bne.n	800091c <__gesf2+0x70>
 80008fe:	2e00      	cmp	r6, #0
 8000900:	d0ed      	beq.n	80008de <__gesf2+0x32>
 8000902:	e00b      	b.n	800091c <__gesf2+0x70>
 8000904:	2301      	movs	r3, #1
 8000906:	3901      	subs	r1, #1
 8000908:	4399      	bics	r1, r3
 800090a:	0008      	movs	r0, r1
 800090c:	3001      	adds	r0, #1
 800090e:	e7ea      	b.n	80008e6 <__gesf2+0x3a>
 8000910:	2000      	movs	r0, #0
 8000912:	2d00      	cmp	r5, #0
 8000914:	d0e7      	beq.n	80008e6 <__gesf2+0x3a>
 8000916:	e7e2      	b.n	80008de <__gesf2+0x32>
 8000918:	2e00      	cmp	r6, #0
 800091a:	d1e7      	bne.n	80008ec <__gesf2+0x40>
 800091c:	428b      	cmp	r3, r1
 800091e:	d1de      	bne.n	80008de <__gesf2+0x32>
 8000920:	4294      	cmp	r4, r2
 8000922:	dd05      	ble.n	8000930 <__gesf2+0x84>
 8000924:	2102      	movs	r1, #2
 8000926:	1e58      	subs	r0, r3, #1
 8000928:	4008      	ands	r0, r1
 800092a:	3801      	subs	r0, #1
 800092c:	e7db      	b.n	80008e6 <__gesf2+0x3a>
 800092e:	2400      	movs	r4, #0
 8000930:	42a2      	cmp	r2, r4
 8000932:	dc04      	bgt.n	800093e <__gesf2+0x92>
 8000934:	42b5      	cmp	r5, r6
 8000936:	d8d2      	bhi.n	80008de <__gesf2+0x32>
 8000938:	2000      	movs	r0, #0
 800093a:	42b5      	cmp	r5, r6
 800093c:	d2d3      	bcs.n	80008e6 <__gesf2+0x3a>
 800093e:	1e58      	subs	r0, r3, #1
 8000940:	2301      	movs	r3, #1
 8000942:	4398      	bics	r0, r3
 8000944:	3001      	adds	r0, #1
 8000946:	e7ce      	b.n	80008e6 <__gesf2+0x3a>

08000948 <__lesf2>:
 8000948:	b530      	push	{r4, r5, lr}
 800094a:	0042      	lsls	r2, r0, #1
 800094c:	0244      	lsls	r4, r0, #9
 800094e:	024d      	lsls	r5, r1, #9
 8000950:	0fc3      	lsrs	r3, r0, #31
 8000952:	0048      	lsls	r0, r1, #1
 8000954:	0a64      	lsrs	r4, r4, #9
 8000956:	0e12      	lsrs	r2, r2, #24
 8000958:	0a6d      	lsrs	r5, r5, #9
 800095a:	0e00      	lsrs	r0, r0, #24
 800095c:	0fc9      	lsrs	r1, r1, #31
 800095e:	2aff      	cmp	r2, #255	; 0xff
 8000960:	d012      	beq.n	8000988 <__lesf2+0x40>
 8000962:	28ff      	cmp	r0, #255	; 0xff
 8000964:	d00c      	beq.n	8000980 <__lesf2+0x38>
 8000966:	2a00      	cmp	r2, #0
 8000968:	d112      	bne.n	8000990 <__lesf2+0x48>
 800096a:	2800      	cmp	r0, #0
 800096c:	d119      	bne.n	80009a2 <__lesf2+0x5a>
 800096e:	2d00      	cmp	r5, #0
 8000970:	d117      	bne.n	80009a2 <__lesf2+0x5a>
 8000972:	2c00      	cmp	r4, #0
 8000974:	d02b      	beq.n	80009ce <__lesf2+0x86>
 8000976:	2002      	movs	r0, #2
 8000978:	3b01      	subs	r3, #1
 800097a:	4018      	ands	r0, r3
 800097c:	3801      	subs	r0, #1
 800097e:	e026      	b.n	80009ce <__lesf2+0x86>
 8000980:	2d00      	cmp	r5, #0
 8000982:	d0f0      	beq.n	8000966 <__lesf2+0x1e>
 8000984:	2002      	movs	r0, #2
 8000986:	e022      	b.n	80009ce <__lesf2+0x86>
 8000988:	2c00      	cmp	r4, #0
 800098a:	d1fb      	bne.n	8000984 <__lesf2+0x3c>
 800098c:	28ff      	cmp	r0, #255	; 0xff
 800098e:	d01f      	beq.n	80009d0 <__lesf2+0x88>
 8000990:	2800      	cmp	r0, #0
 8000992:	d11f      	bne.n	80009d4 <__lesf2+0x8c>
 8000994:	2d00      	cmp	r5, #0
 8000996:	d11d      	bne.n	80009d4 <__lesf2+0x8c>
 8000998:	2002      	movs	r0, #2
 800099a:	3b01      	subs	r3, #1
 800099c:	4018      	ands	r0, r3
 800099e:	3801      	subs	r0, #1
 80009a0:	e015      	b.n	80009ce <__lesf2+0x86>
 80009a2:	2c00      	cmp	r4, #0
 80009a4:	d00e      	beq.n	80009c4 <__lesf2+0x7c>
 80009a6:	428b      	cmp	r3, r1
 80009a8:	d1e5      	bne.n	8000976 <__lesf2+0x2e>
 80009aa:	2200      	movs	r2, #0
 80009ac:	4290      	cmp	r0, r2
 80009ae:	dc04      	bgt.n	80009ba <__lesf2+0x72>
 80009b0:	42ac      	cmp	r4, r5
 80009b2:	d8e0      	bhi.n	8000976 <__lesf2+0x2e>
 80009b4:	2000      	movs	r0, #0
 80009b6:	42ac      	cmp	r4, r5
 80009b8:	d209      	bcs.n	80009ce <__lesf2+0x86>
 80009ba:	1e58      	subs	r0, r3, #1
 80009bc:	2301      	movs	r3, #1
 80009be:	4398      	bics	r0, r3
 80009c0:	3001      	adds	r0, #1
 80009c2:	e004      	b.n	80009ce <__lesf2+0x86>
 80009c4:	2301      	movs	r3, #1
 80009c6:	3901      	subs	r1, #1
 80009c8:	4399      	bics	r1, r3
 80009ca:	0008      	movs	r0, r1
 80009cc:	3001      	adds	r0, #1
 80009ce:	bd30      	pop	{r4, r5, pc}
 80009d0:	2d00      	cmp	r5, #0
 80009d2:	d1d7      	bne.n	8000984 <__lesf2+0x3c>
 80009d4:	428b      	cmp	r3, r1
 80009d6:	d1ce      	bne.n	8000976 <__lesf2+0x2e>
 80009d8:	4282      	cmp	r2, r0
 80009da:	dde7      	ble.n	80009ac <__lesf2+0x64>
 80009dc:	2102      	movs	r1, #2
 80009de:	1e58      	subs	r0, r3, #1
 80009e0:	4008      	ands	r0, r1
 80009e2:	3801      	subs	r0, #1
 80009e4:	e7f3      	b.n	80009ce <__lesf2+0x86>
 80009e6:	46c0      	nop			; (mov r8, r8)

080009e8 <__aeabi_fmul>:
 80009e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009ea:	464e      	mov	r6, r9
 80009ec:	4657      	mov	r7, sl
 80009ee:	4645      	mov	r5, r8
 80009f0:	46de      	mov	lr, fp
 80009f2:	b5e0      	push	{r5, r6, r7, lr}
 80009f4:	0243      	lsls	r3, r0, #9
 80009f6:	0a5b      	lsrs	r3, r3, #9
 80009f8:	0045      	lsls	r5, r0, #1
 80009fa:	b083      	sub	sp, #12
 80009fc:	1c0f      	adds	r7, r1, #0
 80009fe:	4699      	mov	r9, r3
 8000a00:	0e2d      	lsrs	r5, r5, #24
 8000a02:	0fc6      	lsrs	r6, r0, #31
 8000a04:	2d00      	cmp	r5, #0
 8000a06:	d057      	beq.n	8000ab8 <__aeabi_fmul+0xd0>
 8000a08:	2dff      	cmp	r5, #255	; 0xff
 8000a0a:	d024      	beq.n	8000a56 <__aeabi_fmul+0x6e>
 8000a0c:	2080      	movs	r0, #128	; 0x80
 8000a0e:	00db      	lsls	r3, r3, #3
 8000a10:	04c0      	lsls	r0, r0, #19
 8000a12:	4318      	orrs	r0, r3
 8000a14:	2300      	movs	r3, #0
 8000a16:	4681      	mov	r9, r0
 8000a18:	469a      	mov	sl, r3
 8000a1a:	469b      	mov	fp, r3
 8000a1c:	3d7f      	subs	r5, #127	; 0x7f
 8000a1e:	027c      	lsls	r4, r7, #9
 8000a20:	007a      	lsls	r2, r7, #1
 8000a22:	0ffb      	lsrs	r3, r7, #31
 8000a24:	0a64      	lsrs	r4, r4, #9
 8000a26:	0e12      	lsrs	r2, r2, #24
 8000a28:	4698      	mov	r8, r3
 8000a2a:	d023      	beq.n	8000a74 <__aeabi_fmul+0x8c>
 8000a2c:	2aff      	cmp	r2, #255	; 0xff
 8000a2e:	d04b      	beq.n	8000ac8 <__aeabi_fmul+0xe0>
 8000a30:	00e3      	lsls	r3, r4, #3
 8000a32:	2480      	movs	r4, #128	; 0x80
 8000a34:	2000      	movs	r0, #0
 8000a36:	04e4      	lsls	r4, r4, #19
 8000a38:	3a7f      	subs	r2, #127	; 0x7f
 8000a3a:	431c      	orrs	r4, r3
 8000a3c:	18ad      	adds	r5, r5, r2
 8000a3e:	1c6b      	adds	r3, r5, #1
 8000a40:	4647      	mov	r7, r8
 8000a42:	9301      	str	r3, [sp, #4]
 8000a44:	4653      	mov	r3, sl
 8000a46:	4077      	eors	r7, r6
 8000a48:	003a      	movs	r2, r7
 8000a4a:	2b0f      	cmp	r3, #15
 8000a4c:	d848      	bhi.n	8000ae0 <__aeabi_fmul+0xf8>
 8000a4e:	497d      	ldr	r1, [pc, #500]	; (8000c44 <__aeabi_fmul+0x25c>)
 8000a50:	009b      	lsls	r3, r3, #2
 8000a52:	58cb      	ldr	r3, [r1, r3]
 8000a54:	469f      	mov	pc, r3
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d000      	beq.n	8000a5c <__aeabi_fmul+0x74>
 8000a5a:	e085      	b.n	8000b68 <__aeabi_fmul+0x180>
 8000a5c:	3308      	adds	r3, #8
 8000a5e:	469a      	mov	sl, r3
 8000a60:	3b06      	subs	r3, #6
 8000a62:	469b      	mov	fp, r3
 8000a64:	027c      	lsls	r4, r7, #9
 8000a66:	007a      	lsls	r2, r7, #1
 8000a68:	0ffb      	lsrs	r3, r7, #31
 8000a6a:	25ff      	movs	r5, #255	; 0xff
 8000a6c:	0a64      	lsrs	r4, r4, #9
 8000a6e:	0e12      	lsrs	r2, r2, #24
 8000a70:	4698      	mov	r8, r3
 8000a72:	d1db      	bne.n	8000a2c <__aeabi_fmul+0x44>
 8000a74:	2c00      	cmp	r4, #0
 8000a76:	d000      	beq.n	8000a7a <__aeabi_fmul+0x92>
 8000a78:	e090      	b.n	8000b9c <__aeabi_fmul+0x1b4>
 8000a7a:	4652      	mov	r2, sl
 8000a7c:	2301      	movs	r3, #1
 8000a7e:	431a      	orrs	r2, r3
 8000a80:	4692      	mov	sl, r2
 8000a82:	2001      	movs	r0, #1
 8000a84:	e7db      	b.n	8000a3e <__aeabi_fmul+0x56>
 8000a86:	464c      	mov	r4, r9
 8000a88:	4658      	mov	r0, fp
 8000a8a:	0017      	movs	r7, r2
 8000a8c:	2802      	cmp	r0, #2
 8000a8e:	d024      	beq.n	8000ada <__aeabi_fmul+0xf2>
 8000a90:	2803      	cmp	r0, #3
 8000a92:	d100      	bne.n	8000a96 <__aeabi_fmul+0xae>
 8000a94:	e0cf      	b.n	8000c36 <__aeabi_fmul+0x24e>
 8000a96:	2200      	movs	r2, #0
 8000a98:	2300      	movs	r3, #0
 8000a9a:	2801      	cmp	r0, #1
 8000a9c:	d14d      	bne.n	8000b3a <__aeabi_fmul+0x152>
 8000a9e:	0258      	lsls	r0, r3, #9
 8000aa0:	05d2      	lsls	r2, r2, #23
 8000aa2:	0a40      	lsrs	r0, r0, #9
 8000aa4:	07ff      	lsls	r7, r7, #31
 8000aa6:	4310      	orrs	r0, r2
 8000aa8:	4338      	orrs	r0, r7
 8000aaa:	b003      	add	sp, #12
 8000aac:	bc3c      	pop	{r2, r3, r4, r5}
 8000aae:	4690      	mov	r8, r2
 8000ab0:	4699      	mov	r9, r3
 8000ab2:	46a2      	mov	sl, r4
 8000ab4:	46ab      	mov	fp, r5
 8000ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d15b      	bne.n	8000b74 <__aeabi_fmul+0x18c>
 8000abc:	2304      	movs	r3, #4
 8000abe:	469a      	mov	sl, r3
 8000ac0:	3b03      	subs	r3, #3
 8000ac2:	2500      	movs	r5, #0
 8000ac4:	469b      	mov	fp, r3
 8000ac6:	e7aa      	b.n	8000a1e <__aeabi_fmul+0x36>
 8000ac8:	35ff      	adds	r5, #255	; 0xff
 8000aca:	2c00      	cmp	r4, #0
 8000acc:	d160      	bne.n	8000b90 <__aeabi_fmul+0x1a8>
 8000ace:	4652      	mov	r2, sl
 8000ad0:	2302      	movs	r3, #2
 8000ad2:	431a      	orrs	r2, r3
 8000ad4:	4692      	mov	sl, r2
 8000ad6:	2002      	movs	r0, #2
 8000ad8:	e7b1      	b.n	8000a3e <__aeabi_fmul+0x56>
 8000ada:	22ff      	movs	r2, #255	; 0xff
 8000adc:	2300      	movs	r3, #0
 8000ade:	e7de      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000ae0:	464b      	mov	r3, r9
 8000ae2:	0c1b      	lsrs	r3, r3, #16
 8000ae4:	469c      	mov	ip, r3
 8000ae6:	464b      	mov	r3, r9
 8000ae8:	0426      	lsls	r6, r4, #16
 8000aea:	0c36      	lsrs	r6, r6, #16
 8000aec:	0418      	lsls	r0, r3, #16
 8000aee:	4661      	mov	r1, ip
 8000af0:	0033      	movs	r3, r6
 8000af2:	0c22      	lsrs	r2, r4, #16
 8000af4:	4664      	mov	r4, ip
 8000af6:	0c00      	lsrs	r0, r0, #16
 8000af8:	4343      	muls	r3, r0
 8000afa:	434e      	muls	r6, r1
 8000afc:	4350      	muls	r0, r2
 8000afe:	4354      	muls	r4, r2
 8000b00:	1980      	adds	r0, r0, r6
 8000b02:	0c1a      	lsrs	r2, r3, #16
 8000b04:	1812      	adds	r2, r2, r0
 8000b06:	4296      	cmp	r6, r2
 8000b08:	d903      	bls.n	8000b12 <__aeabi_fmul+0x12a>
 8000b0a:	2180      	movs	r1, #128	; 0x80
 8000b0c:	0249      	lsls	r1, r1, #9
 8000b0e:	468c      	mov	ip, r1
 8000b10:	4464      	add	r4, ip
 8000b12:	041b      	lsls	r3, r3, #16
 8000b14:	0c1b      	lsrs	r3, r3, #16
 8000b16:	0410      	lsls	r0, r2, #16
 8000b18:	18c0      	adds	r0, r0, r3
 8000b1a:	0183      	lsls	r3, r0, #6
 8000b1c:	1e5e      	subs	r6, r3, #1
 8000b1e:	41b3      	sbcs	r3, r6
 8000b20:	0e80      	lsrs	r0, r0, #26
 8000b22:	4318      	orrs	r0, r3
 8000b24:	0c13      	lsrs	r3, r2, #16
 8000b26:	191b      	adds	r3, r3, r4
 8000b28:	019b      	lsls	r3, r3, #6
 8000b2a:	4303      	orrs	r3, r0
 8000b2c:	001c      	movs	r4, r3
 8000b2e:	0123      	lsls	r3, r4, #4
 8000b30:	d579      	bpl.n	8000c26 <__aeabi_fmul+0x23e>
 8000b32:	2301      	movs	r3, #1
 8000b34:	0862      	lsrs	r2, r4, #1
 8000b36:	401c      	ands	r4, r3
 8000b38:	4314      	orrs	r4, r2
 8000b3a:	9a01      	ldr	r2, [sp, #4]
 8000b3c:	327f      	adds	r2, #127	; 0x7f
 8000b3e:	2a00      	cmp	r2, #0
 8000b40:	dd4d      	ble.n	8000bde <__aeabi_fmul+0x1f6>
 8000b42:	0763      	lsls	r3, r4, #29
 8000b44:	d004      	beq.n	8000b50 <__aeabi_fmul+0x168>
 8000b46:	230f      	movs	r3, #15
 8000b48:	4023      	ands	r3, r4
 8000b4a:	2b04      	cmp	r3, #4
 8000b4c:	d000      	beq.n	8000b50 <__aeabi_fmul+0x168>
 8000b4e:	3404      	adds	r4, #4
 8000b50:	0123      	lsls	r3, r4, #4
 8000b52:	d503      	bpl.n	8000b5c <__aeabi_fmul+0x174>
 8000b54:	4b3c      	ldr	r3, [pc, #240]	; (8000c48 <__aeabi_fmul+0x260>)
 8000b56:	9a01      	ldr	r2, [sp, #4]
 8000b58:	401c      	ands	r4, r3
 8000b5a:	3280      	adds	r2, #128	; 0x80
 8000b5c:	2afe      	cmp	r2, #254	; 0xfe
 8000b5e:	dcbc      	bgt.n	8000ada <__aeabi_fmul+0xf2>
 8000b60:	01a3      	lsls	r3, r4, #6
 8000b62:	0a5b      	lsrs	r3, r3, #9
 8000b64:	b2d2      	uxtb	r2, r2
 8000b66:	e79a      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000b68:	230c      	movs	r3, #12
 8000b6a:	469a      	mov	sl, r3
 8000b6c:	3b09      	subs	r3, #9
 8000b6e:	25ff      	movs	r5, #255	; 0xff
 8000b70:	469b      	mov	fp, r3
 8000b72:	e754      	b.n	8000a1e <__aeabi_fmul+0x36>
 8000b74:	0018      	movs	r0, r3
 8000b76:	f002 f88f 	bl	8002c98 <__clzsi2>
 8000b7a:	464a      	mov	r2, r9
 8000b7c:	1f43      	subs	r3, r0, #5
 8000b7e:	2576      	movs	r5, #118	; 0x76
 8000b80:	409a      	lsls	r2, r3
 8000b82:	2300      	movs	r3, #0
 8000b84:	426d      	negs	r5, r5
 8000b86:	4691      	mov	r9, r2
 8000b88:	1a2d      	subs	r5, r5, r0
 8000b8a:	469a      	mov	sl, r3
 8000b8c:	469b      	mov	fp, r3
 8000b8e:	e746      	b.n	8000a1e <__aeabi_fmul+0x36>
 8000b90:	4652      	mov	r2, sl
 8000b92:	2303      	movs	r3, #3
 8000b94:	431a      	orrs	r2, r3
 8000b96:	4692      	mov	sl, r2
 8000b98:	2003      	movs	r0, #3
 8000b9a:	e750      	b.n	8000a3e <__aeabi_fmul+0x56>
 8000b9c:	0020      	movs	r0, r4
 8000b9e:	f002 f87b 	bl	8002c98 <__clzsi2>
 8000ba2:	1f43      	subs	r3, r0, #5
 8000ba4:	1a2d      	subs	r5, r5, r0
 8000ba6:	409c      	lsls	r4, r3
 8000ba8:	3d76      	subs	r5, #118	; 0x76
 8000baa:	2000      	movs	r0, #0
 8000bac:	e747      	b.n	8000a3e <__aeabi_fmul+0x56>
 8000bae:	2380      	movs	r3, #128	; 0x80
 8000bb0:	2700      	movs	r7, #0
 8000bb2:	03db      	lsls	r3, r3, #15
 8000bb4:	22ff      	movs	r2, #255	; 0xff
 8000bb6:	e772      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000bb8:	4642      	mov	r2, r8
 8000bba:	e766      	b.n	8000a8a <__aeabi_fmul+0xa2>
 8000bbc:	464c      	mov	r4, r9
 8000bbe:	0032      	movs	r2, r6
 8000bc0:	4658      	mov	r0, fp
 8000bc2:	e762      	b.n	8000a8a <__aeabi_fmul+0xa2>
 8000bc4:	2380      	movs	r3, #128	; 0x80
 8000bc6:	464a      	mov	r2, r9
 8000bc8:	03db      	lsls	r3, r3, #15
 8000bca:	421a      	tst	r2, r3
 8000bcc:	d022      	beq.n	8000c14 <__aeabi_fmul+0x22c>
 8000bce:	421c      	tst	r4, r3
 8000bd0:	d120      	bne.n	8000c14 <__aeabi_fmul+0x22c>
 8000bd2:	4323      	orrs	r3, r4
 8000bd4:	025b      	lsls	r3, r3, #9
 8000bd6:	0a5b      	lsrs	r3, r3, #9
 8000bd8:	4647      	mov	r7, r8
 8000bda:	22ff      	movs	r2, #255	; 0xff
 8000bdc:	e75f      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000bde:	2301      	movs	r3, #1
 8000be0:	1a9a      	subs	r2, r3, r2
 8000be2:	2a1b      	cmp	r2, #27
 8000be4:	dc21      	bgt.n	8000c2a <__aeabi_fmul+0x242>
 8000be6:	0023      	movs	r3, r4
 8000be8:	9901      	ldr	r1, [sp, #4]
 8000bea:	40d3      	lsrs	r3, r2
 8000bec:	319e      	adds	r1, #158	; 0x9e
 8000bee:	408c      	lsls	r4, r1
 8000bf0:	001a      	movs	r2, r3
 8000bf2:	0023      	movs	r3, r4
 8000bf4:	1e5c      	subs	r4, r3, #1
 8000bf6:	41a3      	sbcs	r3, r4
 8000bf8:	4313      	orrs	r3, r2
 8000bfa:	075a      	lsls	r2, r3, #29
 8000bfc:	d004      	beq.n	8000c08 <__aeabi_fmul+0x220>
 8000bfe:	220f      	movs	r2, #15
 8000c00:	401a      	ands	r2, r3
 8000c02:	2a04      	cmp	r2, #4
 8000c04:	d000      	beq.n	8000c08 <__aeabi_fmul+0x220>
 8000c06:	3304      	adds	r3, #4
 8000c08:	015a      	lsls	r2, r3, #5
 8000c0a:	d411      	bmi.n	8000c30 <__aeabi_fmul+0x248>
 8000c0c:	019b      	lsls	r3, r3, #6
 8000c0e:	0a5b      	lsrs	r3, r3, #9
 8000c10:	2200      	movs	r2, #0
 8000c12:	e744      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000c14:	2380      	movs	r3, #128	; 0x80
 8000c16:	464a      	mov	r2, r9
 8000c18:	03db      	lsls	r3, r3, #15
 8000c1a:	4313      	orrs	r3, r2
 8000c1c:	025b      	lsls	r3, r3, #9
 8000c1e:	0a5b      	lsrs	r3, r3, #9
 8000c20:	0037      	movs	r7, r6
 8000c22:	22ff      	movs	r2, #255	; 0xff
 8000c24:	e73b      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000c26:	9501      	str	r5, [sp, #4]
 8000c28:	e787      	b.n	8000b3a <__aeabi_fmul+0x152>
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	e736      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000c30:	2201      	movs	r2, #1
 8000c32:	2300      	movs	r3, #0
 8000c34:	e733      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000c36:	2380      	movs	r3, #128	; 0x80
 8000c38:	03db      	lsls	r3, r3, #15
 8000c3a:	4323      	orrs	r3, r4
 8000c3c:	025b      	lsls	r3, r3, #9
 8000c3e:	0a5b      	lsrs	r3, r3, #9
 8000c40:	22ff      	movs	r2, #255	; 0xff
 8000c42:	e72c      	b.n	8000a9e <__aeabi_fmul+0xb6>
 8000c44:	08006300 	.word	0x08006300
 8000c48:	f7ffffff 	.word	0xf7ffffff

08000c4c <__aeabi_fsub>:
 8000c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c4e:	4647      	mov	r7, r8
 8000c50:	46ce      	mov	lr, r9
 8000c52:	0044      	lsls	r4, r0, #1
 8000c54:	0fc2      	lsrs	r2, r0, #31
 8000c56:	b580      	push	{r7, lr}
 8000c58:	0247      	lsls	r7, r0, #9
 8000c5a:	0248      	lsls	r0, r1, #9
 8000c5c:	0a40      	lsrs	r0, r0, #9
 8000c5e:	4684      	mov	ip, r0
 8000c60:	4666      	mov	r6, ip
 8000c62:	0048      	lsls	r0, r1, #1
 8000c64:	0a7f      	lsrs	r7, r7, #9
 8000c66:	0e24      	lsrs	r4, r4, #24
 8000c68:	00f6      	lsls	r6, r6, #3
 8000c6a:	0025      	movs	r5, r4
 8000c6c:	4690      	mov	r8, r2
 8000c6e:	00fb      	lsls	r3, r7, #3
 8000c70:	0e00      	lsrs	r0, r0, #24
 8000c72:	0fc9      	lsrs	r1, r1, #31
 8000c74:	46b1      	mov	r9, r6
 8000c76:	28ff      	cmp	r0, #255	; 0xff
 8000c78:	d100      	bne.n	8000c7c <__aeabi_fsub+0x30>
 8000c7a:	e085      	b.n	8000d88 <__aeabi_fsub+0x13c>
 8000c7c:	2601      	movs	r6, #1
 8000c7e:	4071      	eors	r1, r6
 8000c80:	1a26      	subs	r6, r4, r0
 8000c82:	4291      	cmp	r1, r2
 8000c84:	d057      	beq.n	8000d36 <__aeabi_fsub+0xea>
 8000c86:	2e00      	cmp	r6, #0
 8000c88:	dd43      	ble.n	8000d12 <__aeabi_fsub+0xc6>
 8000c8a:	2800      	cmp	r0, #0
 8000c8c:	d000      	beq.n	8000c90 <__aeabi_fsub+0x44>
 8000c8e:	e07f      	b.n	8000d90 <__aeabi_fsub+0x144>
 8000c90:	4649      	mov	r1, r9
 8000c92:	2900      	cmp	r1, #0
 8000c94:	d100      	bne.n	8000c98 <__aeabi_fsub+0x4c>
 8000c96:	e0aa      	b.n	8000dee <__aeabi_fsub+0x1a2>
 8000c98:	3e01      	subs	r6, #1
 8000c9a:	2e00      	cmp	r6, #0
 8000c9c:	d000      	beq.n	8000ca0 <__aeabi_fsub+0x54>
 8000c9e:	e0f7      	b.n	8000e90 <__aeabi_fsub+0x244>
 8000ca0:	1a5b      	subs	r3, r3, r1
 8000ca2:	015a      	lsls	r2, r3, #5
 8000ca4:	d400      	bmi.n	8000ca8 <__aeabi_fsub+0x5c>
 8000ca6:	e08b      	b.n	8000dc0 <__aeabi_fsub+0x174>
 8000ca8:	019b      	lsls	r3, r3, #6
 8000caa:	099c      	lsrs	r4, r3, #6
 8000cac:	0020      	movs	r0, r4
 8000cae:	f001 fff3 	bl	8002c98 <__clzsi2>
 8000cb2:	3805      	subs	r0, #5
 8000cb4:	4084      	lsls	r4, r0
 8000cb6:	4285      	cmp	r5, r0
 8000cb8:	dd00      	ble.n	8000cbc <__aeabi_fsub+0x70>
 8000cba:	e0d3      	b.n	8000e64 <__aeabi_fsub+0x218>
 8000cbc:	1b45      	subs	r5, r0, r5
 8000cbe:	0023      	movs	r3, r4
 8000cc0:	2020      	movs	r0, #32
 8000cc2:	3501      	adds	r5, #1
 8000cc4:	40eb      	lsrs	r3, r5
 8000cc6:	1b45      	subs	r5, r0, r5
 8000cc8:	40ac      	lsls	r4, r5
 8000cca:	1e62      	subs	r2, r4, #1
 8000ccc:	4194      	sbcs	r4, r2
 8000cce:	4323      	orrs	r3, r4
 8000cd0:	2407      	movs	r4, #7
 8000cd2:	2500      	movs	r5, #0
 8000cd4:	401c      	ands	r4, r3
 8000cd6:	2201      	movs	r2, #1
 8000cd8:	4641      	mov	r1, r8
 8000cda:	400a      	ands	r2, r1
 8000cdc:	2c00      	cmp	r4, #0
 8000cde:	d004      	beq.n	8000cea <__aeabi_fsub+0x9e>
 8000ce0:	210f      	movs	r1, #15
 8000ce2:	4019      	ands	r1, r3
 8000ce4:	2904      	cmp	r1, #4
 8000ce6:	d000      	beq.n	8000cea <__aeabi_fsub+0x9e>
 8000ce8:	3304      	adds	r3, #4
 8000cea:	0159      	lsls	r1, r3, #5
 8000cec:	d400      	bmi.n	8000cf0 <__aeabi_fsub+0xa4>
 8000cee:	e080      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000cf0:	3501      	adds	r5, #1
 8000cf2:	b2ec      	uxtb	r4, r5
 8000cf4:	2dff      	cmp	r5, #255	; 0xff
 8000cf6:	d000      	beq.n	8000cfa <__aeabi_fsub+0xae>
 8000cf8:	e0a3      	b.n	8000e42 <__aeabi_fsub+0x1f6>
 8000cfa:	24ff      	movs	r4, #255	; 0xff
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	025b      	lsls	r3, r3, #9
 8000d00:	05e4      	lsls	r4, r4, #23
 8000d02:	0a58      	lsrs	r0, r3, #9
 8000d04:	07d2      	lsls	r2, r2, #31
 8000d06:	4320      	orrs	r0, r4
 8000d08:	4310      	orrs	r0, r2
 8000d0a:	bc0c      	pop	{r2, r3}
 8000d0c:	4690      	mov	r8, r2
 8000d0e:	4699      	mov	r9, r3
 8000d10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d12:	2e00      	cmp	r6, #0
 8000d14:	d174      	bne.n	8000e00 <__aeabi_fsub+0x1b4>
 8000d16:	1c60      	adds	r0, r4, #1
 8000d18:	b2c0      	uxtb	r0, r0
 8000d1a:	2801      	cmp	r0, #1
 8000d1c:	dc00      	bgt.n	8000d20 <__aeabi_fsub+0xd4>
 8000d1e:	e0a7      	b.n	8000e70 <__aeabi_fsub+0x224>
 8000d20:	464a      	mov	r2, r9
 8000d22:	1a9c      	subs	r4, r3, r2
 8000d24:	0162      	lsls	r2, r4, #5
 8000d26:	d500      	bpl.n	8000d2a <__aeabi_fsub+0xde>
 8000d28:	e0b6      	b.n	8000e98 <__aeabi_fsub+0x24c>
 8000d2a:	2c00      	cmp	r4, #0
 8000d2c:	d1be      	bne.n	8000cac <__aeabi_fsub+0x60>
 8000d2e:	2200      	movs	r2, #0
 8000d30:	2400      	movs	r4, #0
 8000d32:	2300      	movs	r3, #0
 8000d34:	e7e3      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000d36:	2e00      	cmp	r6, #0
 8000d38:	dc00      	bgt.n	8000d3c <__aeabi_fsub+0xf0>
 8000d3a:	e085      	b.n	8000e48 <__aeabi_fsub+0x1fc>
 8000d3c:	2800      	cmp	r0, #0
 8000d3e:	d046      	beq.n	8000dce <__aeabi_fsub+0x182>
 8000d40:	2cff      	cmp	r4, #255	; 0xff
 8000d42:	d049      	beq.n	8000dd8 <__aeabi_fsub+0x18c>
 8000d44:	2280      	movs	r2, #128	; 0x80
 8000d46:	4648      	mov	r0, r9
 8000d48:	04d2      	lsls	r2, r2, #19
 8000d4a:	4310      	orrs	r0, r2
 8000d4c:	4681      	mov	r9, r0
 8000d4e:	2201      	movs	r2, #1
 8000d50:	2e1b      	cmp	r6, #27
 8000d52:	dc09      	bgt.n	8000d68 <__aeabi_fsub+0x11c>
 8000d54:	2020      	movs	r0, #32
 8000d56:	464c      	mov	r4, r9
 8000d58:	1b80      	subs	r0, r0, r6
 8000d5a:	4084      	lsls	r4, r0
 8000d5c:	464a      	mov	r2, r9
 8000d5e:	0020      	movs	r0, r4
 8000d60:	40f2      	lsrs	r2, r6
 8000d62:	1e44      	subs	r4, r0, #1
 8000d64:	41a0      	sbcs	r0, r4
 8000d66:	4302      	orrs	r2, r0
 8000d68:	189b      	adds	r3, r3, r2
 8000d6a:	015a      	lsls	r2, r3, #5
 8000d6c:	d528      	bpl.n	8000dc0 <__aeabi_fsub+0x174>
 8000d6e:	3501      	adds	r5, #1
 8000d70:	2dff      	cmp	r5, #255	; 0xff
 8000d72:	d100      	bne.n	8000d76 <__aeabi_fsub+0x12a>
 8000d74:	e0a8      	b.n	8000ec8 <__aeabi_fsub+0x27c>
 8000d76:	2201      	movs	r2, #1
 8000d78:	2407      	movs	r4, #7
 8000d7a:	4994      	ldr	r1, [pc, #592]	; (8000fcc <__aeabi_fsub+0x380>)
 8000d7c:	401a      	ands	r2, r3
 8000d7e:	085b      	lsrs	r3, r3, #1
 8000d80:	400b      	ands	r3, r1
 8000d82:	4313      	orrs	r3, r2
 8000d84:	401c      	ands	r4, r3
 8000d86:	e7a6      	b.n	8000cd6 <__aeabi_fsub+0x8a>
 8000d88:	2e00      	cmp	r6, #0
 8000d8a:	d000      	beq.n	8000d8e <__aeabi_fsub+0x142>
 8000d8c:	e778      	b.n	8000c80 <__aeabi_fsub+0x34>
 8000d8e:	e775      	b.n	8000c7c <__aeabi_fsub+0x30>
 8000d90:	2cff      	cmp	r4, #255	; 0xff
 8000d92:	d054      	beq.n	8000e3e <__aeabi_fsub+0x1f2>
 8000d94:	2280      	movs	r2, #128	; 0x80
 8000d96:	4649      	mov	r1, r9
 8000d98:	04d2      	lsls	r2, r2, #19
 8000d9a:	4311      	orrs	r1, r2
 8000d9c:	4689      	mov	r9, r1
 8000d9e:	2201      	movs	r2, #1
 8000da0:	2e1b      	cmp	r6, #27
 8000da2:	dc09      	bgt.n	8000db8 <__aeabi_fsub+0x16c>
 8000da4:	2120      	movs	r1, #32
 8000da6:	4648      	mov	r0, r9
 8000da8:	1b89      	subs	r1, r1, r6
 8000daa:	4088      	lsls	r0, r1
 8000dac:	464a      	mov	r2, r9
 8000dae:	0001      	movs	r1, r0
 8000db0:	40f2      	lsrs	r2, r6
 8000db2:	1e48      	subs	r0, r1, #1
 8000db4:	4181      	sbcs	r1, r0
 8000db6:	430a      	orrs	r2, r1
 8000db8:	1a9b      	subs	r3, r3, r2
 8000dba:	015a      	lsls	r2, r3, #5
 8000dbc:	d500      	bpl.n	8000dc0 <__aeabi_fsub+0x174>
 8000dbe:	e773      	b.n	8000ca8 <__aeabi_fsub+0x5c>
 8000dc0:	2201      	movs	r2, #1
 8000dc2:	4641      	mov	r1, r8
 8000dc4:	400a      	ands	r2, r1
 8000dc6:	0759      	lsls	r1, r3, #29
 8000dc8:	d000      	beq.n	8000dcc <__aeabi_fsub+0x180>
 8000dca:	e789      	b.n	8000ce0 <__aeabi_fsub+0x94>
 8000dcc:	e011      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000dce:	4648      	mov	r0, r9
 8000dd0:	2800      	cmp	r0, #0
 8000dd2:	d158      	bne.n	8000e86 <__aeabi_fsub+0x23a>
 8000dd4:	2cff      	cmp	r4, #255	; 0xff
 8000dd6:	d10c      	bne.n	8000df2 <__aeabi_fsub+0x1a6>
 8000dd8:	08db      	lsrs	r3, r3, #3
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	d100      	bne.n	8000de0 <__aeabi_fsub+0x194>
 8000dde:	e78c      	b.n	8000cfa <__aeabi_fsub+0xae>
 8000de0:	2080      	movs	r0, #128	; 0x80
 8000de2:	03c0      	lsls	r0, r0, #15
 8000de4:	4303      	orrs	r3, r0
 8000de6:	025b      	lsls	r3, r3, #9
 8000de8:	0a5b      	lsrs	r3, r3, #9
 8000dea:	24ff      	movs	r4, #255	; 0xff
 8000dec:	e787      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000dee:	2cff      	cmp	r4, #255	; 0xff
 8000df0:	d025      	beq.n	8000e3e <__aeabi_fsub+0x1f2>
 8000df2:	08db      	lsrs	r3, r3, #3
 8000df4:	2dff      	cmp	r5, #255	; 0xff
 8000df6:	d0f0      	beq.n	8000dda <__aeabi_fsub+0x18e>
 8000df8:	025b      	lsls	r3, r3, #9
 8000dfa:	0a5b      	lsrs	r3, r3, #9
 8000dfc:	b2ec      	uxtb	r4, r5
 8000dfe:	e77e      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000e00:	2c00      	cmp	r4, #0
 8000e02:	d04d      	beq.n	8000ea0 <__aeabi_fsub+0x254>
 8000e04:	28ff      	cmp	r0, #255	; 0xff
 8000e06:	d018      	beq.n	8000e3a <__aeabi_fsub+0x1ee>
 8000e08:	2480      	movs	r4, #128	; 0x80
 8000e0a:	04e4      	lsls	r4, r4, #19
 8000e0c:	4272      	negs	r2, r6
 8000e0e:	4323      	orrs	r3, r4
 8000e10:	2a1b      	cmp	r2, #27
 8000e12:	dd00      	ble.n	8000e16 <__aeabi_fsub+0x1ca>
 8000e14:	e0c4      	b.n	8000fa0 <__aeabi_fsub+0x354>
 8000e16:	001c      	movs	r4, r3
 8000e18:	2520      	movs	r5, #32
 8000e1a:	40d4      	lsrs	r4, r2
 8000e1c:	1aaa      	subs	r2, r5, r2
 8000e1e:	4093      	lsls	r3, r2
 8000e20:	1e5a      	subs	r2, r3, #1
 8000e22:	4193      	sbcs	r3, r2
 8000e24:	4323      	orrs	r3, r4
 8000e26:	464a      	mov	r2, r9
 8000e28:	0005      	movs	r5, r0
 8000e2a:	1ad3      	subs	r3, r2, r3
 8000e2c:	4688      	mov	r8, r1
 8000e2e:	e738      	b.n	8000ca2 <__aeabi_fsub+0x56>
 8000e30:	1c72      	adds	r2, r6, #1
 8000e32:	d0f8      	beq.n	8000e26 <__aeabi_fsub+0x1da>
 8000e34:	43f2      	mvns	r2, r6
 8000e36:	28ff      	cmp	r0, #255	; 0xff
 8000e38:	d1ea      	bne.n	8000e10 <__aeabi_fsub+0x1c4>
 8000e3a:	000a      	movs	r2, r1
 8000e3c:	464b      	mov	r3, r9
 8000e3e:	25ff      	movs	r5, #255	; 0xff
 8000e40:	e7d7      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000e42:	019b      	lsls	r3, r3, #6
 8000e44:	0a5b      	lsrs	r3, r3, #9
 8000e46:	e75a      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000e48:	2e00      	cmp	r6, #0
 8000e4a:	d141      	bne.n	8000ed0 <__aeabi_fsub+0x284>
 8000e4c:	1c65      	adds	r5, r4, #1
 8000e4e:	b2e9      	uxtb	r1, r5
 8000e50:	2901      	cmp	r1, #1
 8000e52:	dd45      	ble.n	8000ee0 <__aeabi_fsub+0x294>
 8000e54:	2dff      	cmp	r5, #255	; 0xff
 8000e56:	d100      	bne.n	8000e5a <__aeabi_fsub+0x20e>
 8000e58:	e74f      	b.n	8000cfa <__aeabi_fsub+0xae>
 8000e5a:	2407      	movs	r4, #7
 8000e5c:	444b      	add	r3, r9
 8000e5e:	085b      	lsrs	r3, r3, #1
 8000e60:	401c      	ands	r4, r3
 8000e62:	e738      	b.n	8000cd6 <__aeabi_fsub+0x8a>
 8000e64:	2207      	movs	r2, #7
 8000e66:	4b5a      	ldr	r3, [pc, #360]	; (8000fd0 <__aeabi_fsub+0x384>)
 8000e68:	1a2d      	subs	r5, r5, r0
 8000e6a:	4023      	ands	r3, r4
 8000e6c:	4014      	ands	r4, r2
 8000e6e:	e732      	b.n	8000cd6 <__aeabi_fsub+0x8a>
 8000e70:	2c00      	cmp	r4, #0
 8000e72:	d11d      	bne.n	8000eb0 <__aeabi_fsub+0x264>
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d17a      	bne.n	8000f6e <__aeabi_fsub+0x322>
 8000e78:	464b      	mov	r3, r9
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	d100      	bne.n	8000e80 <__aeabi_fsub+0x234>
 8000e7e:	e091      	b.n	8000fa4 <__aeabi_fsub+0x358>
 8000e80:	000a      	movs	r2, r1
 8000e82:	2500      	movs	r5, #0
 8000e84:	e7b5      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000e86:	3e01      	subs	r6, #1
 8000e88:	2e00      	cmp	r6, #0
 8000e8a:	d119      	bne.n	8000ec0 <__aeabi_fsub+0x274>
 8000e8c:	444b      	add	r3, r9
 8000e8e:	e76c      	b.n	8000d6a <__aeabi_fsub+0x11e>
 8000e90:	2cff      	cmp	r4, #255	; 0xff
 8000e92:	d184      	bne.n	8000d9e <__aeabi_fsub+0x152>
 8000e94:	25ff      	movs	r5, #255	; 0xff
 8000e96:	e7ac      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000e98:	464a      	mov	r2, r9
 8000e9a:	4688      	mov	r8, r1
 8000e9c:	1ad4      	subs	r4, r2, r3
 8000e9e:	e705      	b.n	8000cac <__aeabi_fsub+0x60>
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d1c5      	bne.n	8000e30 <__aeabi_fsub+0x1e4>
 8000ea4:	000a      	movs	r2, r1
 8000ea6:	28ff      	cmp	r0, #255	; 0xff
 8000ea8:	d0c8      	beq.n	8000e3c <__aeabi_fsub+0x1f0>
 8000eaa:	0005      	movs	r5, r0
 8000eac:	464b      	mov	r3, r9
 8000eae:	e7a0      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d149      	bne.n	8000f48 <__aeabi_fsub+0x2fc>
 8000eb4:	464b      	mov	r3, r9
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d077      	beq.n	8000faa <__aeabi_fsub+0x35e>
 8000eba:	000a      	movs	r2, r1
 8000ebc:	25ff      	movs	r5, #255	; 0xff
 8000ebe:	e798      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000ec0:	2cff      	cmp	r4, #255	; 0xff
 8000ec2:	d000      	beq.n	8000ec6 <__aeabi_fsub+0x27a>
 8000ec4:	e743      	b.n	8000d4e <__aeabi_fsub+0x102>
 8000ec6:	e787      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000ec8:	000a      	movs	r2, r1
 8000eca:	24ff      	movs	r4, #255	; 0xff
 8000ecc:	2300      	movs	r3, #0
 8000ece:	e716      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000ed0:	2c00      	cmp	r4, #0
 8000ed2:	d115      	bne.n	8000f00 <__aeabi_fsub+0x2b4>
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d157      	bne.n	8000f88 <__aeabi_fsub+0x33c>
 8000ed8:	28ff      	cmp	r0, #255	; 0xff
 8000eda:	d1e6      	bne.n	8000eaa <__aeabi_fsub+0x25e>
 8000edc:	464b      	mov	r3, r9
 8000ede:	e77b      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000ee0:	2c00      	cmp	r4, #0
 8000ee2:	d120      	bne.n	8000f26 <__aeabi_fsub+0x2da>
 8000ee4:	2b00      	cmp	r3, #0
 8000ee6:	d057      	beq.n	8000f98 <__aeabi_fsub+0x34c>
 8000ee8:	4649      	mov	r1, r9
 8000eea:	2900      	cmp	r1, #0
 8000eec:	d053      	beq.n	8000f96 <__aeabi_fsub+0x34a>
 8000eee:	444b      	add	r3, r9
 8000ef0:	015a      	lsls	r2, r3, #5
 8000ef2:	d568      	bpl.n	8000fc6 <__aeabi_fsub+0x37a>
 8000ef4:	2407      	movs	r4, #7
 8000ef6:	4a36      	ldr	r2, [pc, #216]	; (8000fd0 <__aeabi_fsub+0x384>)
 8000ef8:	401c      	ands	r4, r3
 8000efa:	2501      	movs	r5, #1
 8000efc:	4013      	ands	r3, r2
 8000efe:	e6ea      	b.n	8000cd6 <__aeabi_fsub+0x8a>
 8000f00:	28ff      	cmp	r0, #255	; 0xff
 8000f02:	d0eb      	beq.n	8000edc <__aeabi_fsub+0x290>
 8000f04:	2280      	movs	r2, #128	; 0x80
 8000f06:	04d2      	lsls	r2, r2, #19
 8000f08:	4276      	negs	r6, r6
 8000f0a:	4313      	orrs	r3, r2
 8000f0c:	2e1b      	cmp	r6, #27
 8000f0e:	dc53      	bgt.n	8000fb8 <__aeabi_fsub+0x36c>
 8000f10:	2520      	movs	r5, #32
 8000f12:	1bad      	subs	r5, r5, r6
 8000f14:	001a      	movs	r2, r3
 8000f16:	40ab      	lsls	r3, r5
 8000f18:	40f2      	lsrs	r2, r6
 8000f1a:	1e5c      	subs	r4, r3, #1
 8000f1c:	41a3      	sbcs	r3, r4
 8000f1e:	4313      	orrs	r3, r2
 8000f20:	444b      	add	r3, r9
 8000f22:	0005      	movs	r5, r0
 8000f24:	e721      	b.n	8000d6a <__aeabi_fsub+0x11e>
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d0d8      	beq.n	8000edc <__aeabi_fsub+0x290>
 8000f2a:	4649      	mov	r1, r9
 8000f2c:	2900      	cmp	r1, #0
 8000f2e:	d100      	bne.n	8000f32 <__aeabi_fsub+0x2e6>
 8000f30:	e752      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000f32:	2180      	movs	r1, #128	; 0x80
 8000f34:	03c9      	lsls	r1, r1, #15
 8000f36:	420f      	tst	r7, r1
 8000f38:	d100      	bne.n	8000f3c <__aeabi_fsub+0x2f0>
 8000f3a:	e74d      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000f3c:	4660      	mov	r0, ip
 8000f3e:	4208      	tst	r0, r1
 8000f40:	d000      	beq.n	8000f44 <__aeabi_fsub+0x2f8>
 8000f42:	e749      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000f44:	464b      	mov	r3, r9
 8000f46:	e747      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000f48:	4648      	mov	r0, r9
 8000f4a:	25ff      	movs	r5, #255	; 0xff
 8000f4c:	2800      	cmp	r0, #0
 8000f4e:	d100      	bne.n	8000f52 <__aeabi_fsub+0x306>
 8000f50:	e74f      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000f52:	2280      	movs	r2, #128	; 0x80
 8000f54:	03d2      	lsls	r2, r2, #15
 8000f56:	4217      	tst	r7, r2
 8000f58:	d004      	beq.n	8000f64 <__aeabi_fsub+0x318>
 8000f5a:	4660      	mov	r0, ip
 8000f5c:	4210      	tst	r0, r2
 8000f5e:	d101      	bne.n	8000f64 <__aeabi_fsub+0x318>
 8000f60:	464b      	mov	r3, r9
 8000f62:	4688      	mov	r8, r1
 8000f64:	2201      	movs	r2, #1
 8000f66:	4641      	mov	r1, r8
 8000f68:	25ff      	movs	r5, #255	; 0xff
 8000f6a:	400a      	ands	r2, r1
 8000f6c:	e741      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000f6e:	4648      	mov	r0, r9
 8000f70:	2800      	cmp	r0, #0
 8000f72:	d01f      	beq.n	8000fb4 <__aeabi_fsub+0x368>
 8000f74:	1a1a      	subs	r2, r3, r0
 8000f76:	0150      	lsls	r0, r2, #5
 8000f78:	d520      	bpl.n	8000fbc <__aeabi_fsub+0x370>
 8000f7a:	464a      	mov	r2, r9
 8000f7c:	2407      	movs	r4, #7
 8000f7e:	1ad3      	subs	r3, r2, r3
 8000f80:	401c      	ands	r4, r3
 8000f82:	4688      	mov	r8, r1
 8000f84:	2500      	movs	r5, #0
 8000f86:	e6a6      	b.n	8000cd6 <__aeabi_fsub+0x8a>
 8000f88:	1c74      	adds	r4, r6, #1
 8000f8a:	d0c9      	beq.n	8000f20 <__aeabi_fsub+0x2d4>
 8000f8c:	43f6      	mvns	r6, r6
 8000f8e:	28ff      	cmp	r0, #255	; 0xff
 8000f90:	d1bc      	bne.n	8000f0c <__aeabi_fsub+0x2c0>
 8000f92:	464b      	mov	r3, r9
 8000f94:	e720      	b.n	8000dd8 <__aeabi_fsub+0x18c>
 8000f96:	4699      	mov	r9, r3
 8000f98:	464b      	mov	r3, r9
 8000f9a:	2500      	movs	r5, #0
 8000f9c:	08db      	lsrs	r3, r3, #3
 8000f9e:	e72b      	b.n	8000df8 <__aeabi_fsub+0x1ac>
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	e740      	b.n	8000e26 <__aeabi_fsub+0x1da>
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	e6a9      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000faa:	2380      	movs	r3, #128	; 0x80
 8000fac:	2200      	movs	r2, #0
 8000fae:	03db      	lsls	r3, r3, #15
 8000fb0:	24ff      	movs	r4, #255	; 0xff
 8000fb2:	e6a4      	b.n	8000cfe <__aeabi_fsub+0xb2>
 8000fb4:	2500      	movs	r5, #0
 8000fb6:	e71c      	b.n	8000df2 <__aeabi_fsub+0x1a6>
 8000fb8:	2301      	movs	r3, #1
 8000fba:	e7b1      	b.n	8000f20 <__aeabi_fsub+0x2d4>
 8000fbc:	2a00      	cmp	r2, #0
 8000fbe:	d0f1      	beq.n	8000fa4 <__aeabi_fsub+0x358>
 8000fc0:	0013      	movs	r3, r2
 8000fc2:	2500      	movs	r5, #0
 8000fc4:	e6fc      	b.n	8000dc0 <__aeabi_fsub+0x174>
 8000fc6:	2500      	movs	r5, #0
 8000fc8:	e6fa      	b.n	8000dc0 <__aeabi_fsub+0x174>
 8000fca:	46c0      	nop			; (mov r8, r8)
 8000fcc:	7dffffff 	.word	0x7dffffff
 8000fd0:	fbffffff 	.word	0xfbffffff

08000fd4 <__aeabi_f2iz>:
 8000fd4:	0241      	lsls	r1, r0, #9
 8000fd6:	0042      	lsls	r2, r0, #1
 8000fd8:	0fc3      	lsrs	r3, r0, #31
 8000fda:	0a49      	lsrs	r1, r1, #9
 8000fdc:	0e12      	lsrs	r2, r2, #24
 8000fde:	2000      	movs	r0, #0
 8000fe0:	2a7e      	cmp	r2, #126	; 0x7e
 8000fe2:	d90d      	bls.n	8001000 <__aeabi_f2iz+0x2c>
 8000fe4:	2a9d      	cmp	r2, #157	; 0x9d
 8000fe6:	d80c      	bhi.n	8001002 <__aeabi_f2iz+0x2e>
 8000fe8:	2080      	movs	r0, #128	; 0x80
 8000fea:	0400      	lsls	r0, r0, #16
 8000fec:	4301      	orrs	r1, r0
 8000fee:	2a95      	cmp	r2, #149	; 0x95
 8000ff0:	dc0a      	bgt.n	8001008 <__aeabi_f2iz+0x34>
 8000ff2:	2096      	movs	r0, #150	; 0x96
 8000ff4:	1a82      	subs	r2, r0, r2
 8000ff6:	40d1      	lsrs	r1, r2
 8000ff8:	4248      	negs	r0, r1
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d100      	bne.n	8001000 <__aeabi_f2iz+0x2c>
 8000ffe:	0008      	movs	r0, r1
 8001000:	4770      	bx	lr
 8001002:	4a03      	ldr	r2, [pc, #12]	; (8001010 <__aeabi_f2iz+0x3c>)
 8001004:	1898      	adds	r0, r3, r2
 8001006:	e7fb      	b.n	8001000 <__aeabi_f2iz+0x2c>
 8001008:	3a96      	subs	r2, #150	; 0x96
 800100a:	4091      	lsls	r1, r2
 800100c:	e7f4      	b.n	8000ff8 <__aeabi_f2iz+0x24>
 800100e:	46c0      	nop			; (mov r8, r8)
 8001010:	7fffffff 	.word	0x7fffffff

08001014 <__aeabi_dadd>:
 8001014:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001016:	464f      	mov	r7, r9
 8001018:	4646      	mov	r6, r8
 800101a:	46d6      	mov	lr, sl
 800101c:	000c      	movs	r4, r1
 800101e:	0309      	lsls	r1, r1, #12
 8001020:	b5c0      	push	{r6, r7, lr}
 8001022:	0a49      	lsrs	r1, r1, #9
 8001024:	0f47      	lsrs	r7, r0, #29
 8001026:	005e      	lsls	r6, r3, #1
 8001028:	4339      	orrs	r1, r7
 800102a:	031f      	lsls	r7, r3, #12
 800102c:	0fdb      	lsrs	r3, r3, #31
 800102e:	469c      	mov	ip, r3
 8001030:	0065      	lsls	r5, r4, #1
 8001032:	0a7b      	lsrs	r3, r7, #9
 8001034:	0f57      	lsrs	r7, r2, #29
 8001036:	431f      	orrs	r7, r3
 8001038:	0d6d      	lsrs	r5, r5, #21
 800103a:	0fe4      	lsrs	r4, r4, #31
 800103c:	0d76      	lsrs	r6, r6, #21
 800103e:	46a1      	mov	r9, r4
 8001040:	00c0      	lsls	r0, r0, #3
 8001042:	46b8      	mov	r8, r7
 8001044:	00d2      	lsls	r2, r2, #3
 8001046:	1bab      	subs	r3, r5, r6
 8001048:	4564      	cmp	r4, ip
 800104a:	d07b      	beq.n	8001144 <__aeabi_dadd+0x130>
 800104c:	2b00      	cmp	r3, #0
 800104e:	dd5f      	ble.n	8001110 <__aeabi_dadd+0xfc>
 8001050:	2e00      	cmp	r6, #0
 8001052:	d000      	beq.n	8001056 <__aeabi_dadd+0x42>
 8001054:	e0a4      	b.n	80011a0 <__aeabi_dadd+0x18c>
 8001056:	003e      	movs	r6, r7
 8001058:	4316      	orrs	r6, r2
 800105a:	d100      	bne.n	800105e <__aeabi_dadd+0x4a>
 800105c:	e112      	b.n	8001284 <__aeabi_dadd+0x270>
 800105e:	1e5e      	subs	r6, r3, #1
 8001060:	2e00      	cmp	r6, #0
 8001062:	d000      	beq.n	8001066 <__aeabi_dadd+0x52>
 8001064:	e19e      	b.n	80013a4 <__aeabi_dadd+0x390>
 8001066:	1a87      	subs	r7, r0, r2
 8001068:	4643      	mov	r3, r8
 800106a:	42b8      	cmp	r0, r7
 800106c:	4180      	sbcs	r0, r0
 800106e:	2501      	movs	r5, #1
 8001070:	1ac9      	subs	r1, r1, r3
 8001072:	4240      	negs	r0, r0
 8001074:	1a09      	subs	r1, r1, r0
 8001076:	020b      	lsls	r3, r1, #8
 8001078:	d400      	bmi.n	800107c <__aeabi_dadd+0x68>
 800107a:	e131      	b.n	80012e0 <__aeabi_dadd+0x2cc>
 800107c:	0249      	lsls	r1, r1, #9
 800107e:	0a4e      	lsrs	r6, r1, #9
 8001080:	2e00      	cmp	r6, #0
 8001082:	d100      	bne.n	8001086 <__aeabi_dadd+0x72>
 8001084:	e16e      	b.n	8001364 <__aeabi_dadd+0x350>
 8001086:	0030      	movs	r0, r6
 8001088:	f001 fe06 	bl	8002c98 <__clzsi2>
 800108c:	0003      	movs	r3, r0
 800108e:	3b08      	subs	r3, #8
 8001090:	2b1f      	cmp	r3, #31
 8001092:	dd00      	ble.n	8001096 <__aeabi_dadd+0x82>
 8001094:	e161      	b.n	800135a <__aeabi_dadd+0x346>
 8001096:	2220      	movs	r2, #32
 8001098:	0039      	movs	r1, r7
 800109a:	1ad2      	subs	r2, r2, r3
 800109c:	409e      	lsls	r6, r3
 800109e:	40d1      	lsrs	r1, r2
 80010a0:	409f      	lsls	r7, r3
 80010a2:	430e      	orrs	r6, r1
 80010a4:	429d      	cmp	r5, r3
 80010a6:	dd00      	ble.n	80010aa <__aeabi_dadd+0x96>
 80010a8:	e151      	b.n	800134e <__aeabi_dadd+0x33a>
 80010aa:	1b5d      	subs	r5, r3, r5
 80010ac:	1c6b      	adds	r3, r5, #1
 80010ae:	2b1f      	cmp	r3, #31
 80010b0:	dd00      	ble.n	80010b4 <__aeabi_dadd+0xa0>
 80010b2:	e17c      	b.n	80013ae <__aeabi_dadd+0x39a>
 80010b4:	2120      	movs	r1, #32
 80010b6:	1ac9      	subs	r1, r1, r3
 80010b8:	003d      	movs	r5, r7
 80010ba:	0030      	movs	r0, r6
 80010bc:	408f      	lsls	r7, r1
 80010be:	4088      	lsls	r0, r1
 80010c0:	40dd      	lsrs	r5, r3
 80010c2:	1e79      	subs	r1, r7, #1
 80010c4:	418f      	sbcs	r7, r1
 80010c6:	0031      	movs	r1, r6
 80010c8:	2207      	movs	r2, #7
 80010ca:	4328      	orrs	r0, r5
 80010cc:	40d9      	lsrs	r1, r3
 80010ce:	2500      	movs	r5, #0
 80010d0:	4307      	orrs	r7, r0
 80010d2:	403a      	ands	r2, r7
 80010d4:	2a00      	cmp	r2, #0
 80010d6:	d009      	beq.n	80010ec <__aeabi_dadd+0xd8>
 80010d8:	230f      	movs	r3, #15
 80010da:	403b      	ands	r3, r7
 80010dc:	2b04      	cmp	r3, #4
 80010de:	d005      	beq.n	80010ec <__aeabi_dadd+0xd8>
 80010e0:	1d3b      	adds	r3, r7, #4
 80010e2:	42bb      	cmp	r3, r7
 80010e4:	41bf      	sbcs	r7, r7
 80010e6:	427f      	negs	r7, r7
 80010e8:	19c9      	adds	r1, r1, r7
 80010ea:	001f      	movs	r7, r3
 80010ec:	020b      	lsls	r3, r1, #8
 80010ee:	d400      	bmi.n	80010f2 <__aeabi_dadd+0xde>
 80010f0:	e226      	b.n	8001540 <__aeabi_dadd+0x52c>
 80010f2:	1c6a      	adds	r2, r5, #1
 80010f4:	4bc6      	ldr	r3, [pc, #792]	; (8001410 <__aeabi_dadd+0x3fc>)
 80010f6:	0555      	lsls	r5, r2, #21
 80010f8:	0d6d      	lsrs	r5, r5, #21
 80010fa:	429a      	cmp	r2, r3
 80010fc:	d100      	bne.n	8001100 <__aeabi_dadd+0xec>
 80010fe:	e106      	b.n	800130e <__aeabi_dadd+0x2fa>
 8001100:	4ac4      	ldr	r2, [pc, #784]	; (8001414 <__aeabi_dadd+0x400>)
 8001102:	08ff      	lsrs	r7, r7, #3
 8001104:	400a      	ands	r2, r1
 8001106:	0753      	lsls	r3, r2, #29
 8001108:	0252      	lsls	r2, r2, #9
 800110a:	433b      	orrs	r3, r7
 800110c:	0b12      	lsrs	r2, r2, #12
 800110e:	e08e      	b.n	800122e <__aeabi_dadd+0x21a>
 8001110:	2b00      	cmp	r3, #0
 8001112:	d000      	beq.n	8001116 <__aeabi_dadd+0x102>
 8001114:	e0b8      	b.n	8001288 <__aeabi_dadd+0x274>
 8001116:	1c6b      	adds	r3, r5, #1
 8001118:	055b      	lsls	r3, r3, #21
 800111a:	0d5b      	lsrs	r3, r3, #21
 800111c:	2b01      	cmp	r3, #1
 800111e:	dc00      	bgt.n	8001122 <__aeabi_dadd+0x10e>
 8001120:	e130      	b.n	8001384 <__aeabi_dadd+0x370>
 8001122:	1a87      	subs	r7, r0, r2
 8001124:	4643      	mov	r3, r8
 8001126:	42b8      	cmp	r0, r7
 8001128:	41b6      	sbcs	r6, r6
 800112a:	1acb      	subs	r3, r1, r3
 800112c:	4276      	negs	r6, r6
 800112e:	1b9e      	subs	r6, r3, r6
 8001130:	0233      	lsls	r3, r6, #8
 8001132:	d500      	bpl.n	8001136 <__aeabi_dadd+0x122>
 8001134:	e14c      	b.n	80013d0 <__aeabi_dadd+0x3bc>
 8001136:	003b      	movs	r3, r7
 8001138:	4333      	orrs	r3, r6
 800113a:	d1a1      	bne.n	8001080 <__aeabi_dadd+0x6c>
 800113c:	2200      	movs	r2, #0
 800113e:	2400      	movs	r4, #0
 8001140:	2500      	movs	r5, #0
 8001142:	e070      	b.n	8001226 <__aeabi_dadd+0x212>
 8001144:	2b00      	cmp	r3, #0
 8001146:	dc00      	bgt.n	800114a <__aeabi_dadd+0x136>
 8001148:	e0e5      	b.n	8001316 <__aeabi_dadd+0x302>
 800114a:	2e00      	cmp	r6, #0
 800114c:	d100      	bne.n	8001150 <__aeabi_dadd+0x13c>
 800114e:	e083      	b.n	8001258 <__aeabi_dadd+0x244>
 8001150:	4eaf      	ldr	r6, [pc, #700]	; (8001410 <__aeabi_dadd+0x3fc>)
 8001152:	42b5      	cmp	r5, r6
 8001154:	d060      	beq.n	8001218 <__aeabi_dadd+0x204>
 8001156:	2680      	movs	r6, #128	; 0x80
 8001158:	0436      	lsls	r6, r6, #16
 800115a:	4337      	orrs	r7, r6
 800115c:	46b8      	mov	r8, r7
 800115e:	2b38      	cmp	r3, #56	; 0x38
 8001160:	dc00      	bgt.n	8001164 <__aeabi_dadd+0x150>
 8001162:	e13e      	b.n	80013e2 <__aeabi_dadd+0x3ce>
 8001164:	4643      	mov	r3, r8
 8001166:	4313      	orrs	r3, r2
 8001168:	001f      	movs	r7, r3
 800116a:	1e7a      	subs	r2, r7, #1
 800116c:	4197      	sbcs	r7, r2
 800116e:	183f      	adds	r7, r7, r0
 8001170:	4287      	cmp	r7, r0
 8001172:	4180      	sbcs	r0, r0
 8001174:	4240      	negs	r0, r0
 8001176:	1809      	adds	r1, r1, r0
 8001178:	020b      	lsls	r3, r1, #8
 800117a:	d400      	bmi.n	800117e <__aeabi_dadd+0x16a>
 800117c:	e0b0      	b.n	80012e0 <__aeabi_dadd+0x2cc>
 800117e:	4ba4      	ldr	r3, [pc, #656]	; (8001410 <__aeabi_dadd+0x3fc>)
 8001180:	3501      	adds	r5, #1
 8001182:	429d      	cmp	r5, r3
 8001184:	d100      	bne.n	8001188 <__aeabi_dadd+0x174>
 8001186:	e0c3      	b.n	8001310 <__aeabi_dadd+0x2fc>
 8001188:	4aa2      	ldr	r2, [pc, #648]	; (8001414 <__aeabi_dadd+0x400>)
 800118a:	087b      	lsrs	r3, r7, #1
 800118c:	400a      	ands	r2, r1
 800118e:	2101      	movs	r1, #1
 8001190:	400f      	ands	r7, r1
 8001192:	431f      	orrs	r7, r3
 8001194:	0851      	lsrs	r1, r2, #1
 8001196:	07d3      	lsls	r3, r2, #31
 8001198:	2207      	movs	r2, #7
 800119a:	431f      	orrs	r7, r3
 800119c:	403a      	ands	r2, r7
 800119e:	e799      	b.n	80010d4 <__aeabi_dadd+0xc0>
 80011a0:	4e9b      	ldr	r6, [pc, #620]	; (8001410 <__aeabi_dadd+0x3fc>)
 80011a2:	42b5      	cmp	r5, r6
 80011a4:	d038      	beq.n	8001218 <__aeabi_dadd+0x204>
 80011a6:	2680      	movs	r6, #128	; 0x80
 80011a8:	0436      	lsls	r6, r6, #16
 80011aa:	4337      	orrs	r7, r6
 80011ac:	46b8      	mov	r8, r7
 80011ae:	2b38      	cmp	r3, #56	; 0x38
 80011b0:	dd00      	ble.n	80011b4 <__aeabi_dadd+0x1a0>
 80011b2:	e0dc      	b.n	800136e <__aeabi_dadd+0x35a>
 80011b4:	2b1f      	cmp	r3, #31
 80011b6:	dc00      	bgt.n	80011ba <__aeabi_dadd+0x1a6>
 80011b8:	e130      	b.n	800141c <__aeabi_dadd+0x408>
 80011ba:	001e      	movs	r6, r3
 80011bc:	4647      	mov	r7, r8
 80011be:	3e20      	subs	r6, #32
 80011c0:	40f7      	lsrs	r7, r6
 80011c2:	46bc      	mov	ip, r7
 80011c4:	2b20      	cmp	r3, #32
 80011c6:	d004      	beq.n	80011d2 <__aeabi_dadd+0x1be>
 80011c8:	2640      	movs	r6, #64	; 0x40
 80011ca:	1af3      	subs	r3, r6, r3
 80011cc:	4646      	mov	r6, r8
 80011ce:	409e      	lsls	r6, r3
 80011d0:	4332      	orrs	r2, r6
 80011d2:	0017      	movs	r7, r2
 80011d4:	4663      	mov	r3, ip
 80011d6:	1e7a      	subs	r2, r7, #1
 80011d8:	4197      	sbcs	r7, r2
 80011da:	431f      	orrs	r7, r3
 80011dc:	e0cc      	b.n	8001378 <__aeabi_dadd+0x364>
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d100      	bne.n	80011e4 <__aeabi_dadd+0x1d0>
 80011e2:	e204      	b.n	80015ee <__aeabi_dadd+0x5da>
 80011e4:	4643      	mov	r3, r8
 80011e6:	4313      	orrs	r3, r2
 80011e8:	d100      	bne.n	80011ec <__aeabi_dadd+0x1d8>
 80011ea:	e159      	b.n	80014a0 <__aeabi_dadd+0x48c>
 80011ec:	074b      	lsls	r3, r1, #29
 80011ee:	08c0      	lsrs	r0, r0, #3
 80011f0:	4318      	orrs	r0, r3
 80011f2:	2380      	movs	r3, #128	; 0x80
 80011f4:	08c9      	lsrs	r1, r1, #3
 80011f6:	031b      	lsls	r3, r3, #12
 80011f8:	4219      	tst	r1, r3
 80011fa:	d008      	beq.n	800120e <__aeabi_dadd+0x1fa>
 80011fc:	4645      	mov	r5, r8
 80011fe:	08ed      	lsrs	r5, r5, #3
 8001200:	421d      	tst	r5, r3
 8001202:	d104      	bne.n	800120e <__aeabi_dadd+0x1fa>
 8001204:	4643      	mov	r3, r8
 8001206:	08d0      	lsrs	r0, r2, #3
 8001208:	0759      	lsls	r1, r3, #29
 800120a:	4308      	orrs	r0, r1
 800120c:	0029      	movs	r1, r5
 800120e:	0f42      	lsrs	r2, r0, #29
 8001210:	00c9      	lsls	r1, r1, #3
 8001212:	4d7f      	ldr	r5, [pc, #508]	; (8001410 <__aeabi_dadd+0x3fc>)
 8001214:	4311      	orrs	r1, r2
 8001216:	00c0      	lsls	r0, r0, #3
 8001218:	074b      	lsls	r3, r1, #29
 800121a:	08ca      	lsrs	r2, r1, #3
 800121c:	497c      	ldr	r1, [pc, #496]	; (8001410 <__aeabi_dadd+0x3fc>)
 800121e:	08c0      	lsrs	r0, r0, #3
 8001220:	4303      	orrs	r3, r0
 8001222:	428d      	cmp	r5, r1
 8001224:	d068      	beq.n	80012f8 <__aeabi_dadd+0x2e4>
 8001226:	0312      	lsls	r2, r2, #12
 8001228:	056d      	lsls	r5, r5, #21
 800122a:	0b12      	lsrs	r2, r2, #12
 800122c:	0d6d      	lsrs	r5, r5, #21
 800122e:	2100      	movs	r1, #0
 8001230:	0312      	lsls	r2, r2, #12
 8001232:	0018      	movs	r0, r3
 8001234:	0b13      	lsrs	r3, r2, #12
 8001236:	0d0a      	lsrs	r2, r1, #20
 8001238:	0512      	lsls	r2, r2, #20
 800123a:	431a      	orrs	r2, r3
 800123c:	4b76      	ldr	r3, [pc, #472]	; (8001418 <__aeabi_dadd+0x404>)
 800123e:	052d      	lsls	r5, r5, #20
 8001240:	4013      	ands	r3, r2
 8001242:	432b      	orrs	r3, r5
 8001244:	005b      	lsls	r3, r3, #1
 8001246:	07e4      	lsls	r4, r4, #31
 8001248:	085b      	lsrs	r3, r3, #1
 800124a:	4323      	orrs	r3, r4
 800124c:	0019      	movs	r1, r3
 800124e:	bc1c      	pop	{r2, r3, r4}
 8001250:	4690      	mov	r8, r2
 8001252:	4699      	mov	r9, r3
 8001254:	46a2      	mov	sl, r4
 8001256:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001258:	003e      	movs	r6, r7
 800125a:	4316      	orrs	r6, r2
 800125c:	d012      	beq.n	8001284 <__aeabi_dadd+0x270>
 800125e:	1e5e      	subs	r6, r3, #1
 8001260:	2e00      	cmp	r6, #0
 8001262:	d000      	beq.n	8001266 <__aeabi_dadd+0x252>
 8001264:	e100      	b.n	8001468 <__aeabi_dadd+0x454>
 8001266:	1887      	adds	r7, r0, r2
 8001268:	4287      	cmp	r7, r0
 800126a:	4180      	sbcs	r0, r0
 800126c:	4441      	add	r1, r8
 800126e:	4240      	negs	r0, r0
 8001270:	1809      	adds	r1, r1, r0
 8001272:	2501      	movs	r5, #1
 8001274:	020b      	lsls	r3, r1, #8
 8001276:	d533      	bpl.n	80012e0 <__aeabi_dadd+0x2cc>
 8001278:	2502      	movs	r5, #2
 800127a:	e785      	b.n	8001188 <__aeabi_dadd+0x174>
 800127c:	4664      	mov	r4, ip
 800127e:	0033      	movs	r3, r6
 8001280:	4641      	mov	r1, r8
 8001282:	0010      	movs	r0, r2
 8001284:	001d      	movs	r5, r3
 8001286:	e7c7      	b.n	8001218 <__aeabi_dadd+0x204>
 8001288:	2d00      	cmp	r5, #0
 800128a:	d000      	beq.n	800128e <__aeabi_dadd+0x27a>
 800128c:	e0da      	b.n	8001444 <__aeabi_dadd+0x430>
 800128e:	000c      	movs	r4, r1
 8001290:	4304      	orrs	r4, r0
 8001292:	d0f3      	beq.n	800127c <__aeabi_dadd+0x268>
 8001294:	1c5c      	adds	r4, r3, #1
 8001296:	d100      	bne.n	800129a <__aeabi_dadd+0x286>
 8001298:	e19f      	b.n	80015da <__aeabi_dadd+0x5c6>
 800129a:	4c5d      	ldr	r4, [pc, #372]	; (8001410 <__aeabi_dadd+0x3fc>)
 800129c:	42a6      	cmp	r6, r4
 800129e:	d100      	bne.n	80012a2 <__aeabi_dadd+0x28e>
 80012a0:	e12f      	b.n	8001502 <__aeabi_dadd+0x4ee>
 80012a2:	43db      	mvns	r3, r3
 80012a4:	2b38      	cmp	r3, #56	; 0x38
 80012a6:	dd00      	ble.n	80012aa <__aeabi_dadd+0x296>
 80012a8:	e166      	b.n	8001578 <__aeabi_dadd+0x564>
 80012aa:	2b1f      	cmp	r3, #31
 80012ac:	dd00      	ble.n	80012b0 <__aeabi_dadd+0x29c>
 80012ae:	e183      	b.n	80015b8 <__aeabi_dadd+0x5a4>
 80012b0:	2420      	movs	r4, #32
 80012b2:	0005      	movs	r5, r0
 80012b4:	1ae4      	subs	r4, r4, r3
 80012b6:	000f      	movs	r7, r1
 80012b8:	40dd      	lsrs	r5, r3
 80012ba:	40d9      	lsrs	r1, r3
 80012bc:	40a0      	lsls	r0, r4
 80012be:	4643      	mov	r3, r8
 80012c0:	40a7      	lsls	r7, r4
 80012c2:	1a5b      	subs	r3, r3, r1
 80012c4:	1e44      	subs	r4, r0, #1
 80012c6:	41a0      	sbcs	r0, r4
 80012c8:	4698      	mov	r8, r3
 80012ca:	432f      	orrs	r7, r5
 80012cc:	4338      	orrs	r0, r7
 80012ce:	1a17      	subs	r7, r2, r0
 80012d0:	42ba      	cmp	r2, r7
 80012d2:	4192      	sbcs	r2, r2
 80012d4:	4643      	mov	r3, r8
 80012d6:	4252      	negs	r2, r2
 80012d8:	1a99      	subs	r1, r3, r2
 80012da:	4664      	mov	r4, ip
 80012dc:	0035      	movs	r5, r6
 80012de:	e6ca      	b.n	8001076 <__aeabi_dadd+0x62>
 80012e0:	2207      	movs	r2, #7
 80012e2:	403a      	ands	r2, r7
 80012e4:	2a00      	cmp	r2, #0
 80012e6:	d000      	beq.n	80012ea <__aeabi_dadd+0x2d6>
 80012e8:	e6f6      	b.n	80010d8 <__aeabi_dadd+0xc4>
 80012ea:	074b      	lsls	r3, r1, #29
 80012ec:	08ca      	lsrs	r2, r1, #3
 80012ee:	4948      	ldr	r1, [pc, #288]	; (8001410 <__aeabi_dadd+0x3fc>)
 80012f0:	08ff      	lsrs	r7, r7, #3
 80012f2:	433b      	orrs	r3, r7
 80012f4:	428d      	cmp	r5, r1
 80012f6:	d196      	bne.n	8001226 <__aeabi_dadd+0x212>
 80012f8:	0019      	movs	r1, r3
 80012fa:	4311      	orrs	r1, r2
 80012fc:	d100      	bne.n	8001300 <__aeabi_dadd+0x2ec>
 80012fe:	e19e      	b.n	800163e <__aeabi_dadd+0x62a>
 8001300:	2180      	movs	r1, #128	; 0x80
 8001302:	0309      	lsls	r1, r1, #12
 8001304:	430a      	orrs	r2, r1
 8001306:	0312      	lsls	r2, r2, #12
 8001308:	0b12      	lsrs	r2, r2, #12
 800130a:	4d41      	ldr	r5, [pc, #260]	; (8001410 <__aeabi_dadd+0x3fc>)
 800130c:	e78f      	b.n	800122e <__aeabi_dadd+0x21a>
 800130e:	0015      	movs	r5, r2
 8001310:	2200      	movs	r2, #0
 8001312:	2300      	movs	r3, #0
 8001314:	e78b      	b.n	800122e <__aeabi_dadd+0x21a>
 8001316:	2b00      	cmp	r3, #0
 8001318:	d000      	beq.n	800131c <__aeabi_dadd+0x308>
 800131a:	e0c7      	b.n	80014ac <__aeabi_dadd+0x498>
 800131c:	1c6b      	adds	r3, r5, #1
 800131e:	055f      	lsls	r7, r3, #21
 8001320:	0d7f      	lsrs	r7, r7, #21
 8001322:	2f01      	cmp	r7, #1
 8001324:	dc00      	bgt.n	8001328 <__aeabi_dadd+0x314>
 8001326:	e0f1      	b.n	800150c <__aeabi_dadd+0x4f8>
 8001328:	4d39      	ldr	r5, [pc, #228]	; (8001410 <__aeabi_dadd+0x3fc>)
 800132a:	42ab      	cmp	r3, r5
 800132c:	d100      	bne.n	8001330 <__aeabi_dadd+0x31c>
 800132e:	e0b9      	b.n	80014a4 <__aeabi_dadd+0x490>
 8001330:	1885      	adds	r5, r0, r2
 8001332:	000a      	movs	r2, r1
 8001334:	4285      	cmp	r5, r0
 8001336:	4189      	sbcs	r1, r1
 8001338:	4442      	add	r2, r8
 800133a:	4249      	negs	r1, r1
 800133c:	1851      	adds	r1, r2, r1
 800133e:	2207      	movs	r2, #7
 8001340:	07cf      	lsls	r7, r1, #31
 8001342:	086d      	lsrs	r5, r5, #1
 8001344:	432f      	orrs	r7, r5
 8001346:	0849      	lsrs	r1, r1, #1
 8001348:	403a      	ands	r2, r7
 800134a:	001d      	movs	r5, r3
 800134c:	e6c2      	b.n	80010d4 <__aeabi_dadd+0xc0>
 800134e:	2207      	movs	r2, #7
 8001350:	4930      	ldr	r1, [pc, #192]	; (8001414 <__aeabi_dadd+0x400>)
 8001352:	1aed      	subs	r5, r5, r3
 8001354:	4031      	ands	r1, r6
 8001356:	403a      	ands	r2, r7
 8001358:	e6bc      	b.n	80010d4 <__aeabi_dadd+0xc0>
 800135a:	003e      	movs	r6, r7
 800135c:	3828      	subs	r0, #40	; 0x28
 800135e:	4086      	lsls	r6, r0
 8001360:	2700      	movs	r7, #0
 8001362:	e69f      	b.n	80010a4 <__aeabi_dadd+0x90>
 8001364:	0038      	movs	r0, r7
 8001366:	f001 fc97 	bl	8002c98 <__clzsi2>
 800136a:	3020      	adds	r0, #32
 800136c:	e68e      	b.n	800108c <__aeabi_dadd+0x78>
 800136e:	4643      	mov	r3, r8
 8001370:	4313      	orrs	r3, r2
 8001372:	001f      	movs	r7, r3
 8001374:	1e7a      	subs	r2, r7, #1
 8001376:	4197      	sbcs	r7, r2
 8001378:	1bc7      	subs	r7, r0, r7
 800137a:	42b8      	cmp	r0, r7
 800137c:	4180      	sbcs	r0, r0
 800137e:	4240      	negs	r0, r0
 8001380:	1a09      	subs	r1, r1, r0
 8001382:	e678      	b.n	8001076 <__aeabi_dadd+0x62>
 8001384:	000e      	movs	r6, r1
 8001386:	003b      	movs	r3, r7
 8001388:	4306      	orrs	r6, r0
 800138a:	4313      	orrs	r3, r2
 800138c:	2d00      	cmp	r5, #0
 800138e:	d161      	bne.n	8001454 <__aeabi_dadd+0x440>
 8001390:	2e00      	cmp	r6, #0
 8001392:	d000      	beq.n	8001396 <__aeabi_dadd+0x382>
 8001394:	e0f4      	b.n	8001580 <__aeabi_dadd+0x56c>
 8001396:	2b00      	cmp	r3, #0
 8001398:	d100      	bne.n	800139c <__aeabi_dadd+0x388>
 800139a:	e11b      	b.n	80015d4 <__aeabi_dadd+0x5c0>
 800139c:	4664      	mov	r4, ip
 800139e:	0039      	movs	r1, r7
 80013a0:	0010      	movs	r0, r2
 80013a2:	e739      	b.n	8001218 <__aeabi_dadd+0x204>
 80013a4:	4f1a      	ldr	r7, [pc, #104]	; (8001410 <__aeabi_dadd+0x3fc>)
 80013a6:	42bb      	cmp	r3, r7
 80013a8:	d07a      	beq.n	80014a0 <__aeabi_dadd+0x48c>
 80013aa:	0033      	movs	r3, r6
 80013ac:	e6ff      	b.n	80011ae <__aeabi_dadd+0x19a>
 80013ae:	0030      	movs	r0, r6
 80013b0:	3d1f      	subs	r5, #31
 80013b2:	40e8      	lsrs	r0, r5
 80013b4:	2b20      	cmp	r3, #32
 80013b6:	d003      	beq.n	80013c0 <__aeabi_dadd+0x3ac>
 80013b8:	2140      	movs	r1, #64	; 0x40
 80013ba:	1acb      	subs	r3, r1, r3
 80013bc:	409e      	lsls	r6, r3
 80013be:	4337      	orrs	r7, r6
 80013c0:	1e7b      	subs	r3, r7, #1
 80013c2:	419f      	sbcs	r7, r3
 80013c4:	2207      	movs	r2, #7
 80013c6:	4307      	orrs	r7, r0
 80013c8:	403a      	ands	r2, r7
 80013ca:	2100      	movs	r1, #0
 80013cc:	2500      	movs	r5, #0
 80013ce:	e789      	b.n	80012e4 <__aeabi_dadd+0x2d0>
 80013d0:	1a17      	subs	r7, r2, r0
 80013d2:	4643      	mov	r3, r8
 80013d4:	42ba      	cmp	r2, r7
 80013d6:	41b6      	sbcs	r6, r6
 80013d8:	1a59      	subs	r1, r3, r1
 80013da:	4276      	negs	r6, r6
 80013dc:	1b8e      	subs	r6, r1, r6
 80013de:	4664      	mov	r4, ip
 80013e0:	e64e      	b.n	8001080 <__aeabi_dadd+0x6c>
 80013e2:	2b1f      	cmp	r3, #31
 80013e4:	dd00      	ble.n	80013e8 <__aeabi_dadd+0x3d4>
 80013e6:	e0ad      	b.n	8001544 <__aeabi_dadd+0x530>
 80013e8:	2620      	movs	r6, #32
 80013ea:	4647      	mov	r7, r8
 80013ec:	1af6      	subs	r6, r6, r3
 80013ee:	40b7      	lsls	r7, r6
 80013f0:	46b9      	mov	r9, r7
 80013f2:	0017      	movs	r7, r2
 80013f4:	46b2      	mov	sl, r6
 80013f6:	40df      	lsrs	r7, r3
 80013f8:	464e      	mov	r6, r9
 80013fa:	433e      	orrs	r6, r7
 80013fc:	0037      	movs	r7, r6
 80013fe:	4656      	mov	r6, sl
 8001400:	40b2      	lsls	r2, r6
 8001402:	1e56      	subs	r6, r2, #1
 8001404:	41b2      	sbcs	r2, r6
 8001406:	4317      	orrs	r7, r2
 8001408:	4642      	mov	r2, r8
 800140a:	40da      	lsrs	r2, r3
 800140c:	1889      	adds	r1, r1, r2
 800140e:	e6ae      	b.n	800116e <__aeabi_dadd+0x15a>
 8001410:	000007ff 	.word	0x000007ff
 8001414:	ff7fffff 	.word	0xff7fffff
 8001418:	800fffff 	.word	0x800fffff
 800141c:	2620      	movs	r6, #32
 800141e:	4647      	mov	r7, r8
 8001420:	1af6      	subs	r6, r6, r3
 8001422:	40b7      	lsls	r7, r6
 8001424:	46b9      	mov	r9, r7
 8001426:	0017      	movs	r7, r2
 8001428:	46b2      	mov	sl, r6
 800142a:	40df      	lsrs	r7, r3
 800142c:	464e      	mov	r6, r9
 800142e:	433e      	orrs	r6, r7
 8001430:	0037      	movs	r7, r6
 8001432:	4656      	mov	r6, sl
 8001434:	40b2      	lsls	r2, r6
 8001436:	1e56      	subs	r6, r2, #1
 8001438:	41b2      	sbcs	r2, r6
 800143a:	4317      	orrs	r7, r2
 800143c:	4642      	mov	r2, r8
 800143e:	40da      	lsrs	r2, r3
 8001440:	1a89      	subs	r1, r1, r2
 8001442:	e799      	b.n	8001378 <__aeabi_dadd+0x364>
 8001444:	4c7f      	ldr	r4, [pc, #508]	; (8001644 <__aeabi_dadd+0x630>)
 8001446:	42a6      	cmp	r6, r4
 8001448:	d05b      	beq.n	8001502 <__aeabi_dadd+0x4ee>
 800144a:	2480      	movs	r4, #128	; 0x80
 800144c:	0424      	lsls	r4, r4, #16
 800144e:	425b      	negs	r3, r3
 8001450:	4321      	orrs	r1, r4
 8001452:	e727      	b.n	80012a4 <__aeabi_dadd+0x290>
 8001454:	2e00      	cmp	r6, #0
 8001456:	d10c      	bne.n	8001472 <__aeabi_dadd+0x45e>
 8001458:	2b00      	cmp	r3, #0
 800145a:	d100      	bne.n	800145e <__aeabi_dadd+0x44a>
 800145c:	e0cb      	b.n	80015f6 <__aeabi_dadd+0x5e2>
 800145e:	4664      	mov	r4, ip
 8001460:	0039      	movs	r1, r7
 8001462:	0010      	movs	r0, r2
 8001464:	4d77      	ldr	r5, [pc, #476]	; (8001644 <__aeabi_dadd+0x630>)
 8001466:	e6d7      	b.n	8001218 <__aeabi_dadd+0x204>
 8001468:	4f76      	ldr	r7, [pc, #472]	; (8001644 <__aeabi_dadd+0x630>)
 800146a:	42bb      	cmp	r3, r7
 800146c:	d018      	beq.n	80014a0 <__aeabi_dadd+0x48c>
 800146e:	0033      	movs	r3, r6
 8001470:	e675      	b.n	800115e <__aeabi_dadd+0x14a>
 8001472:	2b00      	cmp	r3, #0
 8001474:	d014      	beq.n	80014a0 <__aeabi_dadd+0x48c>
 8001476:	074b      	lsls	r3, r1, #29
 8001478:	08c0      	lsrs	r0, r0, #3
 800147a:	4318      	orrs	r0, r3
 800147c:	2380      	movs	r3, #128	; 0x80
 800147e:	08c9      	lsrs	r1, r1, #3
 8001480:	031b      	lsls	r3, r3, #12
 8001482:	4219      	tst	r1, r3
 8001484:	d007      	beq.n	8001496 <__aeabi_dadd+0x482>
 8001486:	08fc      	lsrs	r4, r7, #3
 8001488:	421c      	tst	r4, r3
 800148a:	d104      	bne.n	8001496 <__aeabi_dadd+0x482>
 800148c:	0779      	lsls	r1, r7, #29
 800148e:	08d0      	lsrs	r0, r2, #3
 8001490:	4308      	orrs	r0, r1
 8001492:	46e1      	mov	r9, ip
 8001494:	0021      	movs	r1, r4
 8001496:	464c      	mov	r4, r9
 8001498:	0f42      	lsrs	r2, r0, #29
 800149a:	00c9      	lsls	r1, r1, #3
 800149c:	4311      	orrs	r1, r2
 800149e:	00c0      	lsls	r0, r0, #3
 80014a0:	4d68      	ldr	r5, [pc, #416]	; (8001644 <__aeabi_dadd+0x630>)
 80014a2:	e6b9      	b.n	8001218 <__aeabi_dadd+0x204>
 80014a4:	001d      	movs	r5, r3
 80014a6:	2200      	movs	r2, #0
 80014a8:	2300      	movs	r3, #0
 80014aa:	e6c0      	b.n	800122e <__aeabi_dadd+0x21a>
 80014ac:	2d00      	cmp	r5, #0
 80014ae:	d15b      	bne.n	8001568 <__aeabi_dadd+0x554>
 80014b0:	000d      	movs	r5, r1
 80014b2:	4305      	orrs	r5, r0
 80014b4:	d100      	bne.n	80014b8 <__aeabi_dadd+0x4a4>
 80014b6:	e6e2      	b.n	800127e <__aeabi_dadd+0x26a>
 80014b8:	1c5d      	adds	r5, r3, #1
 80014ba:	d100      	bne.n	80014be <__aeabi_dadd+0x4aa>
 80014bc:	e0b0      	b.n	8001620 <__aeabi_dadd+0x60c>
 80014be:	4d61      	ldr	r5, [pc, #388]	; (8001644 <__aeabi_dadd+0x630>)
 80014c0:	42ae      	cmp	r6, r5
 80014c2:	d01f      	beq.n	8001504 <__aeabi_dadd+0x4f0>
 80014c4:	43db      	mvns	r3, r3
 80014c6:	2b38      	cmp	r3, #56	; 0x38
 80014c8:	dc71      	bgt.n	80015ae <__aeabi_dadd+0x59a>
 80014ca:	2b1f      	cmp	r3, #31
 80014cc:	dd00      	ble.n	80014d0 <__aeabi_dadd+0x4bc>
 80014ce:	e096      	b.n	80015fe <__aeabi_dadd+0x5ea>
 80014d0:	2520      	movs	r5, #32
 80014d2:	000f      	movs	r7, r1
 80014d4:	1aed      	subs	r5, r5, r3
 80014d6:	40af      	lsls	r7, r5
 80014d8:	46b9      	mov	r9, r7
 80014da:	0007      	movs	r7, r0
 80014dc:	46aa      	mov	sl, r5
 80014de:	40df      	lsrs	r7, r3
 80014e0:	464d      	mov	r5, r9
 80014e2:	433d      	orrs	r5, r7
 80014e4:	002f      	movs	r7, r5
 80014e6:	4655      	mov	r5, sl
 80014e8:	40a8      	lsls	r0, r5
 80014ea:	40d9      	lsrs	r1, r3
 80014ec:	1e45      	subs	r5, r0, #1
 80014ee:	41a8      	sbcs	r0, r5
 80014f0:	4488      	add	r8, r1
 80014f2:	4307      	orrs	r7, r0
 80014f4:	18bf      	adds	r7, r7, r2
 80014f6:	4297      	cmp	r7, r2
 80014f8:	4192      	sbcs	r2, r2
 80014fa:	4251      	negs	r1, r2
 80014fc:	4441      	add	r1, r8
 80014fe:	0035      	movs	r5, r6
 8001500:	e63a      	b.n	8001178 <__aeabi_dadd+0x164>
 8001502:	4664      	mov	r4, ip
 8001504:	0035      	movs	r5, r6
 8001506:	4641      	mov	r1, r8
 8001508:	0010      	movs	r0, r2
 800150a:	e685      	b.n	8001218 <__aeabi_dadd+0x204>
 800150c:	000b      	movs	r3, r1
 800150e:	4303      	orrs	r3, r0
 8001510:	2d00      	cmp	r5, #0
 8001512:	d000      	beq.n	8001516 <__aeabi_dadd+0x502>
 8001514:	e663      	b.n	80011de <__aeabi_dadd+0x1ca>
 8001516:	2b00      	cmp	r3, #0
 8001518:	d0f5      	beq.n	8001506 <__aeabi_dadd+0x4f2>
 800151a:	4643      	mov	r3, r8
 800151c:	4313      	orrs	r3, r2
 800151e:	d100      	bne.n	8001522 <__aeabi_dadd+0x50e>
 8001520:	e67a      	b.n	8001218 <__aeabi_dadd+0x204>
 8001522:	1887      	adds	r7, r0, r2
 8001524:	4287      	cmp	r7, r0
 8001526:	4180      	sbcs	r0, r0
 8001528:	2207      	movs	r2, #7
 800152a:	4441      	add	r1, r8
 800152c:	4240      	negs	r0, r0
 800152e:	1809      	adds	r1, r1, r0
 8001530:	403a      	ands	r2, r7
 8001532:	020b      	lsls	r3, r1, #8
 8001534:	d400      	bmi.n	8001538 <__aeabi_dadd+0x524>
 8001536:	e6d5      	b.n	80012e4 <__aeabi_dadd+0x2d0>
 8001538:	4b43      	ldr	r3, [pc, #268]	; (8001648 <__aeabi_dadd+0x634>)
 800153a:	3501      	adds	r5, #1
 800153c:	4019      	ands	r1, r3
 800153e:	e5c9      	b.n	80010d4 <__aeabi_dadd+0xc0>
 8001540:	0038      	movs	r0, r7
 8001542:	e669      	b.n	8001218 <__aeabi_dadd+0x204>
 8001544:	001e      	movs	r6, r3
 8001546:	4647      	mov	r7, r8
 8001548:	3e20      	subs	r6, #32
 800154a:	40f7      	lsrs	r7, r6
 800154c:	46bc      	mov	ip, r7
 800154e:	2b20      	cmp	r3, #32
 8001550:	d004      	beq.n	800155c <__aeabi_dadd+0x548>
 8001552:	2640      	movs	r6, #64	; 0x40
 8001554:	1af3      	subs	r3, r6, r3
 8001556:	4646      	mov	r6, r8
 8001558:	409e      	lsls	r6, r3
 800155a:	4332      	orrs	r2, r6
 800155c:	0017      	movs	r7, r2
 800155e:	4663      	mov	r3, ip
 8001560:	1e7a      	subs	r2, r7, #1
 8001562:	4197      	sbcs	r7, r2
 8001564:	431f      	orrs	r7, r3
 8001566:	e602      	b.n	800116e <__aeabi_dadd+0x15a>
 8001568:	4d36      	ldr	r5, [pc, #216]	; (8001644 <__aeabi_dadd+0x630>)
 800156a:	42ae      	cmp	r6, r5
 800156c:	d0ca      	beq.n	8001504 <__aeabi_dadd+0x4f0>
 800156e:	2580      	movs	r5, #128	; 0x80
 8001570:	042d      	lsls	r5, r5, #16
 8001572:	425b      	negs	r3, r3
 8001574:	4329      	orrs	r1, r5
 8001576:	e7a6      	b.n	80014c6 <__aeabi_dadd+0x4b2>
 8001578:	4308      	orrs	r0, r1
 800157a:	1e41      	subs	r1, r0, #1
 800157c:	4188      	sbcs	r0, r1
 800157e:	e6a6      	b.n	80012ce <__aeabi_dadd+0x2ba>
 8001580:	2b00      	cmp	r3, #0
 8001582:	d100      	bne.n	8001586 <__aeabi_dadd+0x572>
 8001584:	e648      	b.n	8001218 <__aeabi_dadd+0x204>
 8001586:	1a87      	subs	r7, r0, r2
 8001588:	4643      	mov	r3, r8
 800158a:	42b8      	cmp	r0, r7
 800158c:	41b6      	sbcs	r6, r6
 800158e:	1acb      	subs	r3, r1, r3
 8001590:	4276      	negs	r6, r6
 8001592:	1b9e      	subs	r6, r3, r6
 8001594:	0233      	lsls	r3, r6, #8
 8001596:	d54b      	bpl.n	8001630 <__aeabi_dadd+0x61c>
 8001598:	1a17      	subs	r7, r2, r0
 800159a:	4643      	mov	r3, r8
 800159c:	42ba      	cmp	r2, r7
 800159e:	4192      	sbcs	r2, r2
 80015a0:	1a59      	subs	r1, r3, r1
 80015a2:	4252      	negs	r2, r2
 80015a4:	1a89      	subs	r1, r1, r2
 80015a6:	2207      	movs	r2, #7
 80015a8:	4664      	mov	r4, ip
 80015aa:	403a      	ands	r2, r7
 80015ac:	e592      	b.n	80010d4 <__aeabi_dadd+0xc0>
 80015ae:	4301      	orrs	r1, r0
 80015b0:	000f      	movs	r7, r1
 80015b2:	1e79      	subs	r1, r7, #1
 80015b4:	418f      	sbcs	r7, r1
 80015b6:	e79d      	b.n	80014f4 <__aeabi_dadd+0x4e0>
 80015b8:	001c      	movs	r4, r3
 80015ba:	000f      	movs	r7, r1
 80015bc:	3c20      	subs	r4, #32
 80015be:	40e7      	lsrs	r7, r4
 80015c0:	2b20      	cmp	r3, #32
 80015c2:	d003      	beq.n	80015cc <__aeabi_dadd+0x5b8>
 80015c4:	2440      	movs	r4, #64	; 0x40
 80015c6:	1ae3      	subs	r3, r4, r3
 80015c8:	4099      	lsls	r1, r3
 80015ca:	4308      	orrs	r0, r1
 80015cc:	1e41      	subs	r1, r0, #1
 80015ce:	4188      	sbcs	r0, r1
 80015d0:	4338      	orrs	r0, r7
 80015d2:	e67c      	b.n	80012ce <__aeabi_dadd+0x2ba>
 80015d4:	2200      	movs	r2, #0
 80015d6:	2400      	movs	r4, #0
 80015d8:	e625      	b.n	8001226 <__aeabi_dadd+0x212>
 80015da:	1a17      	subs	r7, r2, r0
 80015dc:	4643      	mov	r3, r8
 80015de:	42ba      	cmp	r2, r7
 80015e0:	4192      	sbcs	r2, r2
 80015e2:	1a59      	subs	r1, r3, r1
 80015e4:	4252      	negs	r2, r2
 80015e6:	1a89      	subs	r1, r1, r2
 80015e8:	4664      	mov	r4, ip
 80015ea:	0035      	movs	r5, r6
 80015ec:	e543      	b.n	8001076 <__aeabi_dadd+0x62>
 80015ee:	4641      	mov	r1, r8
 80015f0:	0010      	movs	r0, r2
 80015f2:	4d14      	ldr	r5, [pc, #80]	; (8001644 <__aeabi_dadd+0x630>)
 80015f4:	e610      	b.n	8001218 <__aeabi_dadd+0x204>
 80015f6:	2280      	movs	r2, #128	; 0x80
 80015f8:	2400      	movs	r4, #0
 80015fa:	0312      	lsls	r2, r2, #12
 80015fc:	e680      	b.n	8001300 <__aeabi_dadd+0x2ec>
 80015fe:	001d      	movs	r5, r3
 8001600:	000f      	movs	r7, r1
 8001602:	3d20      	subs	r5, #32
 8001604:	40ef      	lsrs	r7, r5
 8001606:	46bc      	mov	ip, r7
 8001608:	2b20      	cmp	r3, #32
 800160a:	d003      	beq.n	8001614 <__aeabi_dadd+0x600>
 800160c:	2540      	movs	r5, #64	; 0x40
 800160e:	1aeb      	subs	r3, r5, r3
 8001610:	4099      	lsls	r1, r3
 8001612:	4308      	orrs	r0, r1
 8001614:	0007      	movs	r7, r0
 8001616:	4663      	mov	r3, ip
 8001618:	1e78      	subs	r0, r7, #1
 800161a:	4187      	sbcs	r7, r0
 800161c:	431f      	orrs	r7, r3
 800161e:	e769      	b.n	80014f4 <__aeabi_dadd+0x4e0>
 8001620:	1887      	adds	r7, r0, r2
 8001622:	4297      	cmp	r7, r2
 8001624:	419b      	sbcs	r3, r3
 8001626:	4441      	add	r1, r8
 8001628:	425b      	negs	r3, r3
 800162a:	18c9      	adds	r1, r1, r3
 800162c:	0035      	movs	r5, r6
 800162e:	e5a3      	b.n	8001178 <__aeabi_dadd+0x164>
 8001630:	003b      	movs	r3, r7
 8001632:	4333      	orrs	r3, r6
 8001634:	d0ce      	beq.n	80015d4 <__aeabi_dadd+0x5c0>
 8001636:	2207      	movs	r2, #7
 8001638:	0031      	movs	r1, r6
 800163a:	403a      	ands	r2, r7
 800163c:	e652      	b.n	80012e4 <__aeabi_dadd+0x2d0>
 800163e:	2300      	movs	r3, #0
 8001640:	001a      	movs	r2, r3
 8001642:	e5f4      	b.n	800122e <__aeabi_dadd+0x21a>
 8001644:	000007ff 	.word	0x000007ff
 8001648:	ff7fffff 	.word	0xff7fffff

0800164c <__aeabi_ddiv>:
 800164c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800164e:	4657      	mov	r7, sl
 8001650:	46de      	mov	lr, fp
 8001652:	464e      	mov	r6, r9
 8001654:	4645      	mov	r5, r8
 8001656:	b5e0      	push	{r5, r6, r7, lr}
 8001658:	4683      	mov	fp, r0
 800165a:	0007      	movs	r7, r0
 800165c:	030e      	lsls	r6, r1, #12
 800165e:	0048      	lsls	r0, r1, #1
 8001660:	b085      	sub	sp, #20
 8001662:	4692      	mov	sl, r2
 8001664:	001c      	movs	r4, r3
 8001666:	0b36      	lsrs	r6, r6, #12
 8001668:	0d40      	lsrs	r0, r0, #21
 800166a:	0fcd      	lsrs	r5, r1, #31
 800166c:	2800      	cmp	r0, #0
 800166e:	d100      	bne.n	8001672 <__aeabi_ddiv+0x26>
 8001670:	e09d      	b.n	80017ae <__aeabi_ddiv+0x162>
 8001672:	4b95      	ldr	r3, [pc, #596]	; (80018c8 <__aeabi_ddiv+0x27c>)
 8001674:	4298      	cmp	r0, r3
 8001676:	d039      	beq.n	80016ec <__aeabi_ddiv+0xa0>
 8001678:	2380      	movs	r3, #128	; 0x80
 800167a:	00f6      	lsls	r6, r6, #3
 800167c:	041b      	lsls	r3, r3, #16
 800167e:	431e      	orrs	r6, r3
 8001680:	4a92      	ldr	r2, [pc, #584]	; (80018cc <__aeabi_ddiv+0x280>)
 8001682:	0f7b      	lsrs	r3, r7, #29
 8001684:	4333      	orrs	r3, r6
 8001686:	4699      	mov	r9, r3
 8001688:	4694      	mov	ip, r2
 800168a:	0003      	movs	r3, r0
 800168c:	4463      	add	r3, ip
 800168e:	9300      	str	r3, [sp, #0]
 8001690:	2300      	movs	r3, #0
 8001692:	2600      	movs	r6, #0
 8001694:	00ff      	lsls	r7, r7, #3
 8001696:	9302      	str	r3, [sp, #8]
 8001698:	0323      	lsls	r3, r4, #12
 800169a:	0b1b      	lsrs	r3, r3, #12
 800169c:	4698      	mov	r8, r3
 800169e:	0063      	lsls	r3, r4, #1
 80016a0:	0fe4      	lsrs	r4, r4, #31
 80016a2:	4652      	mov	r2, sl
 80016a4:	0d5b      	lsrs	r3, r3, #21
 80016a6:	9401      	str	r4, [sp, #4]
 80016a8:	d100      	bne.n	80016ac <__aeabi_ddiv+0x60>
 80016aa:	e0b3      	b.n	8001814 <__aeabi_ddiv+0x1c8>
 80016ac:	4986      	ldr	r1, [pc, #536]	; (80018c8 <__aeabi_ddiv+0x27c>)
 80016ae:	428b      	cmp	r3, r1
 80016b0:	d100      	bne.n	80016b4 <__aeabi_ddiv+0x68>
 80016b2:	e09e      	b.n	80017f2 <__aeabi_ddiv+0x1a6>
 80016b4:	4642      	mov	r2, r8
 80016b6:	00d1      	lsls	r1, r2, #3
 80016b8:	2280      	movs	r2, #128	; 0x80
 80016ba:	0412      	lsls	r2, r2, #16
 80016bc:	430a      	orrs	r2, r1
 80016be:	4651      	mov	r1, sl
 80016c0:	0f49      	lsrs	r1, r1, #29
 80016c2:	4311      	orrs	r1, r2
 80016c4:	468b      	mov	fp, r1
 80016c6:	4981      	ldr	r1, [pc, #516]	; (80018cc <__aeabi_ddiv+0x280>)
 80016c8:	4652      	mov	r2, sl
 80016ca:	468c      	mov	ip, r1
 80016cc:	9900      	ldr	r1, [sp, #0]
 80016ce:	4463      	add	r3, ip
 80016d0:	1acb      	subs	r3, r1, r3
 80016d2:	2100      	movs	r1, #0
 80016d4:	00d2      	lsls	r2, r2, #3
 80016d6:	9300      	str	r3, [sp, #0]
 80016d8:	002b      	movs	r3, r5
 80016da:	4063      	eors	r3, r4
 80016dc:	469a      	mov	sl, r3
 80016de:	2e0f      	cmp	r6, #15
 80016e0:	d900      	bls.n	80016e4 <__aeabi_ddiv+0x98>
 80016e2:	e105      	b.n	80018f0 <__aeabi_ddiv+0x2a4>
 80016e4:	4b7a      	ldr	r3, [pc, #488]	; (80018d0 <__aeabi_ddiv+0x284>)
 80016e6:	00b6      	lsls	r6, r6, #2
 80016e8:	599b      	ldr	r3, [r3, r6]
 80016ea:	469f      	mov	pc, r3
 80016ec:	465b      	mov	r3, fp
 80016ee:	4333      	orrs	r3, r6
 80016f0:	4699      	mov	r9, r3
 80016f2:	d000      	beq.n	80016f6 <__aeabi_ddiv+0xaa>
 80016f4:	e0b8      	b.n	8001868 <__aeabi_ddiv+0x21c>
 80016f6:	2302      	movs	r3, #2
 80016f8:	2608      	movs	r6, #8
 80016fa:	2700      	movs	r7, #0
 80016fc:	9000      	str	r0, [sp, #0]
 80016fe:	9302      	str	r3, [sp, #8]
 8001700:	e7ca      	b.n	8001698 <__aeabi_ddiv+0x4c>
 8001702:	46cb      	mov	fp, r9
 8001704:	003a      	movs	r2, r7
 8001706:	9902      	ldr	r1, [sp, #8]
 8001708:	9501      	str	r5, [sp, #4]
 800170a:	9b01      	ldr	r3, [sp, #4]
 800170c:	469a      	mov	sl, r3
 800170e:	2902      	cmp	r1, #2
 8001710:	d027      	beq.n	8001762 <__aeabi_ddiv+0x116>
 8001712:	2903      	cmp	r1, #3
 8001714:	d100      	bne.n	8001718 <__aeabi_ddiv+0xcc>
 8001716:	e280      	b.n	8001c1a <__aeabi_ddiv+0x5ce>
 8001718:	2901      	cmp	r1, #1
 800171a:	d044      	beq.n	80017a6 <__aeabi_ddiv+0x15a>
 800171c:	496d      	ldr	r1, [pc, #436]	; (80018d4 <__aeabi_ddiv+0x288>)
 800171e:	9b00      	ldr	r3, [sp, #0]
 8001720:	468c      	mov	ip, r1
 8001722:	4463      	add	r3, ip
 8001724:	001c      	movs	r4, r3
 8001726:	2c00      	cmp	r4, #0
 8001728:	dd38      	ble.n	800179c <__aeabi_ddiv+0x150>
 800172a:	0753      	lsls	r3, r2, #29
 800172c:	d000      	beq.n	8001730 <__aeabi_ddiv+0xe4>
 800172e:	e213      	b.n	8001b58 <__aeabi_ddiv+0x50c>
 8001730:	08d2      	lsrs	r2, r2, #3
 8001732:	465b      	mov	r3, fp
 8001734:	01db      	lsls	r3, r3, #7
 8001736:	d509      	bpl.n	800174c <__aeabi_ddiv+0x100>
 8001738:	4659      	mov	r1, fp
 800173a:	4b67      	ldr	r3, [pc, #412]	; (80018d8 <__aeabi_ddiv+0x28c>)
 800173c:	4019      	ands	r1, r3
 800173e:	468b      	mov	fp, r1
 8001740:	2180      	movs	r1, #128	; 0x80
 8001742:	00c9      	lsls	r1, r1, #3
 8001744:	468c      	mov	ip, r1
 8001746:	9b00      	ldr	r3, [sp, #0]
 8001748:	4463      	add	r3, ip
 800174a:	001c      	movs	r4, r3
 800174c:	4b63      	ldr	r3, [pc, #396]	; (80018dc <__aeabi_ddiv+0x290>)
 800174e:	429c      	cmp	r4, r3
 8001750:	dc07      	bgt.n	8001762 <__aeabi_ddiv+0x116>
 8001752:	465b      	mov	r3, fp
 8001754:	0564      	lsls	r4, r4, #21
 8001756:	075f      	lsls	r7, r3, #29
 8001758:	025b      	lsls	r3, r3, #9
 800175a:	4317      	orrs	r7, r2
 800175c:	0b1b      	lsrs	r3, r3, #12
 800175e:	0d62      	lsrs	r2, r4, #21
 8001760:	e002      	b.n	8001768 <__aeabi_ddiv+0x11c>
 8001762:	2300      	movs	r3, #0
 8001764:	2700      	movs	r7, #0
 8001766:	4a58      	ldr	r2, [pc, #352]	; (80018c8 <__aeabi_ddiv+0x27c>)
 8001768:	2100      	movs	r1, #0
 800176a:	031b      	lsls	r3, r3, #12
 800176c:	0b1c      	lsrs	r4, r3, #12
 800176e:	0d0b      	lsrs	r3, r1, #20
 8001770:	051b      	lsls	r3, r3, #20
 8001772:	4323      	orrs	r3, r4
 8001774:	0514      	lsls	r4, r2, #20
 8001776:	4a5a      	ldr	r2, [pc, #360]	; (80018e0 <__aeabi_ddiv+0x294>)
 8001778:	0038      	movs	r0, r7
 800177a:	4013      	ands	r3, r2
 800177c:	431c      	orrs	r4, r3
 800177e:	4653      	mov	r3, sl
 8001780:	0064      	lsls	r4, r4, #1
 8001782:	07db      	lsls	r3, r3, #31
 8001784:	0864      	lsrs	r4, r4, #1
 8001786:	431c      	orrs	r4, r3
 8001788:	0021      	movs	r1, r4
 800178a:	b005      	add	sp, #20
 800178c:	bc3c      	pop	{r2, r3, r4, r5}
 800178e:	4690      	mov	r8, r2
 8001790:	4699      	mov	r9, r3
 8001792:	46a2      	mov	sl, r4
 8001794:	46ab      	mov	fp, r5
 8001796:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001798:	2201      	movs	r2, #1
 800179a:	4252      	negs	r2, r2
 800179c:	2301      	movs	r3, #1
 800179e:	1b1b      	subs	r3, r3, r4
 80017a0:	2b38      	cmp	r3, #56	; 0x38
 80017a2:	dc00      	bgt.n	80017a6 <__aeabi_ddiv+0x15a>
 80017a4:	e1ad      	b.n	8001b02 <__aeabi_ddiv+0x4b6>
 80017a6:	2200      	movs	r2, #0
 80017a8:	2300      	movs	r3, #0
 80017aa:	2700      	movs	r7, #0
 80017ac:	e7dc      	b.n	8001768 <__aeabi_ddiv+0x11c>
 80017ae:	465b      	mov	r3, fp
 80017b0:	4333      	orrs	r3, r6
 80017b2:	4699      	mov	r9, r3
 80017b4:	d05e      	beq.n	8001874 <__aeabi_ddiv+0x228>
 80017b6:	2e00      	cmp	r6, #0
 80017b8:	d100      	bne.n	80017bc <__aeabi_ddiv+0x170>
 80017ba:	e18a      	b.n	8001ad2 <__aeabi_ddiv+0x486>
 80017bc:	0030      	movs	r0, r6
 80017be:	f001 fa6b 	bl	8002c98 <__clzsi2>
 80017c2:	0003      	movs	r3, r0
 80017c4:	3b0b      	subs	r3, #11
 80017c6:	2b1c      	cmp	r3, #28
 80017c8:	dd00      	ble.n	80017cc <__aeabi_ddiv+0x180>
 80017ca:	e17b      	b.n	8001ac4 <__aeabi_ddiv+0x478>
 80017cc:	221d      	movs	r2, #29
 80017ce:	1ad3      	subs	r3, r2, r3
 80017d0:	465a      	mov	r2, fp
 80017d2:	0001      	movs	r1, r0
 80017d4:	40da      	lsrs	r2, r3
 80017d6:	3908      	subs	r1, #8
 80017d8:	408e      	lsls	r6, r1
 80017da:	0013      	movs	r3, r2
 80017dc:	465f      	mov	r7, fp
 80017de:	4333      	orrs	r3, r6
 80017e0:	4699      	mov	r9, r3
 80017e2:	408f      	lsls	r7, r1
 80017e4:	4b3f      	ldr	r3, [pc, #252]	; (80018e4 <__aeabi_ddiv+0x298>)
 80017e6:	2600      	movs	r6, #0
 80017e8:	1a1b      	subs	r3, r3, r0
 80017ea:	9300      	str	r3, [sp, #0]
 80017ec:	2300      	movs	r3, #0
 80017ee:	9302      	str	r3, [sp, #8]
 80017f0:	e752      	b.n	8001698 <__aeabi_ddiv+0x4c>
 80017f2:	4641      	mov	r1, r8
 80017f4:	4653      	mov	r3, sl
 80017f6:	430b      	orrs	r3, r1
 80017f8:	493b      	ldr	r1, [pc, #236]	; (80018e8 <__aeabi_ddiv+0x29c>)
 80017fa:	469b      	mov	fp, r3
 80017fc:	468c      	mov	ip, r1
 80017fe:	9b00      	ldr	r3, [sp, #0]
 8001800:	4463      	add	r3, ip
 8001802:	9300      	str	r3, [sp, #0]
 8001804:	465b      	mov	r3, fp
 8001806:	2b00      	cmp	r3, #0
 8001808:	d13b      	bne.n	8001882 <__aeabi_ddiv+0x236>
 800180a:	2302      	movs	r3, #2
 800180c:	2200      	movs	r2, #0
 800180e:	431e      	orrs	r6, r3
 8001810:	2102      	movs	r1, #2
 8001812:	e761      	b.n	80016d8 <__aeabi_ddiv+0x8c>
 8001814:	4643      	mov	r3, r8
 8001816:	4313      	orrs	r3, r2
 8001818:	469b      	mov	fp, r3
 800181a:	d037      	beq.n	800188c <__aeabi_ddiv+0x240>
 800181c:	4643      	mov	r3, r8
 800181e:	2b00      	cmp	r3, #0
 8001820:	d100      	bne.n	8001824 <__aeabi_ddiv+0x1d8>
 8001822:	e162      	b.n	8001aea <__aeabi_ddiv+0x49e>
 8001824:	4640      	mov	r0, r8
 8001826:	f001 fa37 	bl	8002c98 <__clzsi2>
 800182a:	0003      	movs	r3, r0
 800182c:	3b0b      	subs	r3, #11
 800182e:	2b1c      	cmp	r3, #28
 8001830:	dd00      	ble.n	8001834 <__aeabi_ddiv+0x1e8>
 8001832:	e153      	b.n	8001adc <__aeabi_ddiv+0x490>
 8001834:	0002      	movs	r2, r0
 8001836:	4641      	mov	r1, r8
 8001838:	3a08      	subs	r2, #8
 800183a:	4091      	lsls	r1, r2
 800183c:	4688      	mov	r8, r1
 800183e:	211d      	movs	r1, #29
 8001840:	1acb      	subs	r3, r1, r3
 8001842:	4651      	mov	r1, sl
 8001844:	40d9      	lsrs	r1, r3
 8001846:	000b      	movs	r3, r1
 8001848:	4641      	mov	r1, r8
 800184a:	430b      	orrs	r3, r1
 800184c:	469b      	mov	fp, r3
 800184e:	4653      	mov	r3, sl
 8001850:	4093      	lsls	r3, r2
 8001852:	001a      	movs	r2, r3
 8001854:	9b00      	ldr	r3, [sp, #0]
 8001856:	4925      	ldr	r1, [pc, #148]	; (80018ec <__aeabi_ddiv+0x2a0>)
 8001858:	469c      	mov	ip, r3
 800185a:	4460      	add	r0, ip
 800185c:	0003      	movs	r3, r0
 800185e:	468c      	mov	ip, r1
 8001860:	4463      	add	r3, ip
 8001862:	9300      	str	r3, [sp, #0]
 8001864:	2100      	movs	r1, #0
 8001866:	e737      	b.n	80016d8 <__aeabi_ddiv+0x8c>
 8001868:	2303      	movs	r3, #3
 800186a:	46b1      	mov	r9, r6
 800186c:	9000      	str	r0, [sp, #0]
 800186e:	260c      	movs	r6, #12
 8001870:	9302      	str	r3, [sp, #8]
 8001872:	e711      	b.n	8001698 <__aeabi_ddiv+0x4c>
 8001874:	2300      	movs	r3, #0
 8001876:	9300      	str	r3, [sp, #0]
 8001878:	3301      	adds	r3, #1
 800187a:	2604      	movs	r6, #4
 800187c:	2700      	movs	r7, #0
 800187e:	9302      	str	r3, [sp, #8]
 8001880:	e70a      	b.n	8001698 <__aeabi_ddiv+0x4c>
 8001882:	2303      	movs	r3, #3
 8001884:	46c3      	mov	fp, r8
 8001886:	431e      	orrs	r6, r3
 8001888:	2103      	movs	r1, #3
 800188a:	e725      	b.n	80016d8 <__aeabi_ddiv+0x8c>
 800188c:	3301      	adds	r3, #1
 800188e:	431e      	orrs	r6, r3
 8001890:	2200      	movs	r2, #0
 8001892:	2101      	movs	r1, #1
 8001894:	e720      	b.n	80016d8 <__aeabi_ddiv+0x8c>
 8001896:	2300      	movs	r3, #0
 8001898:	469a      	mov	sl, r3
 800189a:	2380      	movs	r3, #128	; 0x80
 800189c:	2700      	movs	r7, #0
 800189e:	031b      	lsls	r3, r3, #12
 80018a0:	4a09      	ldr	r2, [pc, #36]	; (80018c8 <__aeabi_ddiv+0x27c>)
 80018a2:	e761      	b.n	8001768 <__aeabi_ddiv+0x11c>
 80018a4:	2380      	movs	r3, #128	; 0x80
 80018a6:	4649      	mov	r1, r9
 80018a8:	031b      	lsls	r3, r3, #12
 80018aa:	4219      	tst	r1, r3
 80018ac:	d100      	bne.n	80018b0 <__aeabi_ddiv+0x264>
 80018ae:	e0e2      	b.n	8001a76 <__aeabi_ddiv+0x42a>
 80018b0:	4659      	mov	r1, fp
 80018b2:	4219      	tst	r1, r3
 80018b4:	d000      	beq.n	80018b8 <__aeabi_ddiv+0x26c>
 80018b6:	e0de      	b.n	8001a76 <__aeabi_ddiv+0x42a>
 80018b8:	430b      	orrs	r3, r1
 80018ba:	031b      	lsls	r3, r3, #12
 80018bc:	0017      	movs	r7, r2
 80018be:	0b1b      	lsrs	r3, r3, #12
 80018c0:	46a2      	mov	sl, r4
 80018c2:	4a01      	ldr	r2, [pc, #4]	; (80018c8 <__aeabi_ddiv+0x27c>)
 80018c4:	e750      	b.n	8001768 <__aeabi_ddiv+0x11c>
 80018c6:	46c0      	nop			; (mov r8, r8)
 80018c8:	000007ff 	.word	0x000007ff
 80018cc:	fffffc01 	.word	0xfffffc01
 80018d0:	08006340 	.word	0x08006340
 80018d4:	000003ff 	.word	0x000003ff
 80018d8:	feffffff 	.word	0xfeffffff
 80018dc:	000007fe 	.word	0x000007fe
 80018e0:	800fffff 	.word	0x800fffff
 80018e4:	fffffc0d 	.word	0xfffffc0d
 80018e8:	fffff801 	.word	0xfffff801
 80018ec:	000003f3 	.word	0x000003f3
 80018f0:	45d9      	cmp	r9, fp
 80018f2:	d900      	bls.n	80018f6 <__aeabi_ddiv+0x2aa>
 80018f4:	e0cb      	b.n	8001a8e <__aeabi_ddiv+0x442>
 80018f6:	d100      	bne.n	80018fa <__aeabi_ddiv+0x2ae>
 80018f8:	e0c6      	b.n	8001a88 <__aeabi_ddiv+0x43c>
 80018fa:	003c      	movs	r4, r7
 80018fc:	4648      	mov	r0, r9
 80018fe:	2700      	movs	r7, #0
 8001900:	9b00      	ldr	r3, [sp, #0]
 8001902:	3b01      	subs	r3, #1
 8001904:	9300      	str	r3, [sp, #0]
 8001906:	465b      	mov	r3, fp
 8001908:	0e16      	lsrs	r6, r2, #24
 800190a:	021b      	lsls	r3, r3, #8
 800190c:	431e      	orrs	r6, r3
 800190e:	0213      	lsls	r3, r2, #8
 8001910:	4698      	mov	r8, r3
 8001912:	0433      	lsls	r3, r6, #16
 8001914:	0c1b      	lsrs	r3, r3, #16
 8001916:	4699      	mov	r9, r3
 8001918:	0c31      	lsrs	r1, r6, #16
 800191a:	9101      	str	r1, [sp, #4]
 800191c:	f7fe fc84 	bl	8000228 <__aeabi_uidivmod>
 8001920:	464a      	mov	r2, r9
 8001922:	4342      	muls	r2, r0
 8001924:	040b      	lsls	r3, r1, #16
 8001926:	0c21      	lsrs	r1, r4, #16
 8001928:	0005      	movs	r5, r0
 800192a:	4319      	orrs	r1, r3
 800192c:	428a      	cmp	r2, r1
 800192e:	d907      	bls.n	8001940 <__aeabi_ddiv+0x2f4>
 8001930:	1989      	adds	r1, r1, r6
 8001932:	3d01      	subs	r5, #1
 8001934:	428e      	cmp	r6, r1
 8001936:	d803      	bhi.n	8001940 <__aeabi_ddiv+0x2f4>
 8001938:	428a      	cmp	r2, r1
 800193a:	d901      	bls.n	8001940 <__aeabi_ddiv+0x2f4>
 800193c:	1e85      	subs	r5, r0, #2
 800193e:	1989      	adds	r1, r1, r6
 8001940:	1a88      	subs	r0, r1, r2
 8001942:	9901      	ldr	r1, [sp, #4]
 8001944:	f7fe fc70 	bl	8000228 <__aeabi_uidivmod>
 8001948:	0409      	lsls	r1, r1, #16
 800194a:	468c      	mov	ip, r1
 800194c:	464a      	mov	r2, r9
 800194e:	0421      	lsls	r1, r4, #16
 8001950:	4664      	mov	r4, ip
 8001952:	4342      	muls	r2, r0
 8001954:	0c09      	lsrs	r1, r1, #16
 8001956:	0003      	movs	r3, r0
 8001958:	4321      	orrs	r1, r4
 800195a:	428a      	cmp	r2, r1
 800195c:	d904      	bls.n	8001968 <__aeabi_ddiv+0x31c>
 800195e:	1989      	adds	r1, r1, r6
 8001960:	3b01      	subs	r3, #1
 8001962:	428e      	cmp	r6, r1
 8001964:	d800      	bhi.n	8001968 <__aeabi_ddiv+0x31c>
 8001966:	e0f1      	b.n	8001b4c <__aeabi_ddiv+0x500>
 8001968:	042d      	lsls	r5, r5, #16
 800196a:	431d      	orrs	r5, r3
 800196c:	46ab      	mov	fp, r5
 800196e:	4643      	mov	r3, r8
 8001970:	1a89      	subs	r1, r1, r2
 8001972:	4642      	mov	r2, r8
 8001974:	0c28      	lsrs	r0, r5, #16
 8001976:	0412      	lsls	r2, r2, #16
 8001978:	0c1d      	lsrs	r5, r3, #16
 800197a:	465b      	mov	r3, fp
 800197c:	0c14      	lsrs	r4, r2, #16
 800197e:	0022      	movs	r2, r4
 8001980:	041b      	lsls	r3, r3, #16
 8001982:	0c1b      	lsrs	r3, r3, #16
 8001984:	435a      	muls	r2, r3
 8001986:	9403      	str	r4, [sp, #12]
 8001988:	436b      	muls	r3, r5
 800198a:	4344      	muls	r4, r0
 800198c:	9502      	str	r5, [sp, #8]
 800198e:	4368      	muls	r0, r5
 8001990:	191b      	adds	r3, r3, r4
 8001992:	0c15      	lsrs	r5, r2, #16
 8001994:	18eb      	adds	r3, r5, r3
 8001996:	429c      	cmp	r4, r3
 8001998:	d903      	bls.n	80019a2 <__aeabi_ddiv+0x356>
 800199a:	2480      	movs	r4, #128	; 0x80
 800199c:	0264      	lsls	r4, r4, #9
 800199e:	46a4      	mov	ip, r4
 80019a0:	4460      	add	r0, ip
 80019a2:	0c1c      	lsrs	r4, r3, #16
 80019a4:	0415      	lsls	r5, r2, #16
 80019a6:	041b      	lsls	r3, r3, #16
 80019a8:	0c2d      	lsrs	r5, r5, #16
 80019aa:	1820      	adds	r0, r4, r0
 80019ac:	195d      	adds	r5, r3, r5
 80019ae:	4281      	cmp	r1, r0
 80019b0:	d377      	bcc.n	8001aa2 <__aeabi_ddiv+0x456>
 80019b2:	d073      	beq.n	8001a9c <__aeabi_ddiv+0x450>
 80019b4:	1a0c      	subs	r4, r1, r0
 80019b6:	4aa2      	ldr	r2, [pc, #648]	; (8001c40 <__aeabi_ddiv+0x5f4>)
 80019b8:	1b7d      	subs	r5, r7, r5
 80019ba:	42af      	cmp	r7, r5
 80019bc:	41bf      	sbcs	r7, r7
 80019be:	4694      	mov	ip, r2
 80019c0:	9b00      	ldr	r3, [sp, #0]
 80019c2:	427f      	negs	r7, r7
 80019c4:	4463      	add	r3, ip
 80019c6:	1be0      	subs	r0, r4, r7
 80019c8:	001c      	movs	r4, r3
 80019ca:	4286      	cmp	r6, r0
 80019cc:	d100      	bne.n	80019d0 <__aeabi_ddiv+0x384>
 80019ce:	e0db      	b.n	8001b88 <__aeabi_ddiv+0x53c>
 80019d0:	9901      	ldr	r1, [sp, #4]
 80019d2:	f7fe fc29 	bl	8000228 <__aeabi_uidivmod>
 80019d6:	464a      	mov	r2, r9
 80019d8:	4342      	muls	r2, r0
 80019da:	040b      	lsls	r3, r1, #16
 80019dc:	0c29      	lsrs	r1, r5, #16
 80019de:	0007      	movs	r7, r0
 80019e0:	4319      	orrs	r1, r3
 80019e2:	428a      	cmp	r2, r1
 80019e4:	d907      	bls.n	80019f6 <__aeabi_ddiv+0x3aa>
 80019e6:	1989      	adds	r1, r1, r6
 80019e8:	3f01      	subs	r7, #1
 80019ea:	428e      	cmp	r6, r1
 80019ec:	d803      	bhi.n	80019f6 <__aeabi_ddiv+0x3aa>
 80019ee:	428a      	cmp	r2, r1
 80019f0:	d901      	bls.n	80019f6 <__aeabi_ddiv+0x3aa>
 80019f2:	1e87      	subs	r7, r0, #2
 80019f4:	1989      	adds	r1, r1, r6
 80019f6:	1a88      	subs	r0, r1, r2
 80019f8:	9901      	ldr	r1, [sp, #4]
 80019fa:	f7fe fc15 	bl	8000228 <__aeabi_uidivmod>
 80019fe:	0409      	lsls	r1, r1, #16
 8001a00:	464a      	mov	r2, r9
 8001a02:	4689      	mov	r9, r1
 8001a04:	0429      	lsls	r1, r5, #16
 8001a06:	464d      	mov	r5, r9
 8001a08:	4342      	muls	r2, r0
 8001a0a:	0c09      	lsrs	r1, r1, #16
 8001a0c:	0003      	movs	r3, r0
 8001a0e:	4329      	orrs	r1, r5
 8001a10:	428a      	cmp	r2, r1
 8001a12:	d907      	bls.n	8001a24 <__aeabi_ddiv+0x3d8>
 8001a14:	1989      	adds	r1, r1, r6
 8001a16:	3b01      	subs	r3, #1
 8001a18:	428e      	cmp	r6, r1
 8001a1a:	d803      	bhi.n	8001a24 <__aeabi_ddiv+0x3d8>
 8001a1c:	428a      	cmp	r2, r1
 8001a1e:	d901      	bls.n	8001a24 <__aeabi_ddiv+0x3d8>
 8001a20:	1e83      	subs	r3, r0, #2
 8001a22:	1989      	adds	r1, r1, r6
 8001a24:	043f      	lsls	r7, r7, #16
 8001a26:	1a89      	subs	r1, r1, r2
 8001a28:	003a      	movs	r2, r7
 8001a2a:	9f03      	ldr	r7, [sp, #12]
 8001a2c:	431a      	orrs	r2, r3
 8001a2e:	0038      	movs	r0, r7
 8001a30:	0413      	lsls	r3, r2, #16
 8001a32:	0c1b      	lsrs	r3, r3, #16
 8001a34:	4358      	muls	r0, r3
 8001a36:	4681      	mov	r9, r0
 8001a38:	9802      	ldr	r0, [sp, #8]
 8001a3a:	0c15      	lsrs	r5, r2, #16
 8001a3c:	436f      	muls	r7, r5
 8001a3e:	4343      	muls	r3, r0
 8001a40:	4345      	muls	r5, r0
 8001a42:	4648      	mov	r0, r9
 8001a44:	0c00      	lsrs	r0, r0, #16
 8001a46:	4684      	mov	ip, r0
 8001a48:	19db      	adds	r3, r3, r7
 8001a4a:	4463      	add	r3, ip
 8001a4c:	429f      	cmp	r7, r3
 8001a4e:	d903      	bls.n	8001a58 <__aeabi_ddiv+0x40c>
 8001a50:	2080      	movs	r0, #128	; 0x80
 8001a52:	0240      	lsls	r0, r0, #9
 8001a54:	4684      	mov	ip, r0
 8001a56:	4465      	add	r5, ip
 8001a58:	4648      	mov	r0, r9
 8001a5a:	0c1f      	lsrs	r7, r3, #16
 8001a5c:	0400      	lsls	r0, r0, #16
 8001a5e:	041b      	lsls	r3, r3, #16
 8001a60:	0c00      	lsrs	r0, r0, #16
 8001a62:	197d      	adds	r5, r7, r5
 8001a64:	1818      	adds	r0, r3, r0
 8001a66:	42a9      	cmp	r1, r5
 8001a68:	d200      	bcs.n	8001a6c <__aeabi_ddiv+0x420>
 8001a6a:	e084      	b.n	8001b76 <__aeabi_ddiv+0x52a>
 8001a6c:	d100      	bne.n	8001a70 <__aeabi_ddiv+0x424>
 8001a6e:	e07f      	b.n	8001b70 <__aeabi_ddiv+0x524>
 8001a70:	2301      	movs	r3, #1
 8001a72:	431a      	orrs	r2, r3
 8001a74:	e657      	b.n	8001726 <__aeabi_ddiv+0xda>
 8001a76:	2380      	movs	r3, #128	; 0x80
 8001a78:	464a      	mov	r2, r9
 8001a7a:	031b      	lsls	r3, r3, #12
 8001a7c:	4313      	orrs	r3, r2
 8001a7e:	031b      	lsls	r3, r3, #12
 8001a80:	0b1b      	lsrs	r3, r3, #12
 8001a82:	46aa      	mov	sl, r5
 8001a84:	4a6f      	ldr	r2, [pc, #444]	; (8001c44 <__aeabi_ddiv+0x5f8>)
 8001a86:	e66f      	b.n	8001768 <__aeabi_ddiv+0x11c>
 8001a88:	42ba      	cmp	r2, r7
 8001a8a:	d900      	bls.n	8001a8e <__aeabi_ddiv+0x442>
 8001a8c:	e735      	b.n	80018fa <__aeabi_ddiv+0x2ae>
 8001a8e:	464b      	mov	r3, r9
 8001a90:	07dc      	lsls	r4, r3, #31
 8001a92:	0858      	lsrs	r0, r3, #1
 8001a94:	087b      	lsrs	r3, r7, #1
 8001a96:	431c      	orrs	r4, r3
 8001a98:	07ff      	lsls	r7, r7, #31
 8001a9a:	e734      	b.n	8001906 <__aeabi_ddiv+0x2ba>
 8001a9c:	2400      	movs	r4, #0
 8001a9e:	42af      	cmp	r7, r5
 8001aa0:	d289      	bcs.n	80019b6 <__aeabi_ddiv+0x36a>
 8001aa2:	4447      	add	r7, r8
 8001aa4:	4547      	cmp	r7, r8
 8001aa6:	41a4      	sbcs	r4, r4
 8001aa8:	465b      	mov	r3, fp
 8001aaa:	4264      	negs	r4, r4
 8001aac:	19a4      	adds	r4, r4, r6
 8001aae:	1864      	adds	r4, r4, r1
 8001ab0:	3b01      	subs	r3, #1
 8001ab2:	42a6      	cmp	r6, r4
 8001ab4:	d21e      	bcs.n	8001af4 <__aeabi_ddiv+0x4a8>
 8001ab6:	42a0      	cmp	r0, r4
 8001ab8:	d86d      	bhi.n	8001b96 <__aeabi_ddiv+0x54a>
 8001aba:	d100      	bne.n	8001abe <__aeabi_ddiv+0x472>
 8001abc:	e0b6      	b.n	8001c2c <__aeabi_ddiv+0x5e0>
 8001abe:	1a24      	subs	r4, r4, r0
 8001ac0:	469b      	mov	fp, r3
 8001ac2:	e778      	b.n	80019b6 <__aeabi_ddiv+0x36a>
 8001ac4:	0003      	movs	r3, r0
 8001ac6:	465a      	mov	r2, fp
 8001ac8:	3b28      	subs	r3, #40	; 0x28
 8001aca:	409a      	lsls	r2, r3
 8001acc:	2700      	movs	r7, #0
 8001ace:	4691      	mov	r9, r2
 8001ad0:	e688      	b.n	80017e4 <__aeabi_ddiv+0x198>
 8001ad2:	4658      	mov	r0, fp
 8001ad4:	f001 f8e0 	bl	8002c98 <__clzsi2>
 8001ad8:	3020      	adds	r0, #32
 8001ada:	e672      	b.n	80017c2 <__aeabi_ddiv+0x176>
 8001adc:	0003      	movs	r3, r0
 8001ade:	4652      	mov	r2, sl
 8001ae0:	3b28      	subs	r3, #40	; 0x28
 8001ae2:	409a      	lsls	r2, r3
 8001ae4:	4693      	mov	fp, r2
 8001ae6:	2200      	movs	r2, #0
 8001ae8:	e6b4      	b.n	8001854 <__aeabi_ddiv+0x208>
 8001aea:	4650      	mov	r0, sl
 8001aec:	f001 f8d4 	bl	8002c98 <__clzsi2>
 8001af0:	3020      	adds	r0, #32
 8001af2:	e69a      	b.n	800182a <__aeabi_ddiv+0x1de>
 8001af4:	42a6      	cmp	r6, r4
 8001af6:	d1e2      	bne.n	8001abe <__aeabi_ddiv+0x472>
 8001af8:	45b8      	cmp	r8, r7
 8001afa:	d9dc      	bls.n	8001ab6 <__aeabi_ddiv+0x46a>
 8001afc:	1a34      	subs	r4, r6, r0
 8001afe:	469b      	mov	fp, r3
 8001b00:	e759      	b.n	80019b6 <__aeabi_ddiv+0x36a>
 8001b02:	2b1f      	cmp	r3, #31
 8001b04:	dc65      	bgt.n	8001bd2 <__aeabi_ddiv+0x586>
 8001b06:	4c50      	ldr	r4, [pc, #320]	; (8001c48 <__aeabi_ddiv+0x5fc>)
 8001b08:	9900      	ldr	r1, [sp, #0]
 8001b0a:	46a4      	mov	ip, r4
 8001b0c:	465c      	mov	r4, fp
 8001b0e:	4461      	add	r1, ip
 8001b10:	0008      	movs	r0, r1
 8001b12:	408c      	lsls	r4, r1
 8001b14:	0011      	movs	r1, r2
 8001b16:	4082      	lsls	r2, r0
 8001b18:	40d9      	lsrs	r1, r3
 8001b1a:	1e50      	subs	r0, r2, #1
 8001b1c:	4182      	sbcs	r2, r0
 8001b1e:	430c      	orrs	r4, r1
 8001b20:	4314      	orrs	r4, r2
 8001b22:	465a      	mov	r2, fp
 8001b24:	40da      	lsrs	r2, r3
 8001b26:	0013      	movs	r3, r2
 8001b28:	0762      	lsls	r2, r4, #29
 8001b2a:	d009      	beq.n	8001b40 <__aeabi_ddiv+0x4f4>
 8001b2c:	220f      	movs	r2, #15
 8001b2e:	4022      	ands	r2, r4
 8001b30:	2a04      	cmp	r2, #4
 8001b32:	d005      	beq.n	8001b40 <__aeabi_ddiv+0x4f4>
 8001b34:	0022      	movs	r2, r4
 8001b36:	1d14      	adds	r4, r2, #4
 8001b38:	4294      	cmp	r4, r2
 8001b3a:	4189      	sbcs	r1, r1
 8001b3c:	4249      	negs	r1, r1
 8001b3e:	185b      	adds	r3, r3, r1
 8001b40:	021a      	lsls	r2, r3, #8
 8001b42:	d562      	bpl.n	8001c0a <__aeabi_ddiv+0x5be>
 8001b44:	2201      	movs	r2, #1
 8001b46:	2300      	movs	r3, #0
 8001b48:	2700      	movs	r7, #0
 8001b4a:	e60d      	b.n	8001768 <__aeabi_ddiv+0x11c>
 8001b4c:	428a      	cmp	r2, r1
 8001b4e:	d800      	bhi.n	8001b52 <__aeabi_ddiv+0x506>
 8001b50:	e70a      	b.n	8001968 <__aeabi_ddiv+0x31c>
 8001b52:	1e83      	subs	r3, r0, #2
 8001b54:	1989      	adds	r1, r1, r6
 8001b56:	e707      	b.n	8001968 <__aeabi_ddiv+0x31c>
 8001b58:	230f      	movs	r3, #15
 8001b5a:	4013      	ands	r3, r2
 8001b5c:	2b04      	cmp	r3, #4
 8001b5e:	d100      	bne.n	8001b62 <__aeabi_ddiv+0x516>
 8001b60:	e5e6      	b.n	8001730 <__aeabi_ddiv+0xe4>
 8001b62:	1d17      	adds	r7, r2, #4
 8001b64:	4297      	cmp	r7, r2
 8001b66:	4192      	sbcs	r2, r2
 8001b68:	4253      	negs	r3, r2
 8001b6a:	449b      	add	fp, r3
 8001b6c:	08fa      	lsrs	r2, r7, #3
 8001b6e:	e5e0      	b.n	8001732 <__aeabi_ddiv+0xe6>
 8001b70:	2800      	cmp	r0, #0
 8001b72:	d100      	bne.n	8001b76 <__aeabi_ddiv+0x52a>
 8001b74:	e5d7      	b.n	8001726 <__aeabi_ddiv+0xda>
 8001b76:	1871      	adds	r1, r6, r1
 8001b78:	1e53      	subs	r3, r2, #1
 8001b7a:	42b1      	cmp	r1, r6
 8001b7c:	d327      	bcc.n	8001bce <__aeabi_ddiv+0x582>
 8001b7e:	42a9      	cmp	r1, r5
 8001b80:	d315      	bcc.n	8001bae <__aeabi_ddiv+0x562>
 8001b82:	d058      	beq.n	8001c36 <__aeabi_ddiv+0x5ea>
 8001b84:	001a      	movs	r2, r3
 8001b86:	e773      	b.n	8001a70 <__aeabi_ddiv+0x424>
 8001b88:	2b00      	cmp	r3, #0
 8001b8a:	dc00      	bgt.n	8001b8e <__aeabi_ddiv+0x542>
 8001b8c:	e604      	b.n	8001798 <__aeabi_ddiv+0x14c>
 8001b8e:	2301      	movs	r3, #1
 8001b90:	2200      	movs	r2, #0
 8001b92:	449b      	add	fp, r3
 8001b94:	e5cd      	b.n	8001732 <__aeabi_ddiv+0xe6>
 8001b96:	2302      	movs	r3, #2
 8001b98:	4447      	add	r7, r8
 8001b9a:	4547      	cmp	r7, r8
 8001b9c:	4189      	sbcs	r1, r1
 8001b9e:	425b      	negs	r3, r3
 8001ba0:	469c      	mov	ip, r3
 8001ba2:	4249      	negs	r1, r1
 8001ba4:	1989      	adds	r1, r1, r6
 8001ba6:	190c      	adds	r4, r1, r4
 8001ba8:	44e3      	add	fp, ip
 8001baa:	1a24      	subs	r4, r4, r0
 8001bac:	e703      	b.n	80019b6 <__aeabi_ddiv+0x36a>
 8001bae:	4643      	mov	r3, r8
 8001bb0:	005f      	lsls	r7, r3, #1
 8001bb2:	4547      	cmp	r7, r8
 8001bb4:	419b      	sbcs	r3, r3
 8001bb6:	46b8      	mov	r8, r7
 8001bb8:	425b      	negs	r3, r3
 8001bba:	199e      	adds	r6, r3, r6
 8001bbc:	3a02      	subs	r2, #2
 8001bbe:	1989      	adds	r1, r1, r6
 8001bc0:	42a9      	cmp	r1, r5
 8001bc2:	d000      	beq.n	8001bc6 <__aeabi_ddiv+0x57a>
 8001bc4:	e754      	b.n	8001a70 <__aeabi_ddiv+0x424>
 8001bc6:	4540      	cmp	r0, r8
 8001bc8:	d000      	beq.n	8001bcc <__aeabi_ddiv+0x580>
 8001bca:	e751      	b.n	8001a70 <__aeabi_ddiv+0x424>
 8001bcc:	e5ab      	b.n	8001726 <__aeabi_ddiv+0xda>
 8001bce:	001a      	movs	r2, r3
 8001bd0:	e7f6      	b.n	8001bc0 <__aeabi_ddiv+0x574>
 8001bd2:	211f      	movs	r1, #31
 8001bd4:	465f      	mov	r7, fp
 8001bd6:	4249      	negs	r1, r1
 8001bd8:	1b0c      	subs	r4, r1, r4
 8001bda:	40e7      	lsrs	r7, r4
 8001bdc:	2b20      	cmp	r3, #32
 8001bde:	d007      	beq.n	8001bf0 <__aeabi_ddiv+0x5a4>
 8001be0:	491a      	ldr	r1, [pc, #104]	; (8001c4c <__aeabi_ddiv+0x600>)
 8001be2:	9b00      	ldr	r3, [sp, #0]
 8001be4:	468c      	mov	ip, r1
 8001be6:	4463      	add	r3, ip
 8001be8:	0018      	movs	r0, r3
 8001bea:	465b      	mov	r3, fp
 8001bec:	4083      	lsls	r3, r0
 8001bee:	431a      	orrs	r2, r3
 8001bf0:	1e50      	subs	r0, r2, #1
 8001bf2:	4182      	sbcs	r2, r0
 8001bf4:	433a      	orrs	r2, r7
 8001bf6:	2707      	movs	r7, #7
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	4017      	ands	r7, r2
 8001bfc:	d009      	beq.n	8001c12 <__aeabi_ddiv+0x5c6>
 8001bfe:	210f      	movs	r1, #15
 8001c00:	2300      	movs	r3, #0
 8001c02:	4011      	ands	r1, r2
 8001c04:	0014      	movs	r4, r2
 8001c06:	2904      	cmp	r1, #4
 8001c08:	d195      	bne.n	8001b36 <__aeabi_ddiv+0x4ea>
 8001c0a:	0022      	movs	r2, r4
 8001c0c:	075f      	lsls	r7, r3, #29
 8001c0e:	025b      	lsls	r3, r3, #9
 8001c10:	0b1b      	lsrs	r3, r3, #12
 8001c12:	08d2      	lsrs	r2, r2, #3
 8001c14:	4317      	orrs	r7, r2
 8001c16:	2200      	movs	r2, #0
 8001c18:	e5a6      	b.n	8001768 <__aeabi_ddiv+0x11c>
 8001c1a:	2380      	movs	r3, #128	; 0x80
 8001c1c:	4659      	mov	r1, fp
 8001c1e:	031b      	lsls	r3, r3, #12
 8001c20:	430b      	orrs	r3, r1
 8001c22:	031b      	lsls	r3, r3, #12
 8001c24:	0017      	movs	r7, r2
 8001c26:	0b1b      	lsrs	r3, r3, #12
 8001c28:	4a06      	ldr	r2, [pc, #24]	; (8001c44 <__aeabi_ddiv+0x5f8>)
 8001c2a:	e59d      	b.n	8001768 <__aeabi_ddiv+0x11c>
 8001c2c:	42bd      	cmp	r5, r7
 8001c2e:	d8b2      	bhi.n	8001b96 <__aeabi_ddiv+0x54a>
 8001c30:	469b      	mov	fp, r3
 8001c32:	2400      	movs	r4, #0
 8001c34:	e6bf      	b.n	80019b6 <__aeabi_ddiv+0x36a>
 8001c36:	4580      	cmp	r8, r0
 8001c38:	d3b9      	bcc.n	8001bae <__aeabi_ddiv+0x562>
 8001c3a:	001a      	movs	r2, r3
 8001c3c:	e7c3      	b.n	8001bc6 <__aeabi_ddiv+0x57a>
 8001c3e:	46c0      	nop			; (mov r8, r8)
 8001c40:	000003ff 	.word	0x000003ff
 8001c44:	000007ff 	.word	0x000007ff
 8001c48:	0000041e 	.word	0x0000041e
 8001c4c:	0000043e 	.word	0x0000043e

08001c50 <__eqdf2>:
 8001c50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c52:	464f      	mov	r7, r9
 8001c54:	4646      	mov	r6, r8
 8001c56:	46d6      	mov	lr, sl
 8001c58:	4684      	mov	ip, r0
 8001c5a:	b5c0      	push	{r6, r7, lr}
 8001c5c:	4680      	mov	r8, r0
 8001c5e:	4e19      	ldr	r6, [pc, #100]	; (8001cc4 <__eqdf2+0x74>)
 8001c60:	0318      	lsls	r0, r3, #12
 8001c62:	030f      	lsls	r7, r1, #12
 8001c64:	004d      	lsls	r5, r1, #1
 8001c66:	0b00      	lsrs	r0, r0, #12
 8001c68:	005c      	lsls	r4, r3, #1
 8001c6a:	4682      	mov	sl, r0
 8001c6c:	0b3f      	lsrs	r7, r7, #12
 8001c6e:	0d6d      	lsrs	r5, r5, #21
 8001c70:	0fc9      	lsrs	r1, r1, #31
 8001c72:	4691      	mov	r9, r2
 8001c74:	0d64      	lsrs	r4, r4, #21
 8001c76:	0fdb      	lsrs	r3, r3, #31
 8001c78:	2001      	movs	r0, #1
 8001c7a:	42b5      	cmp	r5, r6
 8001c7c:	d00a      	beq.n	8001c94 <__eqdf2+0x44>
 8001c7e:	42b4      	cmp	r4, r6
 8001c80:	d003      	beq.n	8001c8a <__eqdf2+0x3a>
 8001c82:	42a5      	cmp	r5, r4
 8001c84:	d101      	bne.n	8001c8a <__eqdf2+0x3a>
 8001c86:	4557      	cmp	r7, sl
 8001c88:	d00c      	beq.n	8001ca4 <__eqdf2+0x54>
 8001c8a:	bc1c      	pop	{r2, r3, r4}
 8001c8c:	4690      	mov	r8, r2
 8001c8e:	4699      	mov	r9, r3
 8001c90:	46a2      	mov	sl, r4
 8001c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c94:	4666      	mov	r6, ip
 8001c96:	433e      	orrs	r6, r7
 8001c98:	d1f7      	bne.n	8001c8a <__eqdf2+0x3a>
 8001c9a:	42ac      	cmp	r4, r5
 8001c9c:	d1f5      	bne.n	8001c8a <__eqdf2+0x3a>
 8001c9e:	4654      	mov	r4, sl
 8001ca0:	4314      	orrs	r4, r2
 8001ca2:	d1f2      	bne.n	8001c8a <__eqdf2+0x3a>
 8001ca4:	2001      	movs	r0, #1
 8001ca6:	45c8      	cmp	r8, r9
 8001ca8:	d1ef      	bne.n	8001c8a <__eqdf2+0x3a>
 8001caa:	4299      	cmp	r1, r3
 8001cac:	d007      	beq.n	8001cbe <__eqdf2+0x6e>
 8001cae:	2d00      	cmp	r5, #0
 8001cb0:	d1eb      	bne.n	8001c8a <__eqdf2+0x3a>
 8001cb2:	4663      	mov	r3, ip
 8001cb4:	431f      	orrs	r7, r3
 8001cb6:	0038      	movs	r0, r7
 8001cb8:	1e47      	subs	r7, r0, #1
 8001cba:	41b8      	sbcs	r0, r7
 8001cbc:	e7e5      	b.n	8001c8a <__eqdf2+0x3a>
 8001cbe:	2000      	movs	r0, #0
 8001cc0:	e7e3      	b.n	8001c8a <__eqdf2+0x3a>
 8001cc2:	46c0      	nop			; (mov r8, r8)
 8001cc4:	000007ff 	.word	0x000007ff

08001cc8 <__gedf2>:
 8001cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cca:	464f      	mov	r7, r9
 8001ccc:	4646      	mov	r6, r8
 8001cce:	46d6      	mov	lr, sl
 8001cd0:	004d      	lsls	r5, r1, #1
 8001cd2:	b5c0      	push	{r6, r7, lr}
 8001cd4:	030e      	lsls	r6, r1, #12
 8001cd6:	0fc9      	lsrs	r1, r1, #31
 8001cd8:	468a      	mov	sl, r1
 8001cda:	492c      	ldr	r1, [pc, #176]	; (8001d8c <__gedf2+0xc4>)
 8001cdc:	031f      	lsls	r7, r3, #12
 8001cde:	005c      	lsls	r4, r3, #1
 8001ce0:	4680      	mov	r8, r0
 8001ce2:	0b36      	lsrs	r6, r6, #12
 8001ce4:	0d6d      	lsrs	r5, r5, #21
 8001ce6:	4691      	mov	r9, r2
 8001ce8:	0b3f      	lsrs	r7, r7, #12
 8001cea:	0d64      	lsrs	r4, r4, #21
 8001cec:	0fdb      	lsrs	r3, r3, #31
 8001cee:	428d      	cmp	r5, r1
 8001cf0:	d01e      	beq.n	8001d30 <__gedf2+0x68>
 8001cf2:	428c      	cmp	r4, r1
 8001cf4:	d016      	beq.n	8001d24 <__gedf2+0x5c>
 8001cf6:	2d00      	cmp	r5, #0
 8001cf8:	d11e      	bne.n	8001d38 <__gedf2+0x70>
 8001cfa:	4330      	orrs	r0, r6
 8001cfc:	4684      	mov	ip, r0
 8001cfe:	2c00      	cmp	r4, #0
 8001d00:	d101      	bne.n	8001d06 <__gedf2+0x3e>
 8001d02:	433a      	orrs	r2, r7
 8001d04:	d023      	beq.n	8001d4e <__gedf2+0x86>
 8001d06:	4662      	mov	r2, ip
 8001d08:	2a00      	cmp	r2, #0
 8001d0a:	d01a      	beq.n	8001d42 <__gedf2+0x7a>
 8001d0c:	459a      	cmp	sl, r3
 8001d0e:	d029      	beq.n	8001d64 <__gedf2+0x9c>
 8001d10:	4651      	mov	r1, sl
 8001d12:	2002      	movs	r0, #2
 8001d14:	3901      	subs	r1, #1
 8001d16:	4008      	ands	r0, r1
 8001d18:	3801      	subs	r0, #1
 8001d1a:	bc1c      	pop	{r2, r3, r4}
 8001d1c:	4690      	mov	r8, r2
 8001d1e:	4699      	mov	r9, r3
 8001d20:	46a2      	mov	sl, r4
 8001d22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d24:	0039      	movs	r1, r7
 8001d26:	4311      	orrs	r1, r2
 8001d28:	d0e5      	beq.n	8001cf6 <__gedf2+0x2e>
 8001d2a:	2002      	movs	r0, #2
 8001d2c:	4240      	negs	r0, r0
 8001d2e:	e7f4      	b.n	8001d1a <__gedf2+0x52>
 8001d30:	4330      	orrs	r0, r6
 8001d32:	d1fa      	bne.n	8001d2a <__gedf2+0x62>
 8001d34:	42ac      	cmp	r4, r5
 8001d36:	d00f      	beq.n	8001d58 <__gedf2+0x90>
 8001d38:	2c00      	cmp	r4, #0
 8001d3a:	d10f      	bne.n	8001d5c <__gedf2+0x94>
 8001d3c:	433a      	orrs	r2, r7
 8001d3e:	d0e7      	beq.n	8001d10 <__gedf2+0x48>
 8001d40:	e00c      	b.n	8001d5c <__gedf2+0x94>
 8001d42:	2201      	movs	r2, #1
 8001d44:	3b01      	subs	r3, #1
 8001d46:	4393      	bics	r3, r2
 8001d48:	0018      	movs	r0, r3
 8001d4a:	3001      	adds	r0, #1
 8001d4c:	e7e5      	b.n	8001d1a <__gedf2+0x52>
 8001d4e:	4663      	mov	r3, ip
 8001d50:	2000      	movs	r0, #0
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d0e1      	beq.n	8001d1a <__gedf2+0x52>
 8001d56:	e7db      	b.n	8001d10 <__gedf2+0x48>
 8001d58:	433a      	orrs	r2, r7
 8001d5a:	d1e6      	bne.n	8001d2a <__gedf2+0x62>
 8001d5c:	459a      	cmp	sl, r3
 8001d5e:	d1d7      	bne.n	8001d10 <__gedf2+0x48>
 8001d60:	42a5      	cmp	r5, r4
 8001d62:	dcd5      	bgt.n	8001d10 <__gedf2+0x48>
 8001d64:	42a5      	cmp	r5, r4
 8001d66:	db05      	blt.n	8001d74 <__gedf2+0xac>
 8001d68:	42be      	cmp	r6, r7
 8001d6a:	d8d1      	bhi.n	8001d10 <__gedf2+0x48>
 8001d6c:	d008      	beq.n	8001d80 <__gedf2+0xb8>
 8001d6e:	2000      	movs	r0, #0
 8001d70:	42be      	cmp	r6, r7
 8001d72:	d2d2      	bcs.n	8001d1a <__gedf2+0x52>
 8001d74:	4650      	mov	r0, sl
 8001d76:	2301      	movs	r3, #1
 8001d78:	3801      	subs	r0, #1
 8001d7a:	4398      	bics	r0, r3
 8001d7c:	3001      	adds	r0, #1
 8001d7e:	e7cc      	b.n	8001d1a <__gedf2+0x52>
 8001d80:	45c8      	cmp	r8, r9
 8001d82:	d8c5      	bhi.n	8001d10 <__gedf2+0x48>
 8001d84:	2000      	movs	r0, #0
 8001d86:	45c8      	cmp	r8, r9
 8001d88:	d3f4      	bcc.n	8001d74 <__gedf2+0xac>
 8001d8a:	e7c6      	b.n	8001d1a <__gedf2+0x52>
 8001d8c:	000007ff 	.word	0x000007ff

08001d90 <__ledf2>:
 8001d90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d92:	464f      	mov	r7, r9
 8001d94:	4646      	mov	r6, r8
 8001d96:	46d6      	mov	lr, sl
 8001d98:	004d      	lsls	r5, r1, #1
 8001d9a:	b5c0      	push	{r6, r7, lr}
 8001d9c:	030e      	lsls	r6, r1, #12
 8001d9e:	0fc9      	lsrs	r1, r1, #31
 8001da0:	468a      	mov	sl, r1
 8001da2:	492e      	ldr	r1, [pc, #184]	; (8001e5c <__ledf2+0xcc>)
 8001da4:	031f      	lsls	r7, r3, #12
 8001da6:	005c      	lsls	r4, r3, #1
 8001da8:	4680      	mov	r8, r0
 8001daa:	0b36      	lsrs	r6, r6, #12
 8001dac:	0d6d      	lsrs	r5, r5, #21
 8001dae:	4691      	mov	r9, r2
 8001db0:	0b3f      	lsrs	r7, r7, #12
 8001db2:	0d64      	lsrs	r4, r4, #21
 8001db4:	0fdb      	lsrs	r3, r3, #31
 8001db6:	428d      	cmp	r5, r1
 8001db8:	d018      	beq.n	8001dec <__ledf2+0x5c>
 8001dba:	428c      	cmp	r4, r1
 8001dbc:	d011      	beq.n	8001de2 <__ledf2+0x52>
 8001dbe:	2d00      	cmp	r5, #0
 8001dc0:	d118      	bne.n	8001df4 <__ledf2+0x64>
 8001dc2:	4330      	orrs	r0, r6
 8001dc4:	4684      	mov	ip, r0
 8001dc6:	2c00      	cmp	r4, #0
 8001dc8:	d11e      	bne.n	8001e08 <__ledf2+0x78>
 8001dca:	433a      	orrs	r2, r7
 8001dcc:	d11c      	bne.n	8001e08 <__ledf2+0x78>
 8001dce:	4663      	mov	r3, ip
 8001dd0:	2000      	movs	r0, #0
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d030      	beq.n	8001e38 <__ledf2+0xa8>
 8001dd6:	4651      	mov	r1, sl
 8001dd8:	2002      	movs	r0, #2
 8001dda:	3901      	subs	r1, #1
 8001ddc:	4008      	ands	r0, r1
 8001dde:	3801      	subs	r0, #1
 8001de0:	e02a      	b.n	8001e38 <__ledf2+0xa8>
 8001de2:	0039      	movs	r1, r7
 8001de4:	4311      	orrs	r1, r2
 8001de6:	d0ea      	beq.n	8001dbe <__ledf2+0x2e>
 8001de8:	2002      	movs	r0, #2
 8001dea:	e025      	b.n	8001e38 <__ledf2+0xa8>
 8001dec:	4330      	orrs	r0, r6
 8001dee:	d1fb      	bne.n	8001de8 <__ledf2+0x58>
 8001df0:	42ac      	cmp	r4, r5
 8001df2:	d026      	beq.n	8001e42 <__ledf2+0xb2>
 8001df4:	2c00      	cmp	r4, #0
 8001df6:	d126      	bne.n	8001e46 <__ledf2+0xb6>
 8001df8:	433a      	orrs	r2, r7
 8001dfa:	d124      	bne.n	8001e46 <__ledf2+0xb6>
 8001dfc:	4651      	mov	r1, sl
 8001dfe:	2002      	movs	r0, #2
 8001e00:	3901      	subs	r1, #1
 8001e02:	4008      	ands	r0, r1
 8001e04:	3801      	subs	r0, #1
 8001e06:	e017      	b.n	8001e38 <__ledf2+0xa8>
 8001e08:	4662      	mov	r2, ip
 8001e0a:	2a00      	cmp	r2, #0
 8001e0c:	d00f      	beq.n	8001e2e <__ledf2+0x9e>
 8001e0e:	459a      	cmp	sl, r3
 8001e10:	d1e1      	bne.n	8001dd6 <__ledf2+0x46>
 8001e12:	42a5      	cmp	r5, r4
 8001e14:	db05      	blt.n	8001e22 <__ledf2+0x92>
 8001e16:	42be      	cmp	r6, r7
 8001e18:	d8dd      	bhi.n	8001dd6 <__ledf2+0x46>
 8001e1a:	d019      	beq.n	8001e50 <__ledf2+0xc0>
 8001e1c:	2000      	movs	r0, #0
 8001e1e:	42be      	cmp	r6, r7
 8001e20:	d20a      	bcs.n	8001e38 <__ledf2+0xa8>
 8001e22:	4650      	mov	r0, sl
 8001e24:	2301      	movs	r3, #1
 8001e26:	3801      	subs	r0, #1
 8001e28:	4398      	bics	r0, r3
 8001e2a:	3001      	adds	r0, #1
 8001e2c:	e004      	b.n	8001e38 <__ledf2+0xa8>
 8001e2e:	2201      	movs	r2, #1
 8001e30:	3b01      	subs	r3, #1
 8001e32:	4393      	bics	r3, r2
 8001e34:	0018      	movs	r0, r3
 8001e36:	3001      	adds	r0, #1
 8001e38:	bc1c      	pop	{r2, r3, r4}
 8001e3a:	4690      	mov	r8, r2
 8001e3c:	4699      	mov	r9, r3
 8001e3e:	46a2      	mov	sl, r4
 8001e40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e42:	433a      	orrs	r2, r7
 8001e44:	d1d0      	bne.n	8001de8 <__ledf2+0x58>
 8001e46:	459a      	cmp	sl, r3
 8001e48:	d1c5      	bne.n	8001dd6 <__ledf2+0x46>
 8001e4a:	42a5      	cmp	r5, r4
 8001e4c:	dcc3      	bgt.n	8001dd6 <__ledf2+0x46>
 8001e4e:	e7e0      	b.n	8001e12 <__ledf2+0x82>
 8001e50:	45c8      	cmp	r8, r9
 8001e52:	d8c0      	bhi.n	8001dd6 <__ledf2+0x46>
 8001e54:	2000      	movs	r0, #0
 8001e56:	45c8      	cmp	r8, r9
 8001e58:	d3e3      	bcc.n	8001e22 <__ledf2+0x92>
 8001e5a:	e7ed      	b.n	8001e38 <__ledf2+0xa8>
 8001e5c:	000007ff 	.word	0x000007ff

08001e60 <__aeabi_dmul>:
 8001e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e62:	4657      	mov	r7, sl
 8001e64:	46de      	mov	lr, fp
 8001e66:	464e      	mov	r6, r9
 8001e68:	4645      	mov	r5, r8
 8001e6a:	b5e0      	push	{r5, r6, r7, lr}
 8001e6c:	4683      	mov	fp, r0
 8001e6e:	0006      	movs	r6, r0
 8001e70:	030f      	lsls	r7, r1, #12
 8001e72:	0048      	lsls	r0, r1, #1
 8001e74:	b087      	sub	sp, #28
 8001e76:	4692      	mov	sl, r2
 8001e78:	001d      	movs	r5, r3
 8001e7a:	0b3f      	lsrs	r7, r7, #12
 8001e7c:	0d40      	lsrs	r0, r0, #21
 8001e7e:	0fcc      	lsrs	r4, r1, #31
 8001e80:	2800      	cmp	r0, #0
 8001e82:	d100      	bne.n	8001e86 <__aeabi_dmul+0x26>
 8001e84:	e06f      	b.n	8001f66 <__aeabi_dmul+0x106>
 8001e86:	4bde      	ldr	r3, [pc, #888]	; (8002200 <__aeabi_dmul+0x3a0>)
 8001e88:	4298      	cmp	r0, r3
 8001e8a:	d038      	beq.n	8001efe <__aeabi_dmul+0x9e>
 8001e8c:	2380      	movs	r3, #128	; 0x80
 8001e8e:	00ff      	lsls	r7, r7, #3
 8001e90:	041b      	lsls	r3, r3, #16
 8001e92:	431f      	orrs	r7, r3
 8001e94:	0f73      	lsrs	r3, r6, #29
 8001e96:	433b      	orrs	r3, r7
 8001e98:	9301      	str	r3, [sp, #4]
 8001e9a:	4bda      	ldr	r3, [pc, #872]	; (8002204 <__aeabi_dmul+0x3a4>)
 8001e9c:	2700      	movs	r7, #0
 8001e9e:	4699      	mov	r9, r3
 8001ea0:	2300      	movs	r3, #0
 8001ea2:	469b      	mov	fp, r3
 8001ea4:	00f6      	lsls	r6, r6, #3
 8001ea6:	4481      	add	r9, r0
 8001ea8:	032b      	lsls	r3, r5, #12
 8001eaa:	0069      	lsls	r1, r5, #1
 8001eac:	0b1b      	lsrs	r3, r3, #12
 8001eae:	4652      	mov	r2, sl
 8001eb0:	4698      	mov	r8, r3
 8001eb2:	0d49      	lsrs	r1, r1, #21
 8001eb4:	0fed      	lsrs	r5, r5, #31
 8001eb6:	2900      	cmp	r1, #0
 8001eb8:	d100      	bne.n	8001ebc <__aeabi_dmul+0x5c>
 8001eba:	e085      	b.n	8001fc8 <__aeabi_dmul+0x168>
 8001ebc:	4bd0      	ldr	r3, [pc, #832]	; (8002200 <__aeabi_dmul+0x3a0>)
 8001ebe:	4299      	cmp	r1, r3
 8001ec0:	d100      	bne.n	8001ec4 <__aeabi_dmul+0x64>
 8001ec2:	e073      	b.n	8001fac <__aeabi_dmul+0x14c>
 8001ec4:	4643      	mov	r3, r8
 8001ec6:	00da      	lsls	r2, r3, #3
 8001ec8:	2380      	movs	r3, #128	; 0x80
 8001eca:	041b      	lsls	r3, r3, #16
 8001ecc:	4313      	orrs	r3, r2
 8001ece:	4652      	mov	r2, sl
 8001ed0:	48cc      	ldr	r0, [pc, #816]	; (8002204 <__aeabi_dmul+0x3a4>)
 8001ed2:	0f52      	lsrs	r2, r2, #29
 8001ed4:	4684      	mov	ip, r0
 8001ed6:	4313      	orrs	r3, r2
 8001ed8:	4652      	mov	r2, sl
 8001eda:	2000      	movs	r0, #0
 8001edc:	4461      	add	r1, ip
 8001ede:	00d2      	lsls	r2, r2, #3
 8001ee0:	4489      	add	r9, r1
 8001ee2:	0021      	movs	r1, r4
 8001ee4:	4069      	eors	r1, r5
 8001ee6:	9100      	str	r1, [sp, #0]
 8001ee8:	468c      	mov	ip, r1
 8001eea:	2101      	movs	r1, #1
 8001eec:	4449      	add	r1, r9
 8001eee:	468a      	mov	sl, r1
 8001ef0:	2f0f      	cmp	r7, #15
 8001ef2:	d900      	bls.n	8001ef6 <__aeabi_dmul+0x96>
 8001ef4:	e090      	b.n	8002018 <__aeabi_dmul+0x1b8>
 8001ef6:	49c4      	ldr	r1, [pc, #784]	; (8002208 <__aeabi_dmul+0x3a8>)
 8001ef8:	00bf      	lsls	r7, r7, #2
 8001efa:	59cf      	ldr	r7, [r1, r7]
 8001efc:	46bf      	mov	pc, r7
 8001efe:	465b      	mov	r3, fp
 8001f00:	433b      	orrs	r3, r7
 8001f02:	9301      	str	r3, [sp, #4]
 8001f04:	d000      	beq.n	8001f08 <__aeabi_dmul+0xa8>
 8001f06:	e16a      	b.n	80021de <__aeabi_dmul+0x37e>
 8001f08:	2302      	movs	r3, #2
 8001f0a:	2708      	movs	r7, #8
 8001f0c:	2600      	movs	r6, #0
 8001f0e:	4681      	mov	r9, r0
 8001f10:	469b      	mov	fp, r3
 8001f12:	e7c9      	b.n	8001ea8 <__aeabi_dmul+0x48>
 8001f14:	0032      	movs	r2, r6
 8001f16:	4658      	mov	r0, fp
 8001f18:	9b01      	ldr	r3, [sp, #4]
 8001f1a:	4661      	mov	r1, ip
 8001f1c:	9100      	str	r1, [sp, #0]
 8001f1e:	2802      	cmp	r0, #2
 8001f20:	d100      	bne.n	8001f24 <__aeabi_dmul+0xc4>
 8001f22:	e075      	b.n	8002010 <__aeabi_dmul+0x1b0>
 8001f24:	2803      	cmp	r0, #3
 8001f26:	d100      	bne.n	8001f2a <__aeabi_dmul+0xca>
 8001f28:	e1fe      	b.n	8002328 <__aeabi_dmul+0x4c8>
 8001f2a:	2801      	cmp	r0, #1
 8001f2c:	d000      	beq.n	8001f30 <__aeabi_dmul+0xd0>
 8001f2e:	e12c      	b.n	800218a <__aeabi_dmul+0x32a>
 8001f30:	2300      	movs	r3, #0
 8001f32:	2700      	movs	r7, #0
 8001f34:	2600      	movs	r6, #0
 8001f36:	2500      	movs	r5, #0
 8001f38:	033f      	lsls	r7, r7, #12
 8001f3a:	0d2a      	lsrs	r2, r5, #20
 8001f3c:	0b3f      	lsrs	r7, r7, #12
 8001f3e:	48b3      	ldr	r0, [pc, #716]	; (800220c <__aeabi_dmul+0x3ac>)
 8001f40:	0512      	lsls	r2, r2, #20
 8001f42:	433a      	orrs	r2, r7
 8001f44:	4002      	ands	r2, r0
 8001f46:	051b      	lsls	r3, r3, #20
 8001f48:	4313      	orrs	r3, r2
 8001f4a:	9a00      	ldr	r2, [sp, #0]
 8001f4c:	005b      	lsls	r3, r3, #1
 8001f4e:	07d1      	lsls	r1, r2, #31
 8001f50:	085b      	lsrs	r3, r3, #1
 8001f52:	430b      	orrs	r3, r1
 8001f54:	0030      	movs	r0, r6
 8001f56:	0019      	movs	r1, r3
 8001f58:	b007      	add	sp, #28
 8001f5a:	bc3c      	pop	{r2, r3, r4, r5}
 8001f5c:	4690      	mov	r8, r2
 8001f5e:	4699      	mov	r9, r3
 8001f60:	46a2      	mov	sl, r4
 8001f62:	46ab      	mov	fp, r5
 8001f64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f66:	465b      	mov	r3, fp
 8001f68:	433b      	orrs	r3, r7
 8001f6a:	9301      	str	r3, [sp, #4]
 8001f6c:	d100      	bne.n	8001f70 <__aeabi_dmul+0x110>
 8001f6e:	e12f      	b.n	80021d0 <__aeabi_dmul+0x370>
 8001f70:	2f00      	cmp	r7, #0
 8001f72:	d100      	bne.n	8001f76 <__aeabi_dmul+0x116>
 8001f74:	e1a5      	b.n	80022c2 <__aeabi_dmul+0x462>
 8001f76:	0038      	movs	r0, r7
 8001f78:	f000 fe8e 	bl	8002c98 <__clzsi2>
 8001f7c:	0003      	movs	r3, r0
 8001f7e:	3b0b      	subs	r3, #11
 8001f80:	2b1c      	cmp	r3, #28
 8001f82:	dd00      	ble.n	8001f86 <__aeabi_dmul+0x126>
 8001f84:	e196      	b.n	80022b4 <__aeabi_dmul+0x454>
 8001f86:	221d      	movs	r2, #29
 8001f88:	1ad3      	subs	r3, r2, r3
 8001f8a:	465a      	mov	r2, fp
 8001f8c:	0001      	movs	r1, r0
 8001f8e:	40da      	lsrs	r2, r3
 8001f90:	465e      	mov	r6, fp
 8001f92:	3908      	subs	r1, #8
 8001f94:	408f      	lsls	r7, r1
 8001f96:	0013      	movs	r3, r2
 8001f98:	408e      	lsls	r6, r1
 8001f9a:	433b      	orrs	r3, r7
 8001f9c:	9301      	str	r3, [sp, #4]
 8001f9e:	4b9c      	ldr	r3, [pc, #624]	; (8002210 <__aeabi_dmul+0x3b0>)
 8001fa0:	2700      	movs	r7, #0
 8001fa2:	1a1b      	subs	r3, r3, r0
 8001fa4:	4699      	mov	r9, r3
 8001fa6:	2300      	movs	r3, #0
 8001fa8:	469b      	mov	fp, r3
 8001faa:	e77d      	b.n	8001ea8 <__aeabi_dmul+0x48>
 8001fac:	4641      	mov	r1, r8
 8001fae:	4653      	mov	r3, sl
 8001fb0:	430b      	orrs	r3, r1
 8001fb2:	4993      	ldr	r1, [pc, #588]	; (8002200 <__aeabi_dmul+0x3a0>)
 8001fb4:	468c      	mov	ip, r1
 8001fb6:	44e1      	add	r9, ip
 8001fb8:	2b00      	cmp	r3, #0
 8001fba:	d000      	beq.n	8001fbe <__aeabi_dmul+0x15e>
 8001fbc:	e11a      	b.n	80021f4 <__aeabi_dmul+0x394>
 8001fbe:	2202      	movs	r2, #2
 8001fc0:	2002      	movs	r0, #2
 8001fc2:	4317      	orrs	r7, r2
 8001fc4:	2200      	movs	r2, #0
 8001fc6:	e78c      	b.n	8001ee2 <__aeabi_dmul+0x82>
 8001fc8:	4313      	orrs	r3, r2
 8001fca:	d100      	bne.n	8001fce <__aeabi_dmul+0x16e>
 8001fcc:	e10d      	b.n	80021ea <__aeabi_dmul+0x38a>
 8001fce:	4643      	mov	r3, r8
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d100      	bne.n	8001fd6 <__aeabi_dmul+0x176>
 8001fd4:	e181      	b.n	80022da <__aeabi_dmul+0x47a>
 8001fd6:	4640      	mov	r0, r8
 8001fd8:	f000 fe5e 	bl	8002c98 <__clzsi2>
 8001fdc:	0002      	movs	r2, r0
 8001fde:	3a0b      	subs	r2, #11
 8001fe0:	2a1c      	cmp	r2, #28
 8001fe2:	dd00      	ble.n	8001fe6 <__aeabi_dmul+0x186>
 8001fe4:	e172      	b.n	80022cc <__aeabi_dmul+0x46c>
 8001fe6:	0001      	movs	r1, r0
 8001fe8:	4643      	mov	r3, r8
 8001fea:	3908      	subs	r1, #8
 8001fec:	408b      	lsls	r3, r1
 8001fee:	4698      	mov	r8, r3
 8001ff0:	231d      	movs	r3, #29
 8001ff2:	1a9a      	subs	r2, r3, r2
 8001ff4:	4653      	mov	r3, sl
 8001ff6:	40d3      	lsrs	r3, r2
 8001ff8:	001a      	movs	r2, r3
 8001ffa:	4643      	mov	r3, r8
 8001ffc:	4313      	orrs	r3, r2
 8001ffe:	4652      	mov	r2, sl
 8002000:	408a      	lsls	r2, r1
 8002002:	4649      	mov	r1, r9
 8002004:	1a08      	subs	r0, r1, r0
 8002006:	4982      	ldr	r1, [pc, #520]	; (8002210 <__aeabi_dmul+0x3b0>)
 8002008:	4689      	mov	r9, r1
 800200a:	4481      	add	r9, r0
 800200c:	2000      	movs	r0, #0
 800200e:	e768      	b.n	8001ee2 <__aeabi_dmul+0x82>
 8002010:	4b7b      	ldr	r3, [pc, #492]	; (8002200 <__aeabi_dmul+0x3a0>)
 8002012:	2700      	movs	r7, #0
 8002014:	2600      	movs	r6, #0
 8002016:	e78e      	b.n	8001f36 <__aeabi_dmul+0xd6>
 8002018:	0c14      	lsrs	r4, r2, #16
 800201a:	0412      	lsls	r2, r2, #16
 800201c:	0c12      	lsrs	r2, r2, #16
 800201e:	0011      	movs	r1, r2
 8002020:	0c37      	lsrs	r7, r6, #16
 8002022:	0436      	lsls	r6, r6, #16
 8002024:	0c35      	lsrs	r5, r6, #16
 8002026:	4379      	muls	r1, r7
 8002028:	0028      	movs	r0, r5
 800202a:	468c      	mov	ip, r1
 800202c:	002e      	movs	r6, r5
 800202e:	4360      	muls	r0, r4
 8002030:	4460      	add	r0, ip
 8002032:	4683      	mov	fp, r0
 8002034:	4356      	muls	r6, r2
 8002036:	0021      	movs	r1, r4
 8002038:	0c30      	lsrs	r0, r6, #16
 800203a:	4680      	mov	r8, r0
 800203c:	4658      	mov	r0, fp
 800203e:	4379      	muls	r1, r7
 8002040:	4440      	add	r0, r8
 8002042:	9102      	str	r1, [sp, #8]
 8002044:	4584      	cmp	ip, r0
 8002046:	d906      	bls.n	8002056 <__aeabi_dmul+0x1f6>
 8002048:	4688      	mov	r8, r1
 800204a:	2180      	movs	r1, #128	; 0x80
 800204c:	0249      	lsls	r1, r1, #9
 800204e:	468c      	mov	ip, r1
 8002050:	44e0      	add	r8, ip
 8002052:	4641      	mov	r1, r8
 8002054:	9102      	str	r1, [sp, #8]
 8002056:	0436      	lsls	r6, r6, #16
 8002058:	0c01      	lsrs	r1, r0, #16
 800205a:	0c36      	lsrs	r6, r6, #16
 800205c:	0400      	lsls	r0, r0, #16
 800205e:	468b      	mov	fp, r1
 8002060:	1981      	adds	r1, r0, r6
 8002062:	0c1e      	lsrs	r6, r3, #16
 8002064:	041b      	lsls	r3, r3, #16
 8002066:	0c1b      	lsrs	r3, r3, #16
 8002068:	9103      	str	r1, [sp, #12]
 800206a:	0019      	movs	r1, r3
 800206c:	4379      	muls	r1, r7
 800206e:	468c      	mov	ip, r1
 8002070:	0028      	movs	r0, r5
 8002072:	4375      	muls	r5, r6
 8002074:	4465      	add	r5, ip
 8002076:	46a8      	mov	r8, r5
 8002078:	4358      	muls	r0, r3
 800207a:	0c05      	lsrs	r5, r0, #16
 800207c:	4445      	add	r5, r8
 800207e:	4377      	muls	r7, r6
 8002080:	42a9      	cmp	r1, r5
 8002082:	d903      	bls.n	800208c <__aeabi_dmul+0x22c>
 8002084:	2180      	movs	r1, #128	; 0x80
 8002086:	0249      	lsls	r1, r1, #9
 8002088:	468c      	mov	ip, r1
 800208a:	4467      	add	r7, ip
 800208c:	0c29      	lsrs	r1, r5, #16
 800208e:	468c      	mov	ip, r1
 8002090:	0039      	movs	r1, r7
 8002092:	0400      	lsls	r0, r0, #16
 8002094:	0c00      	lsrs	r0, r0, #16
 8002096:	042d      	lsls	r5, r5, #16
 8002098:	182d      	adds	r5, r5, r0
 800209a:	4461      	add	r1, ip
 800209c:	44ab      	add	fp, r5
 800209e:	9105      	str	r1, [sp, #20]
 80020a0:	4659      	mov	r1, fp
 80020a2:	9104      	str	r1, [sp, #16]
 80020a4:	9901      	ldr	r1, [sp, #4]
 80020a6:	040f      	lsls	r7, r1, #16
 80020a8:	0c3f      	lsrs	r7, r7, #16
 80020aa:	0c08      	lsrs	r0, r1, #16
 80020ac:	0039      	movs	r1, r7
 80020ae:	4351      	muls	r1, r2
 80020b0:	4342      	muls	r2, r0
 80020b2:	4690      	mov	r8, r2
 80020b4:	0002      	movs	r2, r0
 80020b6:	468c      	mov	ip, r1
 80020b8:	0c09      	lsrs	r1, r1, #16
 80020ba:	468b      	mov	fp, r1
 80020bc:	4362      	muls	r2, r4
 80020be:	437c      	muls	r4, r7
 80020c0:	4444      	add	r4, r8
 80020c2:	445c      	add	r4, fp
 80020c4:	45a0      	cmp	r8, r4
 80020c6:	d903      	bls.n	80020d0 <__aeabi_dmul+0x270>
 80020c8:	2180      	movs	r1, #128	; 0x80
 80020ca:	0249      	lsls	r1, r1, #9
 80020cc:	4688      	mov	r8, r1
 80020ce:	4442      	add	r2, r8
 80020d0:	0c21      	lsrs	r1, r4, #16
 80020d2:	4688      	mov	r8, r1
 80020d4:	4661      	mov	r1, ip
 80020d6:	0409      	lsls	r1, r1, #16
 80020d8:	0c09      	lsrs	r1, r1, #16
 80020da:	468c      	mov	ip, r1
 80020dc:	0039      	movs	r1, r7
 80020de:	4359      	muls	r1, r3
 80020e0:	4343      	muls	r3, r0
 80020e2:	4370      	muls	r0, r6
 80020e4:	437e      	muls	r6, r7
 80020e6:	0c0f      	lsrs	r7, r1, #16
 80020e8:	18f6      	adds	r6, r6, r3
 80020ea:	0424      	lsls	r4, r4, #16
 80020ec:	19be      	adds	r6, r7, r6
 80020ee:	4464      	add	r4, ip
 80020f0:	4442      	add	r2, r8
 80020f2:	468c      	mov	ip, r1
 80020f4:	42b3      	cmp	r3, r6
 80020f6:	d903      	bls.n	8002100 <__aeabi_dmul+0x2a0>
 80020f8:	2380      	movs	r3, #128	; 0x80
 80020fa:	025b      	lsls	r3, r3, #9
 80020fc:	4698      	mov	r8, r3
 80020fe:	4440      	add	r0, r8
 8002100:	9b02      	ldr	r3, [sp, #8]
 8002102:	4661      	mov	r1, ip
 8002104:	4698      	mov	r8, r3
 8002106:	9b04      	ldr	r3, [sp, #16]
 8002108:	0437      	lsls	r7, r6, #16
 800210a:	4443      	add	r3, r8
 800210c:	469b      	mov	fp, r3
 800210e:	45ab      	cmp	fp, r5
 8002110:	41ad      	sbcs	r5, r5
 8002112:	426b      	negs	r3, r5
 8002114:	040d      	lsls	r5, r1, #16
 8002116:	9905      	ldr	r1, [sp, #20]
 8002118:	0c2d      	lsrs	r5, r5, #16
 800211a:	468c      	mov	ip, r1
 800211c:	197f      	adds	r7, r7, r5
 800211e:	4467      	add	r7, ip
 8002120:	18fd      	adds	r5, r7, r3
 8002122:	46a8      	mov	r8, r5
 8002124:	465d      	mov	r5, fp
 8002126:	192d      	adds	r5, r5, r4
 8002128:	42a5      	cmp	r5, r4
 800212a:	41a4      	sbcs	r4, r4
 800212c:	4693      	mov	fp, r2
 800212e:	4264      	negs	r4, r4
 8002130:	46a4      	mov	ip, r4
 8002132:	44c3      	add	fp, r8
 8002134:	44dc      	add	ip, fp
 8002136:	428f      	cmp	r7, r1
 8002138:	41bf      	sbcs	r7, r7
 800213a:	4598      	cmp	r8, r3
 800213c:	419b      	sbcs	r3, r3
 800213e:	4593      	cmp	fp, r2
 8002140:	4192      	sbcs	r2, r2
 8002142:	45a4      	cmp	ip, r4
 8002144:	41a4      	sbcs	r4, r4
 8002146:	425b      	negs	r3, r3
 8002148:	427f      	negs	r7, r7
 800214a:	431f      	orrs	r7, r3
 800214c:	0c36      	lsrs	r6, r6, #16
 800214e:	4252      	negs	r2, r2
 8002150:	4264      	negs	r4, r4
 8002152:	19bf      	adds	r7, r7, r6
 8002154:	4322      	orrs	r2, r4
 8002156:	18bf      	adds	r7, r7, r2
 8002158:	4662      	mov	r2, ip
 800215a:	1838      	adds	r0, r7, r0
 800215c:	0243      	lsls	r3, r0, #9
 800215e:	0dd2      	lsrs	r2, r2, #23
 8002160:	9903      	ldr	r1, [sp, #12]
 8002162:	4313      	orrs	r3, r2
 8002164:	026a      	lsls	r2, r5, #9
 8002166:	430a      	orrs	r2, r1
 8002168:	1e50      	subs	r0, r2, #1
 800216a:	4182      	sbcs	r2, r0
 800216c:	4661      	mov	r1, ip
 800216e:	0ded      	lsrs	r5, r5, #23
 8002170:	432a      	orrs	r2, r5
 8002172:	024e      	lsls	r6, r1, #9
 8002174:	4332      	orrs	r2, r6
 8002176:	01d9      	lsls	r1, r3, #7
 8002178:	d400      	bmi.n	800217c <__aeabi_dmul+0x31c>
 800217a:	e0b3      	b.n	80022e4 <__aeabi_dmul+0x484>
 800217c:	2601      	movs	r6, #1
 800217e:	0850      	lsrs	r0, r2, #1
 8002180:	4032      	ands	r2, r6
 8002182:	4302      	orrs	r2, r0
 8002184:	07de      	lsls	r6, r3, #31
 8002186:	4332      	orrs	r2, r6
 8002188:	085b      	lsrs	r3, r3, #1
 800218a:	4c22      	ldr	r4, [pc, #136]	; (8002214 <__aeabi_dmul+0x3b4>)
 800218c:	4454      	add	r4, sl
 800218e:	2c00      	cmp	r4, #0
 8002190:	dd62      	ble.n	8002258 <__aeabi_dmul+0x3f8>
 8002192:	0751      	lsls	r1, r2, #29
 8002194:	d009      	beq.n	80021aa <__aeabi_dmul+0x34a>
 8002196:	200f      	movs	r0, #15
 8002198:	4010      	ands	r0, r2
 800219a:	2804      	cmp	r0, #4
 800219c:	d005      	beq.n	80021aa <__aeabi_dmul+0x34a>
 800219e:	1d10      	adds	r0, r2, #4
 80021a0:	4290      	cmp	r0, r2
 80021a2:	4192      	sbcs	r2, r2
 80021a4:	4252      	negs	r2, r2
 80021a6:	189b      	adds	r3, r3, r2
 80021a8:	0002      	movs	r2, r0
 80021aa:	01d9      	lsls	r1, r3, #7
 80021ac:	d504      	bpl.n	80021b8 <__aeabi_dmul+0x358>
 80021ae:	2480      	movs	r4, #128	; 0x80
 80021b0:	4819      	ldr	r0, [pc, #100]	; (8002218 <__aeabi_dmul+0x3b8>)
 80021b2:	00e4      	lsls	r4, r4, #3
 80021b4:	4003      	ands	r3, r0
 80021b6:	4454      	add	r4, sl
 80021b8:	4818      	ldr	r0, [pc, #96]	; (800221c <__aeabi_dmul+0x3bc>)
 80021ba:	4284      	cmp	r4, r0
 80021bc:	dd00      	ble.n	80021c0 <__aeabi_dmul+0x360>
 80021be:	e727      	b.n	8002010 <__aeabi_dmul+0x1b0>
 80021c0:	075e      	lsls	r6, r3, #29
 80021c2:	025b      	lsls	r3, r3, #9
 80021c4:	08d2      	lsrs	r2, r2, #3
 80021c6:	0b1f      	lsrs	r7, r3, #12
 80021c8:	0563      	lsls	r3, r4, #21
 80021ca:	4316      	orrs	r6, r2
 80021cc:	0d5b      	lsrs	r3, r3, #21
 80021ce:	e6b2      	b.n	8001f36 <__aeabi_dmul+0xd6>
 80021d0:	2300      	movs	r3, #0
 80021d2:	4699      	mov	r9, r3
 80021d4:	3301      	adds	r3, #1
 80021d6:	2704      	movs	r7, #4
 80021d8:	2600      	movs	r6, #0
 80021da:	469b      	mov	fp, r3
 80021dc:	e664      	b.n	8001ea8 <__aeabi_dmul+0x48>
 80021de:	2303      	movs	r3, #3
 80021e0:	9701      	str	r7, [sp, #4]
 80021e2:	4681      	mov	r9, r0
 80021e4:	270c      	movs	r7, #12
 80021e6:	469b      	mov	fp, r3
 80021e8:	e65e      	b.n	8001ea8 <__aeabi_dmul+0x48>
 80021ea:	2201      	movs	r2, #1
 80021ec:	2001      	movs	r0, #1
 80021ee:	4317      	orrs	r7, r2
 80021f0:	2200      	movs	r2, #0
 80021f2:	e676      	b.n	8001ee2 <__aeabi_dmul+0x82>
 80021f4:	2303      	movs	r3, #3
 80021f6:	2003      	movs	r0, #3
 80021f8:	431f      	orrs	r7, r3
 80021fa:	4643      	mov	r3, r8
 80021fc:	e671      	b.n	8001ee2 <__aeabi_dmul+0x82>
 80021fe:	46c0      	nop			; (mov r8, r8)
 8002200:	000007ff 	.word	0x000007ff
 8002204:	fffffc01 	.word	0xfffffc01
 8002208:	08006380 	.word	0x08006380
 800220c:	800fffff 	.word	0x800fffff
 8002210:	fffffc0d 	.word	0xfffffc0d
 8002214:	000003ff 	.word	0x000003ff
 8002218:	feffffff 	.word	0xfeffffff
 800221c:	000007fe 	.word	0x000007fe
 8002220:	2300      	movs	r3, #0
 8002222:	2780      	movs	r7, #128	; 0x80
 8002224:	9300      	str	r3, [sp, #0]
 8002226:	033f      	lsls	r7, r7, #12
 8002228:	2600      	movs	r6, #0
 800222a:	4b43      	ldr	r3, [pc, #268]	; (8002338 <__aeabi_dmul+0x4d8>)
 800222c:	e683      	b.n	8001f36 <__aeabi_dmul+0xd6>
 800222e:	9b01      	ldr	r3, [sp, #4]
 8002230:	0032      	movs	r2, r6
 8002232:	46a4      	mov	ip, r4
 8002234:	4658      	mov	r0, fp
 8002236:	e670      	b.n	8001f1a <__aeabi_dmul+0xba>
 8002238:	46ac      	mov	ip, r5
 800223a:	e66e      	b.n	8001f1a <__aeabi_dmul+0xba>
 800223c:	2780      	movs	r7, #128	; 0x80
 800223e:	9901      	ldr	r1, [sp, #4]
 8002240:	033f      	lsls	r7, r7, #12
 8002242:	4239      	tst	r1, r7
 8002244:	d02d      	beq.n	80022a2 <__aeabi_dmul+0x442>
 8002246:	423b      	tst	r3, r7
 8002248:	d12b      	bne.n	80022a2 <__aeabi_dmul+0x442>
 800224a:	431f      	orrs	r7, r3
 800224c:	033f      	lsls	r7, r7, #12
 800224e:	0b3f      	lsrs	r7, r7, #12
 8002250:	9500      	str	r5, [sp, #0]
 8002252:	0016      	movs	r6, r2
 8002254:	4b38      	ldr	r3, [pc, #224]	; (8002338 <__aeabi_dmul+0x4d8>)
 8002256:	e66e      	b.n	8001f36 <__aeabi_dmul+0xd6>
 8002258:	2501      	movs	r5, #1
 800225a:	1b2d      	subs	r5, r5, r4
 800225c:	2d38      	cmp	r5, #56	; 0x38
 800225e:	dd00      	ble.n	8002262 <__aeabi_dmul+0x402>
 8002260:	e666      	b.n	8001f30 <__aeabi_dmul+0xd0>
 8002262:	2d1f      	cmp	r5, #31
 8002264:	dc40      	bgt.n	80022e8 <__aeabi_dmul+0x488>
 8002266:	4835      	ldr	r0, [pc, #212]	; (800233c <__aeabi_dmul+0x4dc>)
 8002268:	001c      	movs	r4, r3
 800226a:	4450      	add	r0, sl
 800226c:	0016      	movs	r6, r2
 800226e:	4082      	lsls	r2, r0
 8002270:	4084      	lsls	r4, r0
 8002272:	40ee      	lsrs	r6, r5
 8002274:	1e50      	subs	r0, r2, #1
 8002276:	4182      	sbcs	r2, r0
 8002278:	4334      	orrs	r4, r6
 800227a:	4314      	orrs	r4, r2
 800227c:	40eb      	lsrs	r3, r5
 800227e:	0762      	lsls	r2, r4, #29
 8002280:	d009      	beq.n	8002296 <__aeabi_dmul+0x436>
 8002282:	220f      	movs	r2, #15
 8002284:	4022      	ands	r2, r4
 8002286:	2a04      	cmp	r2, #4
 8002288:	d005      	beq.n	8002296 <__aeabi_dmul+0x436>
 800228a:	0022      	movs	r2, r4
 800228c:	1d14      	adds	r4, r2, #4
 800228e:	4294      	cmp	r4, r2
 8002290:	4180      	sbcs	r0, r0
 8002292:	4240      	negs	r0, r0
 8002294:	181b      	adds	r3, r3, r0
 8002296:	021a      	lsls	r2, r3, #8
 8002298:	d53e      	bpl.n	8002318 <__aeabi_dmul+0x4b8>
 800229a:	2301      	movs	r3, #1
 800229c:	2700      	movs	r7, #0
 800229e:	2600      	movs	r6, #0
 80022a0:	e649      	b.n	8001f36 <__aeabi_dmul+0xd6>
 80022a2:	2780      	movs	r7, #128	; 0x80
 80022a4:	9b01      	ldr	r3, [sp, #4]
 80022a6:	033f      	lsls	r7, r7, #12
 80022a8:	431f      	orrs	r7, r3
 80022aa:	033f      	lsls	r7, r7, #12
 80022ac:	0b3f      	lsrs	r7, r7, #12
 80022ae:	9400      	str	r4, [sp, #0]
 80022b0:	4b21      	ldr	r3, [pc, #132]	; (8002338 <__aeabi_dmul+0x4d8>)
 80022b2:	e640      	b.n	8001f36 <__aeabi_dmul+0xd6>
 80022b4:	0003      	movs	r3, r0
 80022b6:	465a      	mov	r2, fp
 80022b8:	3b28      	subs	r3, #40	; 0x28
 80022ba:	409a      	lsls	r2, r3
 80022bc:	2600      	movs	r6, #0
 80022be:	9201      	str	r2, [sp, #4]
 80022c0:	e66d      	b.n	8001f9e <__aeabi_dmul+0x13e>
 80022c2:	4658      	mov	r0, fp
 80022c4:	f000 fce8 	bl	8002c98 <__clzsi2>
 80022c8:	3020      	adds	r0, #32
 80022ca:	e657      	b.n	8001f7c <__aeabi_dmul+0x11c>
 80022cc:	0003      	movs	r3, r0
 80022ce:	4652      	mov	r2, sl
 80022d0:	3b28      	subs	r3, #40	; 0x28
 80022d2:	409a      	lsls	r2, r3
 80022d4:	0013      	movs	r3, r2
 80022d6:	2200      	movs	r2, #0
 80022d8:	e693      	b.n	8002002 <__aeabi_dmul+0x1a2>
 80022da:	4650      	mov	r0, sl
 80022dc:	f000 fcdc 	bl	8002c98 <__clzsi2>
 80022e0:	3020      	adds	r0, #32
 80022e2:	e67b      	b.n	8001fdc <__aeabi_dmul+0x17c>
 80022e4:	46ca      	mov	sl, r9
 80022e6:	e750      	b.n	800218a <__aeabi_dmul+0x32a>
 80022e8:	201f      	movs	r0, #31
 80022ea:	001e      	movs	r6, r3
 80022ec:	4240      	negs	r0, r0
 80022ee:	1b04      	subs	r4, r0, r4
 80022f0:	40e6      	lsrs	r6, r4
 80022f2:	2d20      	cmp	r5, #32
 80022f4:	d003      	beq.n	80022fe <__aeabi_dmul+0x49e>
 80022f6:	4c12      	ldr	r4, [pc, #72]	; (8002340 <__aeabi_dmul+0x4e0>)
 80022f8:	4454      	add	r4, sl
 80022fa:	40a3      	lsls	r3, r4
 80022fc:	431a      	orrs	r2, r3
 80022fe:	1e50      	subs	r0, r2, #1
 8002300:	4182      	sbcs	r2, r0
 8002302:	4332      	orrs	r2, r6
 8002304:	2607      	movs	r6, #7
 8002306:	2700      	movs	r7, #0
 8002308:	4016      	ands	r6, r2
 800230a:	d009      	beq.n	8002320 <__aeabi_dmul+0x4c0>
 800230c:	200f      	movs	r0, #15
 800230e:	2300      	movs	r3, #0
 8002310:	4010      	ands	r0, r2
 8002312:	0014      	movs	r4, r2
 8002314:	2804      	cmp	r0, #4
 8002316:	d1b9      	bne.n	800228c <__aeabi_dmul+0x42c>
 8002318:	0022      	movs	r2, r4
 800231a:	075e      	lsls	r6, r3, #29
 800231c:	025b      	lsls	r3, r3, #9
 800231e:	0b1f      	lsrs	r7, r3, #12
 8002320:	08d2      	lsrs	r2, r2, #3
 8002322:	4316      	orrs	r6, r2
 8002324:	2300      	movs	r3, #0
 8002326:	e606      	b.n	8001f36 <__aeabi_dmul+0xd6>
 8002328:	2780      	movs	r7, #128	; 0x80
 800232a:	033f      	lsls	r7, r7, #12
 800232c:	431f      	orrs	r7, r3
 800232e:	033f      	lsls	r7, r7, #12
 8002330:	0b3f      	lsrs	r7, r7, #12
 8002332:	0016      	movs	r6, r2
 8002334:	4b00      	ldr	r3, [pc, #0]	; (8002338 <__aeabi_dmul+0x4d8>)
 8002336:	e5fe      	b.n	8001f36 <__aeabi_dmul+0xd6>
 8002338:	000007ff 	.word	0x000007ff
 800233c:	0000041e 	.word	0x0000041e
 8002340:	0000043e 	.word	0x0000043e

08002344 <__aeabi_dsub>:
 8002344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002346:	4657      	mov	r7, sl
 8002348:	464e      	mov	r6, r9
 800234a:	4645      	mov	r5, r8
 800234c:	46de      	mov	lr, fp
 800234e:	000c      	movs	r4, r1
 8002350:	0309      	lsls	r1, r1, #12
 8002352:	b5e0      	push	{r5, r6, r7, lr}
 8002354:	0a49      	lsrs	r1, r1, #9
 8002356:	0f46      	lsrs	r6, r0, #29
 8002358:	005f      	lsls	r7, r3, #1
 800235a:	4331      	orrs	r1, r6
 800235c:	031e      	lsls	r6, r3, #12
 800235e:	0fdb      	lsrs	r3, r3, #31
 8002360:	0a76      	lsrs	r6, r6, #9
 8002362:	469b      	mov	fp, r3
 8002364:	0f53      	lsrs	r3, r2, #29
 8002366:	4333      	orrs	r3, r6
 8002368:	4ec8      	ldr	r6, [pc, #800]	; (800268c <__aeabi_dsub+0x348>)
 800236a:	0065      	lsls	r5, r4, #1
 800236c:	00c0      	lsls	r0, r0, #3
 800236e:	0fe4      	lsrs	r4, r4, #31
 8002370:	00d2      	lsls	r2, r2, #3
 8002372:	0d6d      	lsrs	r5, r5, #21
 8002374:	46a2      	mov	sl, r4
 8002376:	4681      	mov	r9, r0
 8002378:	0d7f      	lsrs	r7, r7, #21
 800237a:	469c      	mov	ip, r3
 800237c:	4690      	mov	r8, r2
 800237e:	42b7      	cmp	r7, r6
 8002380:	d100      	bne.n	8002384 <__aeabi_dsub+0x40>
 8002382:	e0b9      	b.n	80024f8 <__aeabi_dsub+0x1b4>
 8002384:	465b      	mov	r3, fp
 8002386:	2601      	movs	r6, #1
 8002388:	4073      	eors	r3, r6
 800238a:	469b      	mov	fp, r3
 800238c:	1bee      	subs	r6, r5, r7
 800238e:	45a3      	cmp	fp, r4
 8002390:	d100      	bne.n	8002394 <__aeabi_dsub+0x50>
 8002392:	e083      	b.n	800249c <__aeabi_dsub+0x158>
 8002394:	2e00      	cmp	r6, #0
 8002396:	dd63      	ble.n	8002460 <__aeabi_dsub+0x11c>
 8002398:	2f00      	cmp	r7, #0
 800239a:	d000      	beq.n	800239e <__aeabi_dsub+0x5a>
 800239c:	e0b1      	b.n	8002502 <__aeabi_dsub+0x1be>
 800239e:	4663      	mov	r3, ip
 80023a0:	4313      	orrs	r3, r2
 80023a2:	d100      	bne.n	80023a6 <__aeabi_dsub+0x62>
 80023a4:	e123      	b.n	80025ee <__aeabi_dsub+0x2aa>
 80023a6:	1e73      	subs	r3, r6, #1
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d000      	beq.n	80023ae <__aeabi_dsub+0x6a>
 80023ac:	e1ba      	b.n	8002724 <__aeabi_dsub+0x3e0>
 80023ae:	1a86      	subs	r6, r0, r2
 80023b0:	4663      	mov	r3, ip
 80023b2:	42b0      	cmp	r0, r6
 80023b4:	4180      	sbcs	r0, r0
 80023b6:	2501      	movs	r5, #1
 80023b8:	1ac9      	subs	r1, r1, r3
 80023ba:	4240      	negs	r0, r0
 80023bc:	1a09      	subs	r1, r1, r0
 80023be:	020b      	lsls	r3, r1, #8
 80023c0:	d400      	bmi.n	80023c4 <__aeabi_dsub+0x80>
 80023c2:	e147      	b.n	8002654 <__aeabi_dsub+0x310>
 80023c4:	0249      	lsls	r1, r1, #9
 80023c6:	0a4b      	lsrs	r3, r1, #9
 80023c8:	4698      	mov	r8, r3
 80023ca:	4643      	mov	r3, r8
 80023cc:	2b00      	cmp	r3, #0
 80023ce:	d100      	bne.n	80023d2 <__aeabi_dsub+0x8e>
 80023d0:	e189      	b.n	80026e6 <__aeabi_dsub+0x3a2>
 80023d2:	4640      	mov	r0, r8
 80023d4:	f000 fc60 	bl	8002c98 <__clzsi2>
 80023d8:	0003      	movs	r3, r0
 80023da:	3b08      	subs	r3, #8
 80023dc:	2b1f      	cmp	r3, #31
 80023de:	dd00      	ble.n	80023e2 <__aeabi_dsub+0x9e>
 80023e0:	e17c      	b.n	80026dc <__aeabi_dsub+0x398>
 80023e2:	2220      	movs	r2, #32
 80023e4:	0030      	movs	r0, r6
 80023e6:	1ad2      	subs	r2, r2, r3
 80023e8:	4641      	mov	r1, r8
 80023ea:	40d0      	lsrs	r0, r2
 80023ec:	4099      	lsls	r1, r3
 80023ee:	0002      	movs	r2, r0
 80023f0:	409e      	lsls	r6, r3
 80023f2:	430a      	orrs	r2, r1
 80023f4:	429d      	cmp	r5, r3
 80023f6:	dd00      	ble.n	80023fa <__aeabi_dsub+0xb6>
 80023f8:	e16a      	b.n	80026d0 <__aeabi_dsub+0x38c>
 80023fa:	1b5d      	subs	r5, r3, r5
 80023fc:	1c6b      	adds	r3, r5, #1
 80023fe:	2b1f      	cmp	r3, #31
 8002400:	dd00      	ble.n	8002404 <__aeabi_dsub+0xc0>
 8002402:	e194      	b.n	800272e <__aeabi_dsub+0x3ea>
 8002404:	2120      	movs	r1, #32
 8002406:	0010      	movs	r0, r2
 8002408:	0035      	movs	r5, r6
 800240a:	1ac9      	subs	r1, r1, r3
 800240c:	408e      	lsls	r6, r1
 800240e:	40da      	lsrs	r2, r3
 8002410:	4088      	lsls	r0, r1
 8002412:	40dd      	lsrs	r5, r3
 8002414:	1e71      	subs	r1, r6, #1
 8002416:	418e      	sbcs	r6, r1
 8002418:	0011      	movs	r1, r2
 800241a:	2207      	movs	r2, #7
 800241c:	4328      	orrs	r0, r5
 800241e:	2500      	movs	r5, #0
 8002420:	4306      	orrs	r6, r0
 8002422:	4032      	ands	r2, r6
 8002424:	2a00      	cmp	r2, #0
 8002426:	d009      	beq.n	800243c <__aeabi_dsub+0xf8>
 8002428:	230f      	movs	r3, #15
 800242a:	4033      	ands	r3, r6
 800242c:	2b04      	cmp	r3, #4
 800242e:	d005      	beq.n	800243c <__aeabi_dsub+0xf8>
 8002430:	1d33      	adds	r3, r6, #4
 8002432:	42b3      	cmp	r3, r6
 8002434:	41b6      	sbcs	r6, r6
 8002436:	4276      	negs	r6, r6
 8002438:	1989      	adds	r1, r1, r6
 800243a:	001e      	movs	r6, r3
 800243c:	020b      	lsls	r3, r1, #8
 800243e:	d400      	bmi.n	8002442 <__aeabi_dsub+0xfe>
 8002440:	e23d      	b.n	80028be <__aeabi_dsub+0x57a>
 8002442:	1c6a      	adds	r2, r5, #1
 8002444:	4b91      	ldr	r3, [pc, #580]	; (800268c <__aeabi_dsub+0x348>)
 8002446:	0555      	lsls	r5, r2, #21
 8002448:	0d6d      	lsrs	r5, r5, #21
 800244a:	429a      	cmp	r2, r3
 800244c:	d100      	bne.n	8002450 <__aeabi_dsub+0x10c>
 800244e:	e119      	b.n	8002684 <__aeabi_dsub+0x340>
 8002450:	4a8f      	ldr	r2, [pc, #572]	; (8002690 <__aeabi_dsub+0x34c>)
 8002452:	08f6      	lsrs	r6, r6, #3
 8002454:	400a      	ands	r2, r1
 8002456:	0757      	lsls	r7, r2, #29
 8002458:	0252      	lsls	r2, r2, #9
 800245a:	4337      	orrs	r7, r6
 800245c:	0b12      	lsrs	r2, r2, #12
 800245e:	e09b      	b.n	8002598 <__aeabi_dsub+0x254>
 8002460:	2e00      	cmp	r6, #0
 8002462:	d000      	beq.n	8002466 <__aeabi_dsub+0x122>
 8002464:	e0c5      	b.n	80025f2 <__aeabi_dsub+0x2ae>
 8002466:	1c6e      	adds	r6, r5, #1
 8002468:	0576      	lsls	r6, r6, #21
 800246a:	0d76      	lsrs	r6, r6, #21
 800246c:	2e01      	cmp	r6, #1
 800246e:	dc00      	bgt.n	8002472 <__aeabi_dsub+0x12e>
 8002470:	e148      	b.n	8002704 <__aeabi_dsub+0x3c0>
 8002472:	4667      	mov	r7, ip
 8002474:	1a86      	subs	r6, r0, r2
 8002476:	1bcb      	subs	r3, r1, r7
 8002478:	42b0      	cmp	r0, r6
 800247a:	41bf      	sbcs	r7, r7
 800247c:	427f      	negs	r7, r7
 800247e:	46b8      	mov	r8, r7
 8002480:	001f      	movs	r7, r3
 8002482:	4643      	mov	r3, r8
 8002484:	1aff      	subs	r7, r7, r3
 8002486:	003b      	movs	r3, r7
 8002488:	46b8      	mov	r8, r7
 800248a:	021b      	lsls	r3, r3, #8
 800248c:	d500      	bpl.n	8002490 <__aeabi_dsub+0x14c>
 800248e:	e15f      	b.n	8002750 <__aeabi_dsub+0x40c>
 8002490:	4337      	orrs	r7, r6
 8002492:	d19a      	bne.n	80023ca <__aeabi_dsub+0x86>
 8002494:	2200      	movs	r2, #0
 8002496:	2400      	movs	r4, #0
 8002498:	2500      	movs	r5, #0
 800249a:	e079      	b.n	8002590 <__aeabi_dsub+0x24c>
 800249c:	2e00      	cmp	r6, #0
 800249e:	dc00      	bgt.n	80024a2 <__aeabi_dsub+0x15e>
 80024a0:	e0fa      	b.n	8002698 <__aeabi_dsub+0x354>
 80024a2:	2f00      	cmp	r7, #0
 80024a4:	d100      	bne.n	80024a8 <__aeabi_dsub+0x164>
 80024a6:	e08d      	b.n	80025c4 <__aeabi_dsub+0x280>
 80024a8:	4b78      	ldr	r3, [pc, #480]	; (800268c <__aeabi_dsub+0x348>)
 80024aa:	429d      	cmp	r5, r3
 80024ac:	d067      	beq.n	800257e <__aeabi_dsub+0x23a>
 80024ae:	2380      	movs	r3, #128	; 0x80
 80024b0:	4667      	mov	r7, ip
 80024b2:	041b      	lsls	r3, r3, #16
 80024b4:	431f      	orrs	r7, r3
 80024b6:	46bc      	mov	ip, r7
 80024b8:	2e38      	cmp	r6, #56	; 0x38
 80024ba:	dc00      	bgt.n	80024be <__aeabi_dsub+0x17a>
 80024bc:	e152      	b.n	8002764 <__aeabi_dsub+0x420>
 80024be:	4663      	mov	r3, ip
 80024c0:	4313      	orrs	r3, r2
 80024c2:	1e5a      	subs	r2, r3, #1
 80024c4:	4193      	sbcs	r3, r2
 80024c6:	181e      	adds	r6, r3, r0
 80024c8:	4286      	cmp	r6, r0
 80024ca:	4180      	sbcs	r0, r0
 80024cc:	4240      	negs	r0, r0
 80024ce:	1809      	adds	r1, r1, r0
 80024d0:	020b      	lsls	r3, r1, #8
 80024d2:	d400      	bmi.n	80024d6 <__aeabi_dsub+0x192>
 80024d4:	e0be      	b.n	8002654 <__aeabi_dsub+0x310>
 80024d6:	4b6d      	ldr	r3, [pc, #436]	; (800268c <__aeabi_dsub+0x348>)
 80024d8:	3501      	adds	r5, #1
 80024da:	429d      	cmp	r5, r3
 80024dc:	d100      	bne.n	80024e0 <__aeabi_dsub+0x19c>
 80024de:	e0d2      	b.n	8002686 <__aeabi_dsub+0x342>
 80024e0:	4a6b      	ldr	r2, [pc, #428]	; (8002690 <__aeabi_dsub+0x34c>)
 80024e2:	0873      	lsrs	r3, r6, #1
 80024e4:	400a      	ands	r2, r1
 80024e6:	2101      	movs	r1, #1
 80024e8:	400e      	ands	r6, r1
 80024ea:	431e      	orrs	r6, r3
 80024ec:	0851      	lsrs	r1, r2, #1
 80024ee:	07d3      	lsls	r3, r2, #31
 80024f0:	2207      	movs	r2, #7
 80024f2:	431e      	orrs	r6, r3
 80024f4:	4032      	ands	r2, r6
 80024f6:	e795      	b.n	8002424 <__aeabi_dsub+0xe0>
 80024f8:	001e      	movs	r6, r3
 80024fa:	4316      	orrs	r6, r2
 80024fc:	d000      	beq.n	8002500 <__aeabi_dsub+0x1bc>
 80024fe:	e745      	b.n	800238c <__aeabi_dsub+0x48>
 8002500:	e740      	b.n	8002384 <__aeabi_dsub+0x40>
 8002502:	4b62      	ldr	r3, [pc, #392]	; (800268c <__aeabi_dsub+0x348>)
 8002504:	429d      	cmp	r5, r3
 8002506:	d03a      	beq.n	800257e <__aeabi_dsub+0x23a>
 8002508:	2380      	movs	r3, #128	; 0x80
 800250a:	4667      	mov	r7, ip
 800250c:	041b      	lsls	r3, r3, #16
 800250e:	431f      	orrs	r7, r3
 8002510:	46bc      	mov	ip, r7
 8002512:	2e38      	cmp	r6, #56	; 0x38
 8002514:	dd00      	ble.n	8002518 <__aeabi_dsub+0x1d4>
 8002516:	e0eb      	b.n	80026f0 <__aeabi_dsub+0x3ac>
 8002518:	2e1f      	cmp	r6, #31
 800251a:	dc00      	bgt.n	800251e <__aeabi_dsub+0x1da>
 800251c:	e13a      	b.n	8002794 <__aeabi_dsub+0x450>
 800251e:	0033      	movs	r3, r6
 8002520:	4667      	mov	r7, ip
 8002522:	3b20      	subs	r3, #32
 8002524:	40df      	lsrs	r7, r3
 8002526:	003b      	movs	r3, r7
 8002528:	2e20      	cmp	r6, #32
 800252a:	d005      	beq.n	8002538 <__aeabi_dsub+0x1f4>
 800252c:	2740      	movs	r7, #64	; 0x40
 800252e:	1bbf      	subs	r7, r7, r6
 8002530:	4666      	mov	r6, ip
 8002532:	40be      	lsls	r6, r7
 8002534:	4332      	orrs	r2, r6
 8002536:	4690      	mov	r8, r2
 8002538:	4646      	mov	r6, r8
 800253a:	1e72      	subs	r2, r6, #1
 800253c:	4196      	sbcs	r6, r2
 800253e:	4333      	orrs	r3, r6
 8002540:	e0da      	b.n	80026f8 <__aeabi_dsub+0x3b4>
 8002542:	2b00      	cmp	r3, #0
 8002544:	d100      	bne.n	8002548 <__aeabi_dsub+0x204>
 8002546:	e214      	b.n	8002972 <__aeabi_dsub+0x62e>
 8002548:	4663      	mov	r3, ip
 800254a:	4313      	orrs	r3, r2
 800254c:	d100      	bne.n	8002550 <__aeabi_dsub+0x20c>
 800254e:	e168      	b.n	8002822 <__aeabi_dsub+0x4de>
 8002550:	2380      	movs	r3, #128	; 0x80
 8002552:	074e      	lsls	r6, r1, #29
 8002554:	08c0      	lsrs	r0, r0, #3
 8002556:	08c9      	lsrs	r1, r1, #3
 8002558:	031b      	lsls	r3, r3, #12
 800255a:	4306      	orrs	r6, r0
 800255c:	4219      	tst	r1, r3
 800255e:	d008      	beq.n	8002572 <__aeabi_dsub+0x22e>
 8002560:	4660      	mov	r0, ip
 8002562:	08c0      	lsrs	r0, r0, #3
 8002564:	4218      	tst	r0, r3
 8002566:	d104      	bne.n	8002572 <__aeabi_dsub+0x22e>
 8002568:	4663      	mov	r3, ip
 800256a:	0001      	movs	r1, r0
 800256c:	08d2      	lsrs	r2, r2, #3
 800256e:	075e      	lsls	r6, r3, #29
 8002570:	4316      	orrs	r6, r2
 8002572:	00f3      	lsls	r3, r6, #3
 8002574:	4699      	mov	r9, r3
 8002576:	00c9      	lsls	r1, r1, #3
 8002578:	0f72      	lsrs	r2, r6, #29
 800257a:	4d44      	ldr	r5, [pc, #272]	; (800268c <__aeabi_dsub+0x348>)
 800257c:	4311      	orrs	r1, r2
 800257e:	464b      	mov	r3, r9
 8002580:	08de      	lsrs	r6, r3, #3
 8002582:	4b42      	ldr	r3, [pc, #264]	; (800268c <__aeabi_dsub+0x348>)
 8002584:	074f      	lsls	r7, r1, #29
 8002586:	4337      	orrs	r7, r6
 8002588:	08ca      	lsrs	r2, r1, #3
 800258a:	429d      	cmp	r5, r3
 800258c:	d100      	bne.n	8002590 <__aeabi_dsub+0x24c>
 800258e:	e06e      	b.n	800266e <__aeabi_dsub+0x32a>
 8002590:	0312      	lsls	r2, r2, #12
 8002592:	056d      	lsls	r5, r5, #21
 8002594:	0b12      	lsrs	r2, r2, #12
 8002596:	0d6d      	lsrs	r5, r5, #21
 8002598:	2100      	movs	r1, #0
 800259a:	0312      	lsls	r2, r2, #12
 800259c:	0b13      	lsrs	r3, r2, #12
 800259e:	0d0a      	lsrs	r2, r1, #20
 80025a0:	0512      	lsls	r2, r2, #20
 80025a2:	431a      	orrs	r2, r3
 80025a4:	4b3b      	ldr	r3, [pc, #236]	; (8002694 <__aeabi_dsub+0x350>)
 80025a6:	052d      	lsls	r5, r5, #20
 80025a8:	4013      	ands	r3, r2
 80025aa:	432b      	orrs	r3, r5
 80025ac:	005b      	lsls	r3, r3, #1
 80025ae:	07e4      	lsls	r4, r4, #31
 80025b0:	085b      	lsrs	r3, r3, #1
 80025b2:	4323      	orrs	r3, r4
 80025b4:	0038      	movs	r0, r7
 80025b6:	0019      	movs	r1, r3
 80025b8:	bc3c      	pop	{r2, r3, r4, r5}
 80025ba:	4690      	mov	r8, r2
 80025bc:	4699      	mov	r9, r3
 80025be:	46a2      	mov	sl, r4
 80025c0:	46ab      	mov	fp, r5
 80025c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025c4:	4663      	mov	r3, ip
 80025c6:	4313      	orrs	r3, r2
 80025c8:	d011      	beq.n	80025ee <__aeabi_dsub+0x2aa>
 80025ca:	1e73      	subs	r3, r6, #1
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	d000      	beq.n	80025d2 <__aeabi_dsub+0x28e>
 80025d0:	e107      	b.n	80027e2 <__aeabi_dsub+0x49e>
 80025d2:	1886      	adds	r6, r0, r2
 80025d4:	4286      	cmp	r6, r0
 80025d6:	4180      	sbcs	r0, r0
 80025d8:	4461      	add	r1, ip
 80025da:	4240      	negs	r0, r0
 80025dc:	1809      	adds	r1, r1, r0
 80025de:	2501      	movs	r5, #1
 80025e0:	020b      	lsls	r3, r1, #8
 80025e2:	d537      	bpl.n	8002654 <__aeabi_dsub+0x310>
 80025e4:	2502      	movs	r5, #2
 80025e6:	e77b      	b.n	80024e0 <__aeabi_dsub+0x19c>
 80025e8:	003e      	movs	r6, r7
 80025ea:	4661      	mov	r1, ip
 80025ec:	4691      	mov	r9, r2
 80025ee:	0035      	movs	r5, r6
 80025f0:	e7c5      	b.n	800257e <__aeabi_dsub+0x23a>
 80025f2:	465c      	mov	r4, fp
 80025f4:	2d00      	cmp	r5, #0
 80025f6:	d000      	beq.n	80025fa <__aeabi_dsub+0x2b6>
 80025f8:	e0e1      	b.n	80027be <__aeabi_dsub+0x47a>
 80025fa:	000b      	movs	r3, r1
 80025fc:	4303      	orrs	r3, r0
 80025fe:	d0f3      	beq.n	80025e8 <__aeabi_dsub+0x2a4>
 8002600:	1c73      	adds	r3, r6, #1
 8002602:	d100      	bne.n	8002606 <__aeabi_dsub+0x2c2>
 8002604:	e1ac      	b.n	8002960 <__aeabi_dsub+0x61c>
 8002606:	4b21      	ldr	r3, [pc, #132]	; (800268c <__aeabi_dsub+0x348>)
 8002608:	429f      	cmp	r7, r3
 800260a:	d100      	bne.n	800260e <__aeabi_dsub+0x2ca>
 800260c:	e13a      	b.n	8002884 <__aeabi_dsub+0x540>
 800260e:	43f3      	mvns	r3, r6
 8002610:	2b38      	cmp	r3, #56	; 0x38
 8002612:	dd00      	ble.n	8002616 <__aeabi_dsub+0x2d2>
 8002614:	e16f      	b.n	80028f6 <__aeabi_dsub+0x5b2>
 8002616:	2b1f      	cmp	r3, #31
 8002618:	dd00      	ble.n	800261c <__aeabi_dsub+0x2d8>
 800261a:	e18c      	b.n	8002936 <__aeabi_dsub+0x5f2>
 800261c:	2520      	movs	r5, #32
 800261e:	000e      	movs	r6, r1
 8002620:	1aed      	subs	r5, r5, r3
 8002622:	40ae      	lsls	r6, r5
 8002624:	46b0      	mov	r8, r6
 8002626:	0006      	movs	r6, r0
 8002628:	46aa      	mov	sl, r5
 800262a:	40de      	lsrs	r6, r3
 800262c:	4645      	mov	r5, r8
 800262e:	4335      	orrs	r5, r6
 8002630:	002e      	movs	r6, r5
 8002632:	4655      	mov	r5, sl
 8002634:	40d9      	lsrs	r1, r3
 8002636:	40a8      	lsls	r0, r5
 8002638:	4663      	mov	r3, ip
 800263a:	1e45      	subs	r5, r0, #1
 800263c:	41a8      	sbcs	r0, r5
 800263e:	1a5b      	subs	r3, r3, r1
 8002640:	469c      	mov	ip, r3
 8002642:	4330      	orrs	r0, r6
 8002644:	1a16      	subs	r6, r2, r0
 8002646:	42b2      	cmp	r2, r6
 8002648:	4192      	sbcs	r2, r2
 800264a:	4663      	mov	r3, ip
 800264c:	4252      	negs	r2, r2
 800264e:	1a99      	subs	r1, r3, r2
 8002650:	003d      	movs	r5, r7
 8002652:	e6b4      	b.n	80023be <__aeabi_dsub+0x7a>
 8002654:	2207      	movs	r2, #7
 8002656:	4032      	ands	r2, r6
 8002658:	2a00      	cmp	r2, #0
 800265a:	d000      	beq.n	800265e <__aeabi_dsub+0x31a>
 800265c:	e6e4      	b.n	8002428 <__aeabi_dsub+0xe4>
 800265e:	4b0b      	ldr	r3, [pc, #44]	; (800268c <__aeabi_dsub+0x348>)
 8002660:	08f6      	lsrs	r6, r6, #3
 8002662:	074f      	lsls	r7, r1, #29
 8002664:	4337      	orrs	r7, r6
 8002666:	08ca      	lsrs	r2, r1, #3
 8002668:	429d      	cmp	r5, r3
 800266a:	d000      	beq.n	800266e <__aeabi_dsub+0x32a>
 800266c:	e790      	b.n	8002590 <__aeabi_dsub+0x24c>
 800266e:	003b      	movs	r3, r7
 8002670:	4313      	orrs	r3, r2
 8002672:	d100      	bne.n	8002676 <__aeabi_dsub+0x332>
 8002674:	e1a6      	b.n	80029c4 <__aeabi_dsub+0x680>
 8002676:	2380      	movs	r3, #128	; 0x80
 8002678:	031b      	lsls	r3, r3, #12
 800267a:	431a      	orrs	r2, r3
 800267c:	0312      	lsls	r2, r2, #12
 800267e:	0b12      	lsrs	r2, r2, #12
 8002680:	4d02      	ldr	r5, [pc, #8]	; (800268c <__aeabi_dsub+0x348>)
 8002682:	e789      	b.n	8002598 <__aeabi_dsub+0x254>
 8002684:	0015      	movs	r5, r2
 8002686:	2200      	movs	r2, #0
 8002688:	2700      	movs	r7, #0
 800268a:	e785      	b.n	8002598 <__aeabi_dsub+0x254>
 800268c:	000007ff 	.word	0x000007ff
 8002690:	ff7fffff 	.word	0xff7fffff
 8002694:	800fffff 	.word	0x800fffff
 8002698:	2e00      	cmp	r6, #0
 800269a:	d000      	beq.n	800269e <__aeabi_dsub+0x35a>
 800269c:	e0c7      	b.n	800282e <__aeabi_dsub+0x4ea>
 800269e:	1c6b      	adds	r3, r5, #1
 80026a0:	055e      	lsls	r6, r3, #21
 80026a2:	0d76      	lsrs	r6, r6, #21
 80026a4:	2e01      	cmp	r6, #1
 80026a6:	dc00      	bgt.n	80026aa <__aeabi_dsub+0x366>
 80026a8:	e0f0      	b.n	800288c <__aeabi_dsub+0x548>
 80026aa:	4dc8      	ldr	r5, [pc, #800]	; (80029cc <__aeabi_dsub+0x688>)
 80026ac:	42ab      	cmp	r3, r5
 80026ae:	d100      	bne.n	80026b2 <__aeabi_dsub+0x36e>
 80026b0:	e0b9      	b.n	8002826 <__aeabi_dsub+0x4e2>
 80026b2:	1885      	adds	r5, r0, r2
 80026b4:	000a      	movs	r2, r1
 80026b6:	4285      	cmp	r5, r0
 80026b8:	4189      	sbcs	r1, r1
 80026ba:	4462      	add	r2, ip
 80026bc:	4249      	negs	r1, r1
 80026be:	1851      	adds	r1, r2, r1
 80026c0:	2207      	movs	r2, #7
 80026c2:	07ce      	lsls	r6, r1, #31
 80026c4:	086d      	lsrs	r5, r5, #1
 80026c6:	432e      	orrs	r6, r5
 80026c8:	0849      	lsrs	r1, r1, #1
 80026ca:	4032      	ands	r2, r6
 80026cc:	001d      	movs	r5, r3
 80026ce:	e6a9      	b.n	8002424 <__aeabi_dsub+0xe0>
 80026d0:	49bf      	ldr	r1, [pc, #764]	; (80029d0 <__aeabi_dsub+0x68c>)
 80026d2:	1aed      	subs	r5, r5, r3
 80026d4:	4011      	ands	r1, r2
 80026d6:	2207      	movs	r2, #7
 80026d8:	4032      	ands	r2, r6
 80026da:	e6a3      	b.n	8002424 <__aeabi_dsub+0xe0>
 80026dc:	0032      	movs	r2, r6
 80026de:	3828      	subs	r0, #40	; 0x28
 80026e0:	4082      	lsls	r2, r0
 80026e2:	2600      	movs	r6, #0
 80026e4:	e686      	b.n	80023f4 <__aeabi_dsub+0xb0>
 80026e6:	0030      	movs	r0, r6
 80026e8:	f000 fad6 	bl	8002c98 <__clzsi2>
 80026ec:	3020      	adds	r0, #32
 80026ee:	e673      	b.n	80023d8 <__aeabi_dsub+0x94>
 80026f0:	4663      	mov	r3, ip
 80026f2:	4313      	orrs	r3, r2
 80026f4:	1e5a      	subs	r2, r3, #1
 80026f6:	4193      	sbcs	r3, r2
 80026f8:	1ac6      	subs	r6, r0, r3
 80026fa:	42b0      	cmp	r0, r6
 80026fc:	4180      	sbcs	r0, r0
 80026fe:	4240      	negs	r0, r0
 8002700:	1a09      	subs	r1, r1, r0
 8002702:	e65c      	b.n	80023be <__aeabi_dsub+0x7a>
 8002704:	000e      	movs	r6, r1
 8002706:	4667      	mov	r7, ip
 8002708:	4306      	orrs	r6, r0
 800270a:	4317      	orrs	r7, r2
 800270c:	2d00      	cmp	r5, #0
 800270e:	d15e      	bne.n	80027ce <__aeabi_dsub+0x48a>
 8002710:	2e00      	cmp	r6, #0
 8002712:	d000      	beq.n	8002716 <__aeabi_dsub+0x3d2>
 8002714:	e0f3      	b.n	80028fe <__aeabi_dsub+0x5ba>
 8002716:	2f00      	cmp	r7, #0
 8002718:	d100      	bne.n	800271c <__aeabi_dsub+0x3d8>
 800271a:	e11e      	b.n	800295a <__aeabi_dsub+0x616>
 800271c:	465c      	mov	r4, fp
 800271e:	4661      	mov	r1, ip
 8002720:	4691      	mov	r9, r2
 8002722:	e72c      	b.n	800257e <__aeabi_dsub+0x23a>
 8002724:	4fa9      	ldr	r7, [pc, #676]	; (80029cc <__aeabi_dsub+0x688>)
 8002726:	42be      	cmp	r6, r7
 8002728:	d07b      	beq.n	8002822 <__aeabi_dsub+0x4de>
 800272a:	001e      	movs	r6, r3
 800272c:	e6f1      	b.n	8002512 <__aeabi_dsub+0x1ce>
 800272e:	0010      	movs	r0, r2
 8002730:	3d1f      	subs	r5, #31
 8002732:	40e8      	lsrs	r0, r5
 8002734:	2b20      	cmp	r3, #32
 8002736:	d003      	beq.n	8002740 <__aeabi_dsub+0x3fc>
 8002738:	2140      	movs	r1, #64	; 0x40
 800273a:	1acb      	subs	r3, r1, r3
 800273c:	409a      	lsls	r2, r3
 800273e:	4316      	orrs	r6, r2
 8002740:	1e73      	subs	r3, r6, #1
 8002742:	419e      	sbcs	r6, r3
 8002744:	2207      	movs	r2, #7
 8002746:	4306      	orrs	r6, r0
 8002748:	4032      	ands	r2, r6
 800274a:	2100      	movs	r1, #0
 800274c:	2500      	movs	r5, #0
 800274e:	e783      	b.n	8002658 <__aeabi_dsub+0x314>
 8002750:	1a16      	subs	r6, r2, r0
 8002752:	4663      	mov	r3, ip
 8002754:	42b2      	cmp	r2, r6
 8002756:	4180      	sbcs	r0, r0
 8002758:	1a59      	subs	r1, r3, r1
 800275a:	4240      	negs	r0, r0
 800275c:	1a0b      	subs	r3, r1, r0
 800275e:	4698      	mov	r8, r3
 8002760:	465c      	mov	r4, fp
 8002762:	e632      	b.n	80023ca <__aeabi_dsub+0x86>
 8002764:	2e1f      	cmp	r6, #31
 8002766:	dd00      	ble.n	800276a <__aeabi_dsub+0x426>
 8002768:	e0ab      	b.n	80028c2 <__aeabi_dsub+0x57e>
 800276a:	2720      	movs	r7, #32
 800276c:	1bbb      	subs	r3, r7, r6
 800276e:	469a      	mov	sl, r3
 8002770:	4663      	mov	r3, ip
 8002772:	4657      	mov	r7, sl
 8002774:	40bb      	lsls	r3, r7
 8002776:	4699      	mov	r9, r3
 8002778:	0013      	movs	r3, r2
 800277a:	464f      	mov	r7, r9
 800277c:	40f3      	lsrs	r3, r6
 800277e:	431f      	orrs	r7, r3
 8002780:	003b      	movs	r3, r7
 8002782:	4657      	mov	r7, sl
 8002784:	40ba      	lsls	r2, r7
 8002786:	1e57      	subs	r7, r2, #1
 8002788:	41ba      	sbcs	r2, r7
 800278a:	4313      	orrs	r3, r2
 800278c:	4662      	mov	r2, ip
 800278e:	40f2      	lsrs	r2, r6
 8002790:	1889      	adds	r1, r1, r2
 8002792:	e698      	b.n	80024c6 <__aeabi_dsub+0x182>
 8002794:	2720      	movs	r7, #32
 8002796:	1bbb      	subs	r3, r7, r6
 8002798:	469a      	mov	sl, r3
 800279a:	4663      	mov	r3, ip
 800279c:	4657      	mov	r7, sl
 800279e:	40bb      	lsls	r3, r7
 80027a0:	4699      	mov	r9, r3
 80027a2:	0013      	movs	r3, r2
 80027a4:	464f      	mov	r7, r9
 80027a6:	40f3      	lsrs	r3, r6
 80027a8:	431f      	orrs	r7, r3
 80027aa:	003b      	movs	r3, r7
 80027ac:	4657      	mov	r7, sl
 80027ae:	40ba      	lsls	r2, r7
 80027b0:	1e57      	subs	r7, r2, #1
 80027b2:	41ba      	sbcs	r2, r7
 80027b4:	4313      	orrs	r3, r2
 80027b6:	4662      	mov	r2, ip
 80027b8:	40f2      	lsrs	r2, r6
 80027ba:	1a89      	subs	r1, r1, r2
 80027bc:	e79c      	b.n	80026f8 <__aeabi_dsub+0x3b4>
 80027be:	4b83      	ldr	r3, [pc, #524]	; (80029cc <__aeabi_dsub+0x688>)
 80027c0:	429f      	cmp	r7, r3
 80027c2:	d05f      	beq.n	8002884 <__aeabi_dsub+0x540>
 80027c4:	2580      	movs	r5, #128	; 0x80
 80027c6:	042d      	lsls	r5, r5, #16
 80027c8:	4273      	negs	r3, r6
 80027ca:	4329      	orrs	r1, r5
 80027cc:	e720      	b.n	8002610 <__aeabi_dsub+0x2cc>
 80027ce:	2e00      	cmp	r6, #0
 80027d0:	d10c      	bne.n	80027ec <__aeabi_dsub+0x4a8>
 80027d2:	2f00      	cmp	r7, #0
 80027d4:	d100      	bne.n	80027d8 <__aeabi_dsub+0x494>
 80027d6:	e0d0      	b.n	800297a <__aeabi_dsub+0x636>
 80027d8:	465c      	mov	r4, fp
 80027da:	4661      	mov	r1, ip
 80027dc:	4691      	mov	r9, r2
 80027de:	4d7b      	ldr	r5, [pc, #492]	; (80029cc <__aeabi_dsub+0x688>)
 80027e0:	e6cd      	b.n	800257e <__aeabi_dsub+0x23a>
 80027e2:	4f7a      	ldr	r7, [pc, #488]	; (80029cc <__aeabi_dsub+0x688>)
 80027e4:	42be      	cmp	r6, r7
 80027e6:	d01c      	beq.n	8002822 <__aeabi_dsub+0x4de>
 80027e8:	001e      	movs	r6, r3
 80027ea:	e665      	b.n	80024b8 <__aeabi_dsub+0x174>
 80027ec:	2f00      	cmp	r7, #0
 80027ee:	d018      	beq.n	8002822 <__aeabi_dsub+0x4de>
 80027f0:	08c0      	lsrs	r0, r0, #3
 80027f2:	074e      	lsls	r6, r1, #29
 80027f4:	4306      	orrs	r6, r0
 80027f6:	2080      	movs	r0, #128	; 0x80
 80027f8:	08c9      	lsrs	r1, r1, #3
 80027fa:	0300      	lsls	r0, r0, #12
 80027fc:	4201      	tst	r1, r0
 80027fe:	d008      	beq.n	8002812 <__aeabi_dsub+0x4ce>
 8002800:	4663      	mov	r3, ip
 8002802:	08dc      	lsrs	r4, r3, #3
 8002804:	4204      	tst	r4, r0
 8002806:	d104      	bne.n	8002812 <__aeabi_dsub+0x4ce>
 8002808:	0021      	movs	r1, r4
 800280a:	46da      	mov	sl, fp
 800280c:	08d2      	lsrs	r2, r2, #3
 800280e:	075e      	lsls	r6, r3, #29
 8002810:	4316      	orrs	r6, r2
 8002812:	00f3      	lsls	r3, r6, #3
 8002814:	4699      	mov	r9, r3
 8002816:	2401      	movs	r4, #1
 8002818:	4653      	mov	r3, sl
 800281a:	00c9      	lsls	r1, r1, #3
 800281c:	0f72      	lsrs	r2, r6, #29
 800281e:	4311      	orrs	r1, r2
 8002820:	401c      	ands	r4, r3
 8002822:	4d6a      	ldr	r5, [pc, #424]	; (80029cc <__aeabi_dsub+0x688>)
 8002824:	e6ab      	b.n	800257e <__aeabi_dsub+0x23a>
 8002826:	001d      	movs	r5, r3
 8002828:	2200      	movs	r2, #0
 800282a:	2700      	movs	r7, #0
 800282c:	e6b4      	b.n	8002598 <__aeabi_dsub+0x254>
 800282e:	2d00      	cmp	r5, #0
 8002830:	d159      	bne.n	80028e6 <__aeabi_dsub+0x5a2>
 8002832:	000b      	movs	r3, r1
 8002834:	4303      	orrs	r3, r0
 8002836:	d100      	bne.n	800283a <__aeabi_dsub+0x4f6>
 8002838:	e6d6      	b.n	80025e8 <__aeabi_dsub+0x2a4>
 800283a:	1c73      	adds	r3, r6, #1
 800283c:	d100      	bne.n	8002840 <__aeabi_dsub+0x4fc>
 800283e:	e0b2      	b.n	80029a6 <__aeabi_dsub+0x662>
 8002840:	4b62      	ldr	r3, [pc, #392]	; (80029cc <__aeabi_dsub+0x688>)
 8002842:	429f      	cmp	r7, r3
 8002844:	d01e      	beq.n	8002884 <__aeabi_dsub+0x540>
 8002846:	43f3      	mvns	r3, r6
 8002848:	2b38      	cmp	r3, #56	; 0x38
 800284a:	dc6f      	bgt.n	800292c <__aeabi_dsub+0x5e8>
 800284c:	2b1f      	cmp	r3, #31
 800284e:	dd00      	ble.n	8002852 <__aeabi_dsub+0x50e>
 8002850:	e097      	b.n	8002982 <__aeabi_dsub+0x63e>
 8002852:	2520      	movs	r5, #32
 8002854:	000e      	movs	r6, r1
 8002856:	1aed      	subs	r5, r5, r3
 8002858:	40ae      	lsls	r6, r5
 800285a:	46b0      	mov	r8, r6
 800285c:	0006      	movs	r6, r0
 800285e:	46aa      	mov	sl, r5
 8002860:	40de      	lsrs	r6, r3
 8002862:	4645      	mov	r5, r8
 8002864:	4335      	orrs	r5, r6
 8002866:	002e      	movs	r6, r5
 8002868:	4655      	mov	r5, sl
 800286a:	40a8      	lsls	r0, r5
 800286c:	40d9      	lsrs	r1, r3
 800286e:	1e45      	subs	r5, r0, #1
 8002870:	41a8      	sbcs	r0, r5
 8002872:	448c      	add	ip, r1
 8002874:	4306      	orrs	r6, r0
 8002876:	18b6      	adds	r6, r6, r2
 8002878:	4296      	cmp	r6, r2
 800287a:	4192      	sbcs	r2, r2
 800287c:	4251      	negs	r1, r2
 800287e:	4461      	add	r1, ip
 8002880:	003d      	movs	r5, r7
 8002882:	e625      	b.n	80024d0 <__aeabi_dsub+0x18c>
 8002884:	003d      	movs	r5, r7
 8002886:	4661      	mov	r1, ip
 8002888:	4691      	mov	r9, r2
 800288a:	e678      	b.n	800257e <__aeabi_dsub+0x23a>
 800288c:	000b      	movs	r3, r1
 800288e:	4303      	orrs	r3, r0
 8002890:	2d00      	cmp	r5, #0
 8002892:	d000      	beq.n	8002896 <__aeabi_dsub+0x552>
 8002894:	e655      	b.n	8002542 <__aeabi_dsub+0x1fe>
 8002896:	2b00      	cmp	r3, #0
 8002898:	d0f5      	beq.n	8002886 <__aeabi_dsub+0x542>
 800289a:	4663      	mov	r3, ip
 800289c:	4313      	orrs	r3, r2
 800289e:	d100      	bne.n	80028a2 <__aeabi_dsub+0x55e>
 80028a0:	e66d      	b.n	800257e <__aeabi_dsub+0x23a>
 80028a2:	1886      	adds	r6, r0, r2
 80028a4:	4286      	cmp	r6, r0
 80028a6:	4180      	sbcs	r0, r0
 80028a8:	4461      	add	r1, ip
 80028aa:	4240      	negs	r0, r0
 80028ac:	1809      	adds	r1, r1, r0
 80028ae:	2200      	movs	r2, #0
 80028b0:	020b      	lsls	r3, r1, #8
 80028b2:	d400      	bmi.n	80028b6 <__aeabi_dsub+0x572>
 80028b4:	e6d0      	b.n	8002658 <__aeabi_dsub+0x314>
 80028b6:	4b46      	ldr	r3, [pc, #280]	; (80029d0 <__aeabi_dsub+0x68c>)
 80028b8:	3501      	adds	r5, #1
 80028ba:	4019      	ands	r1, r3
 80028bc:	e5b2      	b.n	8002424 <__aeabi_dsub+0xe0>
 80028be:	46b1      	mov	r9, r6
 80028c0:	e65d      	b.n	800257e <__aeabi_dsub+0x23a>
 80028c2:	0033      	movs	r3, r6
 80028c4:	4667      	mov	r7, ip
 80028c6:	3b20      	subs	r3, #32
 80028c8:	40df      	lsrs	r7, r3
 80028ca:	003b      	movs	r3, r7
 80028cc:	2e20      	cmp	r6, #32
 80028ce:	d005      	beq.n	80028dc <__aeabi_dsub+0x598>
 80028d0:	2740      	movs	r7, #64	; 0x40
 80028d2:	1bbf      	subs	r7, r7, r6
 80028d4:	4666      	mov	r6, ip
 80028d6:	40be      	lsls	r6, r7
 80028d8:	4332      	orrs	r2, r6
 80028da:	4690      	mov	r8, r2
 80028dc:	4646      	mov	r6, r8
 80028de:	1e72      	subs	r2, r6, #1
 80028e0:	4196      	sbcs	r6, r2
 80028e2:	4333      	orrs	r3, r6
 80028e4:	e5ef      	b.n	80024c6 <__aeabi_dsub+0x182>
 80028e6:	4b39      	ldr	r3, [pc, #228]	; (80029cc <__aeabi_dsub+0x688>)
 80028e8:	429f      	cmp	r7, r3
 80028ea:	d0cb      	beq.n	8002884 <__aeabi_dsub+0x540>
 80028ec:	2580      	movs	r5, #128	; 0x80
 80028ee:	042d      	lsls	r5, r5, #16
 80028f0:	4273      	negs	r3, r6
 80028f2:	4329      	orrs	r1, r5
 80028f4:	e7a8      	b.n	8002848 <__aeabi_dsub+0x504>
 80028f6:	4308      	orrs	r0, r1
 80028f8:	1e41      	subs	r1, r0, #1
 80028fa:	4188      	sbcs	r0, r1
 80028fc:	e6a2      	b.n	8002644 <__aeabi_dsub+0x300>
 80028fe:	2f00      	cmp	r7, #0
 8002900:	d100      	bne.n	8002904 <__aeabi_dsub+0x5c0>
 8002902:	e63c      	b.n	800257e <__aeabi_dsub+0x23a>
 8002904:	4663      	mov	r3, ip
 8002906:	1a86      	subs	r6, r0, r2
 8002908:	1acf      	subs	r7, r1, r3
 800290a:	42b0      	cmp	r0, r6
 800290c:	419b      	sbcs	r3, r3
 800290e:	425b      	negs	r3, r3
 8002910:	1afb      	subs	r3, r7, r3
 8002912:	4698      	mov	r8, r3
 8002914:	021b      	lsls	r3, r3, #8
 8002916:	d54e      	bpl.n	80029b6 <__aeabi_dsub+0x672>
 8002918:	1a16      	subs	r6, r2, r0
 800291a:	4663      	mov	r3, ip
 800291c:	42b2      	cmp	r2, r6
 800291e:	4192      	sbcs	r2, r2
 8002920:	1a59      	subs	r1, r3, r1
 8002922:	4252      	negs	r2, r2
 8002924:	1a89      	subs	r1, r1, r2
 8002926:	465c      	mov	r4, fp
 8002928:	2200      	movs	r2, #0
 800292a:	e57b      	b.n	8002424 <__aeabi_dsub+0xe0>
 800292c:	4301      	orrs	r1, r0
 800292e:	000e      	movs	r6, r1
 8002930:	1e71      	subs	r1, r6, #1
 8002932:	418e      	sbcs	r6, r1
 8002934:	e79f      	b.n	8002876 <__aeabi_dsub+0x532>
 8002936:	001d      	movs	r5, r3
 8002938:	000e      	movs	r6, r1
 800293a:	3d20      	subs	r5, #32
 800293c:	40ee      	lsrs	r6, r5
 800293e:	46b0      	mov	r8, r6
 8002940:	2b20      	cmp	r3, #32
 8002942:	d004      	beq.n	800294e <__aeabi_dsub+0x60a>
 8002944:	2540      	movs	r5, #64	; 0x40
 8002946:	1aeb      	subs	r3, r5, r3
 8002948:	4099      	lsls	r1, r3
 800294a:	4308      	orrs	r0, r1
 800294c:	4681      	mov	r9, r0
 800294e:	4648      	mov	r0, r9
 8002950:	4643      	mov	r3, r8
 8002952:	1e41      	subs	r1, r0, #1
 8002954:	4188      	sbcs	r0, r1
 8002956:	4318      	orrs	r0, r3
 8002958:	e674      	b.n	8002644 <__aeabi_dsub+0x300>
 800295a:	2200      	movs	r2, #0
 800295c:	2400      	movs	r4, #0
 800295e:	e617      	b.n	8002590 <__aeabi_dsub+0x24c>
 8002960:	1a16      	subs	r6, r2, r0
 8002962:	4663      	mov	r3, ip
 8002964:	42b2      	cmp	r2, r6
 8002966:	4192      	sbcs	r2, r2
 8002968:	1a59      	subs	r1, r3, r1
 800296a:	4252      	negs	r2, r2
 800296c:	1a89      	subs	r1, r1, r2
 800296e:	003d      	movs	r5, r7
 8002970:	e525      	b.n	80023be <__aeabi_dsub+0x7a>
 8002972:	4661      	mov	r1, ip
 8002974:	4691      	mov	r9, r2
 8002976:	4d15      	ldr	r5, [pc, #84]	; (80029cc <__aeabi_dsub+0x688>)
 8002978:	e601      	b.n	800257e <__aeabi_dsub+0x23a>
 800297a:	2280      	movs	r2, #128	; 0x80
 800297c:	2400      	movs	r4, #0
 800297e:	0312      	lsls	r2, r2, #12
 8002980:	e679      	b.n	8002676 <__aeabi_dsub+0x332>
 8002982:	001d      	movs	r5, r3
 8002984:	000e      	movs	r6, r1
 8002986:	3d20      	subs	r5, #32
 8002988:	40ee      	lsrs	r6, r5
 800298a:	46b0      	mov	r8, r6
 800298c:	2b20      	cmp	r3, #32
 800298e:	d004      	beq.n	800299a <__aeabi_dsub+0x656>
 8002990:	2540      	movs	r5, #64	; 0x40
 8002992:	1aeb      	subs	r3, r5, r3
 8002994:	4099      	lsls	r1, r3
 8002996:	4308      	orrs	r0, r1
 8002998:	4681      	mov	r9, r0
 800299a:	464e      	mov	r6, r9
 800299c:	4643      	mov	r3, r8
 800299e:	1e71      	subs	r1, r6, #1
 80029a0:	418e      	sbcs	r6, r1
 80029a2:	431e      	orrs	r6, r3
 80029a4:	e767      	b.n	8002876 <__aeabi_dsub+0x532>
 80029a6:	1886      	adds	r6, r0, r2
 80029a8:	4296      	cmp	r6, r2
 80029aa:	419b      	sbcs	r3, r3
 80029ac:	4461      	add	r1, ip
 80029ae:	425b      	negs	r3, r3
 80029b0:	18c9      	adds	r1, r1, r3
 80029b2:	003d      	movs	r5, r7
 80029b4:	e58c      	b.n	80024d0 <__aeabi_dsub+0x18c>
 80029b6:	4647      	mov	r7, r8
 80029b8:	4337      	orrs	r7, r6
 80029ba:	d0ce      	beq.n	800295a <__aeabi_dsub+0x616>
 80029bc:	2207      	movs	r2, #7
 80029be:	4641      	mov	r1, r8
 80029c0:	4032      	ands	r2, r6
 80029c2:	e649      	b.n	8002658 <__aeabi_dsub+0x314>
 80029c4:	2700      	movs	r7, #0
 80029c6:	003a      	movs	r2, r7
 80029c8:	e5e6      	b.n	8002598 <__aeabi_dsub+0x254>
 80029ca:	46c0      	nop			; (mov r8, r8)
 80029cc:	000007ff 	.word	0x000007ff
 80029d0:	ff7fffff 	.word	0xff7fffff

080029d4 <__aeabi_dcmpun>:
 80029d4:	b570      	push	{r4, r5, r6, lr}
 80029d6:	4e0c      	ldr	r6, [pc, #48]	; (8002a08 <__aeabi_dcmpun+0x34>)
 80029d8:	030d      	lsls	r5, r1, #12
 80029da:	031c      	lsls	r4, r3, #12
 80029dc:	0049      	lsls	r1, r1, #1
 80029de:	005b      	lsls	r3, r3, #1
 80029e0:	0b2d      	lsrs	r5, r5, #12
 80029e2:	0d49      	lsrs	r1, r1, #21
 80029e4:	0b24      	lsrs	r4, r4, #12
 80029e6:	0d5b      	lsrs	r3, r3, #21
 80029e8:	42b1      	cmp	r1, r6
 80029ea:	d008      	beq.n	80029fe <__aeabi_dcmpun+0x2a>
 80029ec:	4906      	ldr	r1, [pc, #24]	; (8002a08 <__aeabi_dcmpun+0x34>)
 80029ee:	2000      	movs	r0, #0
 80029f0:	428b      	cmp	r3, r1
 80029f2:	d103      	bne.n	80029fc <__aeabi_dcmpun+0x28>
 80029f4:	4314      	orrs	r4, r2
 80029f6:	0020      	movs	r0, r4
 80029f8:	1e44      	subs	r4, r0, #1
 80029fa:	41a0      	sbcs	r0, r4
 80029fc:	bd70      	pop	{r4, r5, r6, pc}
 80029fe:	4305      	orrs	r5, r0
 8002a00:	2001      	movs	r0, #1
 8002a02:	2d00      	cmp	r5, #0
 8002a04:	d1fa      	bne.n	80029fc <__aeabi_dcmpun+0x28>
 8002a06:	e7f1      	b.n	80029ec <__aeabi_dcmpun+0x18>
 8002a08:	000007ff 	.word	0x000007ff

08002a0c <__aeabi_d2iz>:
 8002a0c:	b530      	push	{r4, r5, lr}
 8002a0e:	4d14      	ldr	r5, [pc, #80]	; (8002a60 <__aeabi_d2iz+0x54>)
 8002a10:	030a      	lsls	r2, r1, #12
 8002a12:	004b      	lsls	r3, r1, #1
 8002a14:	0b12      	lsrs	r2, r2, #12
 8002a16:	0d5b      	lsrs	r3, r3, #21
 8002a18:	0fc9      	lsrs	r1, r1, #31
 8002a1a:	2400      	movs	r4, #0
 8002a1c:	42ab      	cmp	r3, r5
 8002a1e:	dd11      	ble.n	8002a44 <__aeabi_d2iz+0x38>
 8002a20:	4c10      	ldr	r4, [pc, #64]	; (8002a64 <__aeabi_d2iz+0x58>)
 8002a22:	42a3      	cmp	r3, r4
 8002a24:	dc10      	bgt.n	8002a48 <__aeabi_d2iz+0x3c>
 8002a26:	2480      	movs	r4, #128	; 0x80
 8002a28:	0364      	lsls	r4, r4, #13
 8002a2a:	4322      	orrs	r2, r4
 8002a2c:	4c0e      	ldr	r4, [pc, #56]	; (8002a68 <__aeabi_d2iz+0x5c>)
 8002a2e:	1ae4      	subs	r4, r4, r3
 8002a30:	2c1f      	cmp	r4, #31
 8002a32:	dd0c      	ble.n	8002a4e <__aeabi_d2iz+0x42>
 8002a34:	480d      	ldr	r0, [pc, #52]	; (8002a6c <__aeabi_d2iz+0x60>)
 8002a36:	1ac3      	subs	r3, r0, r3
 8002a38:	40da      	lsrs	r2, r3
 8002a3a:	0013      	movs	r3, r2
 8002a3c:	425c      	negs	r4, r3
 8002a3e:	2900      	cmp	r1, #0
 8002a40:	d100      	bne.n	8002a44 <__aeabi_d2iz+0x38>
 8002a42:	001c      	movs	r4, r3
 8002a44:	0020      	movs	r0, r4
 8002a46:	bd30      	pop	{r4, r5, pc}
 8002a48:	4b09      	ldr	r3, [pc, #36]	; (8002a70 <__aeabi_d2iz+0x64>)
 8002a4a:	18cc      	adds	r4, r1, r3
 8002a4c:	e7fa      	b.n	8002a44 <__aeabi_d2iz+0x38>
 8002a4e:	4d09      	ldr	r5, [pc, #36]	; (8002a74 <__aeabi_d2iz+0x68>)
 8002a50:	40e0      	lsrs	r0, r4
 8002a52:	46ac      	mov	ip, r5
 8002a54:	4463      	add	r3, ip
 8002a56:	409a      	lsls	r2, r3
 8002a58:	0013      	movs	r3, r2
 8002a5a:	4303      	orrs	r3, r0
 8002a5c:	e7ee      	b.n	8002a3c <__aeabi_d2iz+0x30>
 8002a5e:	46c0      	nop			; (mov r8, r8)
 8002a60:	000003fe 	.word	0x000003fe
 8002a64:	0000041d 	.word	0x0000041d
 8002a68:	00000433 	.word	0x00000433
 8002a6c:	00000413 	.word	0x00000413
 8002a70:	7fffffff 	.word	0x7fffffff
 8002a74:	fffffbed 	.word	0xfffffbed

08002a78 <__aeabi_i2d>:
 8002a78:	b570      	push	{r4, r5, r6, lr}
 8002a7a:	2800      	cmp	r0, #0
 8002a7c:	d02d      	beq.n	8002ada <__aeabi_i2d+0x62>
 8002a7e:	17c3      	asrs	r3, r0, #31
 8002a80:	18c5      	adds	r5, r0, r3
 8002a82:	405d      	eors	r5, r3
 8002a84:	0fc4      	lsrs	r4, r0, #31
 8002a86:	0028      	movs	r0, r5
 8002a88:	f000 f906 	bl	8002c98 <__clzsi2>
 8002a8c:	4b15      	ldr	r3, [pc, #84]	; (8002ae4 <__aeabi_i2d+0x6c>)
 8002a8e:	1a1b      	subs	r3, r3, r0
 8002a90:	055b      	lsls	r3, r3, #21
 8002a92:	0d5b      	lsrs	r3, r3, #21
 8002a94:	280a      	cmp	r0, #10
 8002a96:	dd15      	ble.n	8002ac4 <__aeabi_i2d+0x4c>
 8002a98:	380b      	subs	r0, #11
 8002a9a:	4085      	lsls	r5, r0
 8002a9c:	2200      	movs	r2, #0
 8002a9e:	032d      	lsls	r5, r5, #12
 8002aa0:	0b2d      	lsrs	r5, r5, #12
 8002aa2:	2100      	movs	r1, #0
 8002aa4:	0010      	movs	r0, r2
 8002aa6:	032d      	lsls	r5, r5, #12
 8002aa8:	0d0a      	lsrs	r2, r1, #20
 8002aaa:	0b2d      	lsrs	r5, r5, #12
 8002aac:	0512      	lsls	r2, r2, #20
 8002aae:	432a      	orrs	r2, r5
 8002ab0:	4d0d      	ldr	r5, [pc, #52]	; (8002ae8 <__aeabi_i2d+0x70>)
 8002ab2:	051b      	lsls	r3, r3, #20
 8002ab4:	402a      	ands	r2, r5
 8002ab6:	4313      	orrs	r3, r2
 8002ab8:	005b      	lsls	r3, r3, #1
 8002aba:	07e4      	lsls	r4, r4, #31
 8002abc:	085b      	lsrs	r3, r3, #1
 8002abe:	4323      	orrs	r3, r4
 8002ac0:	0019      	movs	r1, r3
 8002ac2:	bd70      	pop	{r4, r5, r6, pc}
 8002ac4:	0002      	movs	r2, r0
 8002ac6:	0029      	movs	r1, r5
 8002ac8:	3215      	adds	r2, #21
 8002aca:	4091      	lsls	r1, r2
 8002acc:	000a      	movs	r2, r1
 8002ace:	210b      	movs	r1, #11
 8002ad0:	1a08      	subs	r0, r1, r0
 8002ad2:	40c5      	lsrs	r5, r0
 8002ad4:	032d      	lsls	r5, r5, #12
 8002ad6:	0b2d      	lsrs	r5, r5, #12
 8002ad8:	e7e3      	b.n	8002aa2 <__aeabi_i2d+0x2a>
 8002ada:	2400      	movs	r4, #0
 8002adc:	2300      	movs	r3, #0
 8002ade:	2500      	movs	r5, #0
 8002ae0:	2200      	movs	r2, #0
 8002ae2:	e7de      	b.n	8002aa2 <__aeabi_i2d+0x2a>
 8002ae4:	0000041e 	.word	0x0000041e
 8002ae8:	800fffff 	.word	0x800fffff

08002aec <__aeabi_f2d>:
 8002aec:	0041      	lsls	r1, r0, #1
 8002aee:	0e09      	lsrs	r1, r1, #24
 8002af0:	1c4b      	adds	r3, r1, #1
 8002af2:	b570      	push	{r4, r5, r6, lr}
 8002af4:	b2db      	uxtb	r3, r3
 8002af6:	0246      	lsls	r6, r0, #9
 8002af8:	0a75      	lsrs	r5, r6, #9
 8002afa:	0fc4      	lsrs	r4, r0, #31
 8002afc:	2b01      	cmp	r3, #1
 8002afe:	dd14      	ble.n	8002b2a <__aeabi_f2d+0x3e>
 8002b00:	23e0      	movs	r3, #224	; 0xe0
 8002b02:	009b      	lsls	r3, r3, #2
 8002b04:	076d      	lsls	r5, r5, #29
 8002b06:	0b36      	lsrs	r6, r6, #12
 8002b08:	18cb      	adds	r3, r1, r3
 8002b0a:	2100      	movs	r1, #0
 8002b0c:	0d0a      	lsrs	r2, r1, #20
 8002b0e:	0028      	movs	r0, r5
 8002b10:	0512      	lsls	r2, r2, #20
 8002b12:	4d1c      	ldr	r5, [pc, #112]	; (8002b84 <__aeabi_f2d+0x98>)
 8002b14:	4332      	orrs	r2, r6
 8002b16:	055b      	lsls	r3, r3, #21
 8002b18:	402a      	ands	r2, r5
 8002b1a:	085b      	lsrs	r3, r3, #1
 8002b1c:	4313      	orrs	r3, r2
 8002b1e:	005b      	lsls	r3, r3, #1
 8002b20:	07e4      	lsls	r4, r4, #31
 8002b22:	085b      	lsrs	r3, r3, #1
 8002b24:	4323      	orrs	r3, r4
 8002b26:	0019      	movs	r1, r3
 8002b28:	bd70      	pop	{r4, r5, r6, pc}
 8002b2a:	2900      	cmp	r1, #0
 8002b2c:	d114      	bne.n	8002b58 <__aeabi_f2d+0x6c>
 8002b2e:	2d00      	cmp	r5, #0
 8002b30:	d01e      	beq.n	8002b70 <__aeabi_f2d+0x84>
 8002b32:	0028      	movs	r0, r5
 8002b34:	f000 f8b0 	bl	8002c98 <__clzsi2>
 8002b38:	280a      	cmp	r0, #10
 8002b3a:	dc1c      	bgt.n	8002b76 <__aeabi_f2d+0x8a>
 8002b3c:	230b      	movs	r3, #11
 8002b3e:	002a      	movs	r2, r5
 8002b40:	1a1b      	subs	r3, r3, r0
 8002b42:	40da      	lsrs	r2, r3
 8002b44:	0003      	movs	r3, r0
 8002b46:	3315      	adds	r3, #21
 8002b48:	409d      	lsls	r5, r3
 8002b4a:	4b0f      	ldr	r3, [pc, #60]	; (8002b88 <__aeabi_f2d+0x9c>)
 8002b4c:	0312      	lsls	r2, r2, #12
 8002b4e:	1a1b      	subs	r3, r3, r0
 8002b50:	055b      	lsls	r3, r3, #21
 8002b52:	0b16      	lsrs	r6, r2, #12
 8002b54:	0d5b      	lsrs	r3, r3, #21
 8002b56:	e7d8      	b.n	8002b0a <__aeabi_f2d+0x1e>
 8002b58:	2d00      	cmp	r5, #0
 8002b5a:	d006      	beq.n	8002b6a <__aeabi_f2d+0x7e>
 8002b5c:	0b32      	lsrs	r2, r6, #12
 8002b5e:	2680      	movs	r6, #128	; 0x80
 8002b60:	0336      	lsls	r6, r6, #12
 8002b62:	076d      	lsls	r5, r5, #29
 8002b64:	4316      	orrs	r6, r2
 8002b66:	4b09      	ldr	r3, [pc, #36]	; (8002b8c <__aeabi_f2d+0xa0>)
 8002b68:	e7cf      	b.n	8002b0a <__aeabi_f2d+0x1e>
 8002b6a:	4b08      	ldr	r3, [pc, #32]	; (8002b8c <__aeabi_f2d+0xa0>)
 8002b6c:	2600      	movs	r6, #0
 8002b6e:	e7cc      	b.n	8002b0a <__aeabi_f2d+0x1e>
 8002b70:	2300      	movs	r3, #0
 8002b72:	2600      	movs	r6, #0
 8002b74:	e7c9      	b.n	8002b0a <__aeabi_f2d+0x1e>
 8002b76:	0003      	movs	r3, r0
 8002b78:	002a      	movs	r2, r5
 8002b7a:	3b0b      	subs	r3, #11
 8002b7c:	409a      	lsls	r2, r3
 8002b7e:	2500      	movs	r5, #0
 8002b80:	e7e3      	b.n	8002b4a <__aeabi_f2d+0x5e>
 8002b82:	46c0      	nop			; (mov r8, r8)
 8002b84:	800fffff 	.word	0x800fffff
 8002b88:	00000389 	.word	0x00000389
 8002b8c:	000007ff 	.word	0x000007ff

08002b90 <__aeabi_d2f>:
 8002b90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b92:	004c      	lsls	r4, r1, #1
 8002b94:	0d64      	lsrs	r4, r4, #21
 8002b96:	030b      	lsls	r3, r1, #12
 8002b98:	1c62      	adds	r2, r4, #1
 8002b9a:	0a5b      	lsrs	r3, r3, #9
 8002b9c:	0f46      	lsrs	r6, r0, #29
 8002b9e:	0552      	lsls	r2, r2, #21
 8002ba0:	0fc9      	lsrs	r1, r1, #31
 8002ba2:	431e      	orrs	r6, r3
 8002ba4:	00c5      	lsls	r5, r0, #3
 8002ba6:	0d52      	lsrs	r2, r2, #21
 8002ba8:	2a01      	cmp	r2, #1
 8002baa:	dd29      	ble.n	8002c00 <__aeabi_d2f+0x70>
 8002bac:	4b37      	ldr	r3, [pc, #220]	; (8002c8c <__aeabi_d2f+0xfc>)
 8002bae:	18e7      	adds	r7, r4, r3
 8002bb0:	2ffe      	cmp	r7, #254	; 0xfe
 8002bb2:	dc1c      	bgt.n	8002bee <__aeabi_d2f+0x5e>
 8002bb4:	2f00      	cmp	r7, #0
 8002bb6:	dd3b      	ble.n	8002c30 <__aeabi_d2f+0xa0>
 8002bb8:	0180      	lsls	r0, r0, #6
 8002bba:	1e43      	subs	r3, r0, #1
 8002bbc:	4198      	sbcs	r0, r3
 8002bbe:	2207      	movs	r2, #7
 8002bc0:	00f3      	lsls	r3, r6, #3
 8002bc2:	0f6d      	lsrs	r5, r5, #29
 8002bc4:	4303      	orrs	r3, r0
 8002bc6:	432b      	orrs	r3, r5
 8002bc8:	401a      	ands	r2, r3
 8002bca:	2a00      	cmp	r2, #0
 8002bcc:	d004      	beq.n	8002bd8 <__aeabi_d2f+0x48>
 8002bce:	220f      	movs	r2, #15
 8002bd0:	401a      	ands	r2, r3
 8002bd2:	2a04      	cmp	r2, #4
 8002bd4:	d000      	beq.n	8002bd8 <__aeabi_d2f+0x48>
 8002bd6:	3304      	adds	r3, #4
 8002bd8:	2280      	movs	r2, #128	; 0x80
 8002bda:	04d2      	lsls	r2, r2, #19
 8002bdc:	401a      	ands	r2, r3
 8002bde:	d024      	beq.n	8002c2a <__aeabi_d2f+0x9a>
 8002be0:	3701      	adds	r7, #1
 8002be2:	b2fa      	uxtb	r2, r7
 8002be4:	2fff      	cmp	r7, #255	; 0xff
 8002be6:	d002      	beq.n	8002bee <__aeabi_d2f+0x5e>
 8002be8:	019b      	lsls	r3, r3, #6
 8002bea:	0a58      	lsrs	r0, r3, #9
 8002bec:	e001      	b.n	8002bf2 <__aeabi_d2f+0x62>
 8002bee:	22ff      	movs	r2, #255	; 0xff
 8002bf0:	2000      	movs	r0, #0
 8002bf2:	0240      	lsls	r0, r0, #9
 8002bf4:	05d2      	lsls	r2, r2, #23
 8002bf6:	0a40      	lsrs	r0, r0, #9
 8002bf8:	07c9      	lsls	r1, r1, #31
 8002bfa:	4310      	orrs	r0, r2
 8002bfc:	4308      	orrs	r0, r1
 8002bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c00:	4335      	orrs	r5, r6
 8002c02:	2c00      	cmp	r4, #0
 8002c04:	d104      	bne.n	8002c10 <__aeabi_d2f+0x80>
 8002c06:	2d00      	cmp	r5, #0
 8002c08:	d10a      	bne.n	8002c20 <__aeabi_d2f+0x90>
 8002c0a:	2200      	movs	r2, #0
 8002c0c:	2000      	movs	r0, #0
 8002c0e:	e7f0      	b.n	8002bf2 <__aeabi_d2f+0x62>
 8002c10:	2d00      	cmp	r5, #0
 8002c12:	d0ec      	beq.n	8002bee <__aeabi_d2f+0x5e>
 8002c14:	2080      	movs	r0, #128	; 0x80
 8002c16:	03c0      	lsls	r0, r0, #15
 8002c18:	4330      	orrs	r0, r6
 8002c1a:	22ff      	movs	r2, #255	; 0xff
 8002c1c:	e7e9      	b.n	8002bf2 <__aeabi_d2f+0x62>
 8002c1e:	2400      	movs	r4, #0
 8002c20:	2300      	movs	r3, #0
 8002c22:	025b      	lsls	r3, r3, #9
 8002c24:	0a58      	lsrs	r0, r3, #9
 8002c26:	b2e2      	uxtb	r2, r4
 8002c28:	e7e3      	b.n	8002bf2 <__aeabi_d2f+0x62>
 8002c2a:	08db      	lsrs	r3, r3, #3
 8002c2c:	003c      	movs	r4, r7
 8002c2e:	e7f8      	b.n	8002c22 <__aeabi_d2f+0x92>
 8002c30:	003b      	movs	r3, r7
 8002c32:	3317      	adds	r3, #23
 8002c34:	dbf3      	blt.n	8002c1e <__aeabi_d2f+0x8e>
 8002c36:	2380      	movs	r3, #128	; 0x80
 8002c38:	041b      	lsls	r3, r3, #16
 8002c3a:	4333      	orrs	r3, r6
 8002c3c:	261e      	movs	r6, #30
 8002c3e:	1bf6      	subs	r6, r6, r7
 8002c40:	2e1f      	cmp	r6, #31
 8002c42:	dd14      	ble.n	8002c6e <__aeabi_d2f+0xde>
 8002c44:	2202      	movs	r2, #2
 8002c46:	4252      	negs	r2, r2
 8002c48:	1bd7      	subs	r7, r2, r7
 8002c4a:	001a      	movs	r2, r3
 8002c4c:	40fa      	lsrs	r2, r7
 8002c4e:	0017      	movs	r7, r2
 8002c50:	2e20      	cmp	r6, #32
 8002c52:	d004      	beq.n	8002c5e <__aeabi_d2f+0xce>
 8002c54:	4a0e      	ldr	r2, [pc, #56]	; (8002c90 <__aeabi_d2f+0x100>)
 8002c56:	4694      	mov	ip, r2
 8002c58:	4464      	add	r4, ip
 8002c5a:	40a3      	lsls	r3, r4
 8002c5c:	431d      	orrs	r5, r3
 8002c5e:	002b      	movs	r3, r5
 8002c60:	1e5d      	subs	r5, r3, #1
 8002c62:	41ab      	sbcs	r3, r5
 8002c64:	2207      	movs	r2, #7
 8002c66:	433b      	orrs	r3, r7
 8002c68:	401a      	ands	r2, r3
 8002c6a:	2700      	movs	r7, #0
 8002c6c:	e7ad      	b.n	8002bca <__aeabi_d2f+0x3a>
 8002c6e:	4a09      	ldr	r2, [pc, #36]	; (8002c94 <__aeabi_d2f+0x104>)
 8002c70:	0028      	movs	r0, r5
 8002c72:	18a2      	adds	r2, r4, r2
 8002c74:	4095      	lsls	r5, r2
 8002c76:	4093      	lsls	r3, r2
 8002c78:	1e6c      	subs	r4, r5, #1
 8002c7a:	41a5      	sbcs	r5, r4
 8002c7c:	40f0      	lsrs	r0, r6
 8002c7e:	2207      	movs	r2, #7
 8002c80:	432b      	orrs	r3, r5
 8002c82:	4303      	orrs	r3, r0
 8002c84:	401a      	ands	r2, r3
 8002c86:	2700      	movs	r7, #0
 8002c88:	e79f      	b.n	8002bca <__aeabi_d2f+0x3a>
 8002c8a:	46c0      	nop			; (mov r8, r8)
 8002c8c:	fffffc80 	.word	0xfffffc80
 8002c90:	fffffca2 	.word	0xfffffca2
 8002c94:	fffffc82 	.word	0xfffffc82

08002c98 <__clzsi2>:
 8002c98:	211c      	movs	r1, #28
 8002c9a:	2301      	movs	r3, #1
 8002c9c:	041b      	lsls	r3, r3, #16
 8002c9e:	4298      	cmp	r0, r3
 8002ca0:	d301      	bcc.n	8002ca6 <__clzsi2+0xe>
 8002ca2:	0c00      	lsrs	r0, r0, #16
 8002ca4:	3910      	subs	r1, #16
 8002ca6:	0a1b      	lsrs	r3, r3, #8
 8002ca8:	4298      	cmp	r0, r3
 8002caa:	d301      	bcc.n	8002cb0 <__clzsi2+0x18>
 8002cac:	0a00      	lsrs	r0, r0, #8
 8002cae:	3908      	subs	r1, #8
 8002cb0:	091b      	lsrs	r3, r3, #4
 8002cb2:	4298      	cmp	r0, r3
 8002cb4:	d301      	bcc.n	8002cba <__clzsi2+0x22>
 8002cb6:	0900      	lsrs	r0, r0, #4
 8002cb8:	3904      	subs	r1, #4
 8002cba:	a202      	add	r2, pc, #8	; (adr r2, 8002cc4 <__clzsi2+0x2c>)
 8002cbc:	5c10      	ldrb	r0, [r2, r0]
 8002cbe:	1840      	adds	r0, r0, r1
 8002cc0:	4770      	bx	lr
 8002cc2:	46c0      	nop			; (mov r8, r8)
 8002cc4:	02020304 	.word	0x02020304
 8002cc8:	01010101 	.word	0x01010101
	...

08002cd4 <turnLow>:
  {1, 0, 1, 1}, //channel 13
  {0, 1, 1, 1}, //channel 14
  {1, 1, 1, 1} //channel 15
};

void turnLow() {
 8002cd4:	b580      	push	{r7, lr}
 8002cd6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1 | GPIO_PIN_0 | GPIO_PIN_10 | GPIO_PIN_2, GPIO_PIN_RESET);
 8002cd8:	4904      	ldr	r1, [pc, #16]	; (8002cec <turnLow+0x18>)
 8002cda:	2390      	movs	r3, #144	; 0x90
 8002cdc:	05db      	lsls	r3, r3, #23
 8002cde:	2200      	movs	r2, #0
 8002ce0:	0018      	movs	r0, r3
 8002ce2:	f000 fecc 	bl	8003a7e <HAL_GPIO_WritePin>
}
 8002ce6:	46c0      	nop			; (mov r8, r8)
 8002ce8:	46bd      	mov	sp, r7
 8002cea:	bd80      	pop	{r7, pc}
 8002cec:	00000407 	.word	0x00000407

08002cf0 <readMux>:

uint8_t readMux(int mux, int channel) {
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b082      	sub	sp, #8
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
 8002cf8:	6039      	str	r1, [r7, #0]
  turnLow();
 8002cfa:	f7ff ffeb 	bl	8002cd4 <turnLow>
  if(muxChannel[channel][0])
 8002cfe:	4b3e      	ldr	r3, [pc, #248]	; (8002df8 <readMux+0x108>)
 8002d00:	683a      	ldr	r2, [r7, #0]
 8002d02:	0092      	lsls	r2, r2, #2
 8002d04:	5cd3      	ldrb	r3, [r2, r3]
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d007      	beq.n	8002d1a <readMux+0x2a>
	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 8002d0a:	2390      	movs	r3, #144	; 0x90
 8002d0c:	05db      	lsls	r3, r3, #23
 8002d0e:	2201      	movs	r2, #1
 8002d10:	2102      	movs	r1, #2
 8002d12:	0018      	movs	r0, r3
 8002d14:	f000 feb3 	bl	8003a7e <HAL_GPIO_WritePin>
 8002d18:	e006      	b.n	8002d28 <readMux+0x38>
  else
	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 8002d1a:	2390      	movs	r3, #144	; 0x90
 8002d1c:	05db      	lsls	r3, r3, #23
 8002d1e:	2200      	movs	r2, #0
 8002d20:	2102      	movs	r1, #2
 8002d22:	0018      	movs	r0, r3
 8002d24:	f000 feab 	bl	8003a7e <HAL_GPIO_WritePin>
  if(muxChannel[channel][1])
 8002d28:	4a33      	ldr	r2, [pc, #204]	; (8002df8 <readMux+0x108>)
 8002d2a:	683b      	ldr	r3, [r7, #0]
 8002d2c:	009b      	lsls	r3, r3, #2
 8002d2e:	18d3      	adds	r3, r2, r3
 8002d30:	3301      	adds	r3, #1
 8002d32:	781b      	ldrb	r3, [r3, #0]
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d007      	beq.n	8002d48 <readMux+0x58>
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 8002d38:	2390      	movs	r3, #144	; 0x90
 8002d3a:	05db      	lsls	r3, r3, #23
 8002d3c:	2201      	movs	r2, #1
 8002d3e:	2101      	movs	r1, #1
 8002d40:	0018      	movs	r0, r3
 8002d42:	f000 fe9c 	bl	8003a7e <HAL_GPIO_WritePin>
 8002d46:	e006      	b.n	8002d56 <readMux+0x66>
  else
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 8002d48:	2390      	movs	r3, #144	; 0x90
 8002d4a:	05db      	lsls	r3, r3, #23
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	2101      	movs	r1, #1
 8002d50:	0018      	movs	r0, r3
 8002d52:	f000 fe94 	bl	8003a7e <HAL_GPIO_WritePin>
  if(muxChannel[channel][2])
 8002d56:	4a28      	ldr	r2, [pc, #160]	; (8002df8 <readMux+0x108>)
 8002d58:	683b      	ldr	r3, [r7, #0]
 8002d5a:	009b      	lsls	r3, r3, #2
 8002d5c:	18d3      	adds	r3, r2, r3
 8002d5e:	3302      	adds	r3, #2
 8002d60:	781b      	ldrb	r3, [r3, #0]
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	d008      	beq.n	8002d78 <readMux+0x88>
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_SET);
 8002d66:	2380      	movs	r3, #128	; 0x80
 8002d68:	00d9      	lsls	r1, r3, #3
 8002d6a:	2390      	movs	r3, #144	; 0x90
 8002d6c:	05db      	lsls	r3, r3, #23
 8002d6e:	2201      	movs	r2, #1
 8002d70:	0018      	movs	r0, r3
 8002d72:	f000 fe84 	bl	8003a7e <HAL_GPIO_WritePin>
 8002d76:	e007      	b.n	8002d88 <readMux+0x98>
  else
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 8002d78:	2380      	movs	r3, #128	; 0x80
 8002d7a:	00d9      	lsls	r1, r3, #3
 8002d7c:	2390      	movs	r3, #144	; 0x90
 8002d7e:	05db      	lsls	r3, r3, #23
 8002d80:	2200      	movs	r2, #0
 8002d82:	0018      	movs	r0, r3
 8002d84:	f000 fe7b 	bl	8003a7e <HAL_GPIO_WritePin>
  if(muxChannel[channel][3])
 8002d88:	4a1b      	ldr	r2, [pc, #108]	; (8002df8 <readMux+0x108>)
 8002d8a:	683b      	ldr	r3, [r7, #0]
 8002d8c:	009b      	lsls	r3, r3, #2
 8002d8e:	18d3      	adds	r3, r2, r3
 8002d90:	3303      	adds	r3, #3
 8002d92:	781b      	ldrb	r3, [r3, #0]
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d007      	beq.n	8002da8 <readMux+0xb8>
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 8002d98:	2390      	movs	r3, #144	; 0x90
 8002d9a:	05db      	lsls	r3, r3, #23
 8002d9c:	2201      	movs	r2, #1
 8002d9e:	2104      	movs	r1, #4
 8002da0:	0018      	movs	r0, r3
 8002da2:	f000 fe6c 	bl	8003a7e <HAL_GPIO_WritePin>
 8002da6:	e006      	b.n	8002db6 <readMux+0xc6>
  else
  	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);
 8002da8:	2390      	movs	r3, #144	; 0x90
 8002daa:	05db      	lsls	r3, r3, #23
 8002dac:	2200      	movs	r2, #0
 8002dae:	2104      	movs	r1, #4
 8002db0:	0018      	movs	r0, r3
 8002db2:	f000 fe64 	bl	8003a7e <HAL_GPIO_WritePin>

  //return the value
  if (mux == 1)
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	2b01      	cmp	r3, #1
 8002dba:	d10b      	bne.n	8002dd4 <readMux+0xe4>
  {
	  if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_1) == GPIO_PIN_SET) {
 8002dbc:	4b0f      	ldr	r3, [pc, #60]	; (8002dfc <readMux+0x10c>)
 8002dbe:	2102      	movs	r1, #2
 8002dc0:	0018      	movs	r0, r3
 8002dc2:	f000 fe3f 	bl	8003a44 <HAL_GPIO_ReadPin>
 8002dc6:	0003      	movs	r3, r0
 8002dc8:	2b01      	cmp	r3, #1
 8002dca:	d101      	bne.n	8002dd0 <readMux+0xe0>
	      return 1;
 8002dcc:	2301      	movs	r3, #1
 8002dce:	e00f      	b.n	8002df0 <readMux+0x100>
	  }
	  else {
	      return 0;
 8002dd0:	2300      	movs	r3, #0
 8002dd2:	e00d      	b.n	8002df0 <readMux+0x100>
	  }
  }
  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_SET) {
 8002dd4:	2380      	movs	r3, #128	; 0x80
 8002dd6:	009a      	lsls	r2, r3, #2
 8002dd8:	2390      	movs	r3, #144	; 0x90
 8002dda:	05db      	lsls	r3, r3, #23
 8002ddc:	0011      	movs	r1, r2
 8002dde:	0018      	movs	r0, r3
 8002de0:	f000 fe30 	bl	8003a44 <HAL_GPIO_ReadPin>
 8002de4:	0003      	movs	r3, r0
 8002de6:	2b01      	cmp	r3, #1
 8002de8:	d101      	bne.n	8002dee <readMux+0xfe>
      return 1;
 8002dea:	2301      	movs	r3, #1
 8002dec:	e000      	b.n	8002df0 <readMux+0x100>
  }
  else {
      return 0;
 8002dee:	2300      	movs	r3, #0
  }
}
 8002df0:	0018      	movs	r0, r3
 8002df2:	46bd      	mov	sp, r7
 8002df4:	b002      	add	sp, #8
 8002df6:	bd80      	pop	{r7, pc}
 8002df8:	20000000 	.word	0x20000000
 8002dfc:	48000400 	.word	0x48000400

08002e00 <toRadians>:

double toRadians(double degs) {
 8002e00:	b590      	push	{r4, r7, lr}
 8002e02:	b083      	sub	sp, #12
 8002e04:	af00      	add	r7, sp, #0
 8002e06:	6038      	str	r0, [r7, #0]
 8002e08:	6079      	str	r1, [r7, #4]
  return degs * 3.1415926553 / 180;
 8002e0a:	4a0a      	ldr	r2, [pc, #40]	; (8002e34 <toRadians+0x34>)
 8002e0c:	4b0a      	ldr	r3, [pc, #40]	; (8002e38 <toRadians+0x38>)
 8002e0e:	6838      	ldr	r0, [r7, #0]
 8002e10:	6879      	ldr	r1, [r7, #4]
 8002e12:	f7ff f825 	bl	8001e60 <__aeabi_dmul>
 8002e16:	0003      	movs	r3, r0
 8002e18:	000c      	movs	r4, r1
 8002e1a:	0018      	movs	r0, r3
 8002e1c:	0021      	movs	r1, r4
 8002e1e:	2200      	movs	r2, #0
 8002e20:	4b06      	ldr	r3, [pc, #24]	; (8002e3c <toRadians+0x3c>)
 8002e22:	f7fe fc13 	bl	800164c <__aeabi_ddiv>
 8002e26:	0003      	movs	r3, r0
 8002e28:	000c      	movs	r4, r1
}
 8002e2a:	0018      	movs	r0, r3
 8002e2c:	0021      	movs	r1, r4
 8002e2e:	46bd      	mov	sp, r7
 8002e30:	b003      	add	sp, #12
 8002e32:	bd90      	pop	{r4, r7, pc}
 8002e34:	547ef03c 	.word	0x547ef03c
 8002e38:	400921fb 	.word	0x400921fb
 8002e3c:	40668000 	.word	0x40668000

08002e40 <getAngle>:

float getAngle(float x, float y) {
 8002e40:	b5b0      	push	{r4, r5, r7, lr}
 8002e42:	b084      	sub	sp, #16
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	6039      	str	r1, [r7, #0]
  float angle = atan2(x, y) * 57.2928;
 8002e4a:	6878      	ldr	r0, [r7, #4]
 8002e4c:	f7ff fe4e 	bl	8002aec <__aeabi_f2d>
 8002e50:	0004      	movs	r4, r0
 8002e52:	000d      	movs	r5, r1
 8002e54:	6838      	ldr	r0, [r7, #0]
 8002e56:	f7ff fe49 	bl	8002aec <__aeabi_f2d>
 8002e5a:	0002      	movs	r2, r0
 8002e5c:	000b      	movs	r3, r1
 8002e5e:	0020      	movs	r0, r4
 8002e60:	0029      	movs	r1, r5
 8002e62:	f001 ff0b 	bl	8004c7c <atan2>
 8002e66:	4a0e      	ldr	r2, [pc, #56]	; (8002ea0 <getAngle+0x60>)
 8002e68:	4b0e      	ldr	r3, [pc, #56]	; (8002ea4 <getAngle+0x64>)
 8002e6a:	f7fe fff9 	bl	8001e60 <__aeabi_dmul>
 8002e6e:	0003      	movs	r3, r0
 8002e70:	000c      	movs	r4, r1
 8002e72:	0018      	movs	r0, r3
 8002e74:	0021      	movs	r1, r4
 8002e76:	f7ff fe8b 	bl	8002b90 <__aeabi_d2f>
 8002e7a:	1c03      	adds	r3, r0, #0
 8002e7c:	60fb      	str	r3, [r7, #12]
  if (angle < 0)
 8002e7e:	2100      	movs	r1, #0
 8002e80:	68f8      	ldr	r0, [r7, #12]
 8002e82:	f7fd fb11 	bl	80004a8 <__aeabi_fcmplt>
 8002e86:	1e03      	subs	r3, r0, #0
 8002e88:	d005      	beq.n	8002e96 <getAngle+0x56>
    angle = 360 + angle;
 8002e8a:	4907      	ldr	r1, [pc, #28]	; (8002ea8 <getAngle+0x68>)
 8002e8c:	68f8      	ldr	r0, [r7, #12]
 8002e8e:	f7fd fb4b 	bl	8000528 <__aeabi_fadd>
 8002e92:	1c03      	adds	r3, r0, #0
 8002e94:	60fb      	str	r3, [r7, #12]
  return angle;
 8002e96:	68fb      	ldr	r3, [r7, #12]
}
 8002e98:	1c18      	adds	r0, r3, #0
 8002e9a:	46bd      	mov	sp, r7
 8002e9c:	b004      	add	sp, #16
 8002e9e:	bdb0      	pop	{r4, r5, r7, pc}
 8002ea0:	786c2268 	.word	0x786c2268
 8002ea4:	404ca57a 	.word	0x404ca57a
 8002ea8:	43b40000 	.word	0x43b40000

08002eac <getX>:

float getX(int tsop_results[]) {
 8002eac:	b5b0      	push	{r4, r5, r7, lr}
 8002eae:	b084      	sub	sp, #16
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	6078      	str	r0, [r7, #4]
  float x = 0;
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	60fb      	str	r3, [r7, #12]
  for (int i = 0; i < 32; ++i)
 8002eb8:	2300      	movs	r3, #0
 8002eba:	60bb      	str	r3, [r7, #8]
 8002ebc:	e03a      	b.n	8002f34 <getX+0x88>
    x += sin(toRadians(11.25 * i)) * tsop_results[i];
 8002ebe:	68b8      	ldr	r0, [r7, #8]
 8002ec0:	f7ff fdda 	bl	8002a78 <__aeabi_i2d>
 8002ec4:	2200      	movs	r2, #0
 8002ec6:	4b1f      	ldr	r3, [pc, #124]	; (8002f44 <getX+0x98>)
 8002ec8:	f7fe ffca 	bl	8001e60 <__aeabi_dmul>
 8002ecc:	0003      	movs	r3, r0
 8002ece:	000c      	movs	r4, r1
 8002ed0:	0018      	movs	r0, r3
 8002ed2:	0021      	movs	r1, r4
 8002ed4:	f7ff ff94 	bl	8002e00 <toRadians>
 8002ed8:	0003      	movs	r3, r0
 8002eda:	000c      	movs	r4, r1
 8002edc:	0018      	movs	r0, r3
 8002ede:	0021      	movs	r1, r4
 8002ee0:	f001 fe86 	bl	8004bf0 <sin>
 8002ee4:	0004      	movs	r4, r0
 8002ee6:	000d      	movs	r5, r1
 8002ee8:	68bb      	ldr	r3, [r7, #8]
 8002eea:	009b      	lsls	r3, r3, #2
 8002eec:	687a      	ldr	r2, [r7, #4]
 8002eee:	18d3      	adds	r3, r2, r3
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	0018      	movs	r0, r3
 8002ef4:	f7ff fdc0 	bl	8002a78 <__aeabi_i2d>
 8002ef8:	0002      	movs	r2, r0
 8002efa:	000b      	movs	r3, r1
 8002efc:	0020      	movs	r0, r4
 8002efe:	0029      	movs	r1, r5
 8002f00:	f7fe ffae 	bl	8001e60 <__aeabi_dmul>
 8002f04:	0003      	movs	r3, r0
 8002f06:	000c      	movs	r4, r1
 8002f08:	0025      	movs	r5, r4
 8002f0a:	001c      	movs	r4, r3
 8002f0c:	68f8      	ldr	r0, [r7, #12]
 8002f0e:	f7ff fded 	bl	8002aec <__aeabi_f2d>
 8002f12:	0002      	movs	r2, r0
 8002f14:	000b      	movs	r3, r1
 8002f16:	0020      	movs	r0, r4
 8002f18:	0029      	movs	r1, r5
 8002f1a:	f7fe f87b 	bl	8001014 <__aeabi_dadd>
 8002f1e:	0003      	movs	r3, r0
 8002f20:	000c      	movs	r4, r1
 8002f22:	0018      	movs	r0, r3
 8002f24:	0021      	movs	r1, r4
 8002f26:	f7ff fe33 	bl	8002b90 <__aeabi_d2f>
 8002f2a:	1c03      	adds	r3, r0, #0
 8002f2c:	60fb      	str	r3, [r7, #12]
  for (int i = 0; i < 32; ++i)
 8002f2e:	68bb      	ldr	r3, [r7, #8]
 8002f30:	3301      	adds	r3, #1
 8002f32:	60bb      	str	r3, [r7, #8]
 8002f34:	68bb      	ldr	r3, [r7, #8]
 8002f36:	2b1f      	cmp	r3, #31
 8002f38:	ddc1      	ble.n	8002ebe <getX+0x12>
  return x;
 8002f3a:	68fb      	ldr	r3, [r7, #12]
}
 8002f3c:	1c18      	adds	r0, r3, #0
 8002f3e:	46bd      	mov	sp, r7
 8002f40:	b004      	add	sp, #16
 8002f42:	bdb0      	pop	{r4, r5, r7, pc}
 8002f44:	40268000 	.word	0x40268000

08002f48 <getY>:

float getY(int tsop_results[]) {
 8002f48:	b5b0      	push	{r4, r5, r7, lr}
 8002f4a:	b084      	sub	sp, #16
 8002f4c:	af00      	add	r7, sp, #0
 8002f4e:	6078      	str	r0, [r7, #4]
  float y = 0;
 8002f50:	2300      	movs	r3, #0
 8002f52:	60fb      	str	r3, [r7, #12]
  for (int i = 0; i < 32; ++i)
 8002f54:	2300      	movs	r3, #0
 8002f56:	60bb      	str	r3, [r7, #8]
 8002f58:	e03a      	b.n	8002fd0 <getY+0x88>
    y += cos(toRadians(11.25 * i)) * tsop_results[i];
 8002f5a:	68b8      	ldr	r0, [r7, #8]
 8002f5c:	f7ff fd8c 	bl	8002a78 <__aeabi_i2d>
 8002f60:	2200      	movs	r2, #0
 8002f62:	4b1f      	ldr	r3, [pc, #124]	; (8002fe0 <getY+0x98>)
 8002f64:	f7fe ff7c 	bl	8001e60 <__aeabi_dmul>
 8002f68:	0003      	movs	r3, r0
 8002f6a:	000c      	movs	r4, r1
 8002f6c:	0018      	movs	r0, r3
 8002f6e:	0021      	movs	r1, r4
 8002f70:	f7ff ff46 	bl	8002e00 <toRadians>
 8002f74:	0003      	movs	r3, r0
 8002f76:	000c      	movs	r4, r1
 8002f78:	0018      	movs	r0, r3
 8002f7a:	0021      	movs	r1, r4
 8002f7c:	f001 fdf6 	bl	8004b6c <cos>
 8002f80:	0004      	movs	r4, r0
 8002f82:	000d      	movs	r5, r1
 8002f84:	68bb      	ldr	r3, [r7, #8]
 8002f86:	009b      	lsls	r3, r3, #2
 8002f88:	687a      	ldr	r2, [r7, #4]
 8002f8a:	18d3      	adds	r3, r2, r3
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	0018      	movs	r0, r3
 8002f90:	f7ff fd72 	bl	8002a78 <__aeabi_i2d>
 8002f94:	0002      	movs	r2, r0
 8002f96:	000b      	movs	r3, r1
 8002f98:	0020      	movs	r0, r4
 8002f9a:	0029      	movs	r1, r5
 8002f9c:	f7fe ff60 	bl	8001e60 <__aeabi_dmul>
 8002fa0:	0003      	movs	r3, r0
 8002fa2:	000c      	movs	r4, r1
 8002fa4:	0025      	movs	r5, r4
 8002fa6:	001c      	movs	r4, r3
 8002fa8:	68f8      	ldr	r0, [r7, #12]
 8002faa:	f7ff fd9f 	bl	8002aec <__aeabi_f2d>
 8002fae:	0002      	movs	r2, r0
 8002fb0:	000b      	movs	r3, r1
 8002fb2:	0020      	movs	r0, r4
 8002fb4:	0029      	movs	r1, r5
 8002fb6:	f7fe f82d 	bl	8001014 <__aeabi_dadd>
 8002fba:	0003      	movs	r3, r0
 8002fbc:	000c      	movs	r4, r1
 8002fbe:	0018      	movs	r0, r3
 8002fc0:	0021      	movs	r1, r4
 8002fc2:	f7ff fde5 	bl	8002b90 <__aeabi_d2f>
 8002fc6:	1c03      	adds	r3, r0, #0
 8002fc8:	60fb      	str	r3, [r7, #12]
  for (int i = 0; i < 32; ++i)
 8002fca:	68bb      	ldr	r3, [r7, #8]
 8002fcc:	3301      	adds	r3, #1
 8002fce:	60bb      	str	r3, [r7, #8]
 8002fd0:	68bb      	ldr	r3, [r7, #8]
 8002fd2:	2b1f      	cmp	r3, #31
 8002fd4:	ddc1      	ble.n	8002f5a <getY+0x12>
  return y;
 8002fd6:	68fb      	ldr	r3, [r7, #12]
}
 8002fd8:	1c18      	adds	r0, r3, #0
 8002fda:	46bd      	mov	sp, r7
 8002fdc:	b004      	add	sp, #16
 8002fde:	bdb0      	pop	{r4, r5, r7, pc}
 8002fe0:	40268000 	.word	0x40268000

08002fe4 <getDist>:

float getDist(float x, float y) {
 8002fe4:	b590      	push	{r4, r7, lr}
 8002fe6:	b083      	sub	sp, #12
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	6078      	str	r0, [r7, #4]
 8002fec:	6039      	str	r1, [r7, #0]
	if(x * x + y * y > 0)
 8002fee:	6879      	ldr	r1, [r7, #4]
 8002ff0:	6878      	ldr	r0, [r7, #4]
 8002ff2:	f7fd fcf9 	bl	80009e8 <__aeabi_fmul>
 8002ff6:	1c03      	adds	r3, r0, #0
 8002ff8:	1c1c      	adds	r4, r3, #0
 8002ffa:	6839      	ldr	r1, [r7, #0]
 8002ffc:	6838      	ldr	r0, [r7, #0]
 8002ffe:	f7fd fcf3 	bl	80009e8 <__aeabi_fmul>
 8003002:	1c03      	adds	r3, r0, #0
 8003004:	1c19      	adds	r1, r3, #0
 8003006:	1c20      	adds	r0, r4, #0
 8003008:	f7fd fa8e 	bl	8000528 <__aeabi_fadd>
 800300c:	1c03      	adds	r3, r0, #0
 800300e:	2100      	movs	r1, #0
 8003010:	1c18      	adds	r0, r3, #0
 8003012:	f7fd fa5d 	bl	80004d0 <__aeabi_fcmpgt>
 8003016:	1e03      	subs	r3, r0, #0
 8003018:	d020      	beq.n	800305c <getDist+0x78>
		return sqrt(x * x + y * y);
 800301a:	6879      	ldr	r1, [r7, #4]
 800301c:	6878      	ldr	r0, [r7, #4]
 800301e:	f7fd fce3 	bl	80009e8 <__aeabi_fmul>
 8003022:	1c03      	adds	r3, r0, #0
 8003024:	1c1c      	adds	r4, r3, #0
 8003026:	6839      	ldr	r1, [r7, #0]
 8003028:	6838      	ldr	r0, [r7, #0]
 800302a:	f7fd fcdd 	bl	80009e8 <__aeabi_fmul>
 800302e:	1c03      	adds	r3, r0, #0
 8003030:	1c19      	adds	r1, r3, #0
 8003032:	1c20      	adds	r0, r4, #0
 8003034:	f7fd fa78 	bl	8000528 <__aeabi_fadd>
 8003038:	1c03      	adds	r3, r0, #0
 800303a:	1c18      	adds	r0, r3, #0
 800303c:	f7ff fd56 	bl	8002aec <__aeabi_f2d>
 8003040:	0003      	movs	r3, r0
 8003042:	000c      	movs	r4, r1
 8003044:	0018      	movs	r0, r3
 8003046:	0021      	movs	r1, r4
 8003048:	f001 fe1c 	bl	8004c84 <sqrt>
 800304c:	0003      	movs	r3, r0
 800304e:	000c      	movs	r4, r1
 8003050:	0018      	movs	r0, r3
 8003052:	0021      	movs	r1, r4
 8003054:	f7ff fd9c 	bl	8002b90 <__aeabi_d2f>
 8003058:	1c03      	adds	r3, r0, #0
 800305a:	e023      	b.n	80030a4 <getDist+0xc0>
	return sqrt(-(x * x + y * y));
 800305c:	6879      	ldr	r1, [r7, #4]
 800305e:	6878      	ldr	r0, [r7, #4]
 8003060:	f7fd fcc2 	bl	80009e8 <__aeabi_fmul>
 8003064:	1c03      	adds	r3, r0, #0
 8003066:	1c1c      	adds	r4, r3, #0
 8003068:	6839      	ldr	r1, [r7, #0]
 800306a:	6838      	ldr	r0, [r7, #0]
 800306c:	f7fd fcbc 	bl	80009e8 <__aeabi_fmul>
 8003070:	1c03      	adds	r3, r0, #0
 8003072:	1c19      	adds	r1, r3, #0
 8003074:	1c20      	adds	r0, r4, #0
 8003076:	f7fd fa57 	bl	8000528 <__aeabi_fadd>
 800307a:	1c03      	adds	r3, r0, #0
 800307c:	1c1a      	adds	r2, r3, #0
 800307e:	2380      	movs	r3, #128	; 0x80
 8003080:	061b      	lsls	r3, r3, #24
 8003082:	4053      	eors	r3, r2
 8003084:	1c18      	adds	r0, r3, #0
 8003086:	f7ff fd31 	bl	8002aec <__aeabi_f2d>
 800308a:	0003      	movs	r3, r0
 800308c:	000c      	movs	r4, r1
 800308e:	0018      	movs	r0, r3
 8003090:	0021      	movs	r1, r4
 8003092:	f001 fdf7 	bl	8004c84 <sqrt>
 8003096:	0003      	movs	r3, r0
 8003098:	000c      	movs	r4, r1
 800309a:	0018      	movs	r0, r3
 800309c:	0021      	movs	r1, r4
 800309e:	f7ff fd77 	bl	8002b90 <__aeabi_d2f>
 80030a2:	1c03      	adds	r3, r0, #0
}
 80030a4:	1c18      	adds	r0, r3, #0
 80030a6:	46bd      	mov	sp, r7
 80030a8:	b003      	add	sp, #12
 80030aa:	bd90      	pop	{r4, r7, pc}

080030ac <main>:

int main(void)
{
 80030ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030ae:	b0a5      	sub	sp, #148	; 0x94
 80030b0:	af00      	add	r7, sp, #0

	int data[32];

	uint8_t dataToSend[2];

	uint8_t ang = 0, distance = 0;
 80030b2:	2387      	movs	r3, #135	; 0x87
 80030b4:	18fb      	adds	r3, r7, r3
 80030b6:	2200      	movs	r2, #0
 80030b8:	701a      	strb	r2, [r3, #0]
 80030ba:	2386      	movs	r3, #134	; 0x86
 80030bc:	18fb      	adds	r3, r7, r3
 80030be:	2200      	movs	r2, #0
 80030c0:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80030c2:	f000 fa3f 	bl	8003544 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80030c6:	f000 f877 	bl	80031b8 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */
  MX_GPIO_Init();
 80030ca:	f000 f8ef 	bl	80032ac <MX_GPIO_Init>
  MX_SPI1_Init();
 80030ce:	f000 f8b3 	bl	8003238 <MX_SPI1_Init>
  /* USER CODE END 2 */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	for(int mux = 1; mux < 3; ++mux)
 80030d2:	2301      	movs	r3, #1
 80030d4:	228c      	movs	r2, #140	; 0x8c
 80030d6:	18ba      	adds	r2, r7, r2
 80030d8:	6013      	str	r3, [r2, #0]
 80030da:	e02a      	b.n	8003132 <main+0x86>
		for(int i = 0; i < 16; ++i)
 80030dc:	2300      	movs	r3, #0
 80030de:	2288      	movs	r2, #136	; 0x88
 80030e0:	18ba      	adds	r2, r7, r2
 80030e2:	6013      	str	r3, [r2, #0]
 80030e4:	e01a      	b.n	800311c <main+0x70>
			data[i + (mux-1)*16] = readMux(mux, i);
 80030e6:	2488      	movs	r4, #136	; 0x88
 80030e8:	193b      	adds	r3, r7, r4
 80030ea:	681a      	ldr	r2, [r3, #0]
 80030ec:	258c      	movs	r5, #140	; 0x8c
 80030ee:	197b      	adds	r3, r7, r5
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	0011      	movs	r1, r2
 80030f4:	0018      	movs	r0, r3
 80030f6:	f7ff fdfb 	bl	8002cf0 <readMux>
 80030fa:	0003      	movs	r3, r0
 80030fc:	0019      	movs	r1, r3
 80030fe:	197b      	adds	r3, r7, r5
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	3b01      	subs	r3, #1
 8003104:	011a      	lsls	r2, r3, #4
 8003106:	193b      	adds	r3, r7, r4
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	18d2      	adds	r2, r2, r3
 800310c:	1d3b      	adds	r3, r7, #4
 800310e:	0092      	lsls	r2, r2, #2
 8003110:	50d1      	str	r1, [r2, r3]
		for(int i = 0; i < 16; ++i)
 8003112:	193b      	adds	r3, r7, r4
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	3301      	adds	r3, #1
 8003118:	193a      	adds	r2, r7, r4
 800311a:	6013      	str	r3, [r2, #0]
 800311c:	2388      	movs	r3, #136	; 0x88
 800311e:	18fb      	adds	r3, r7, r3
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	2b0f      	cmp	r3, #15
 8003124:	dddf      	ble.n	80030e6 <main+0x3a>
	for(int mux = 1; mux < 3; ++mux)
 8003126:	228c      	movs	r2, #140	; 0x8c
 8003128:	18bb      	adds	r3, r7, r2
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	3301      	adds	r3, #1
 800312e:	18ba      	adds	r2, r7, r2
 8003130:	6013      	str	r3, [r2, #0]
 8003132:	238c      	movs	r3, #140	; 0x8c
 8003134:	18fb      	adds	r3, r7, r3
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	2b02      	cmp	r3, #2
 800313a:	ddcf      	ble.n	80030dc <main+0x30>

	ang = (uint8_t)getAngle(getX(data), getY(data));
 800313c:	1d3b      	adds	r3, r7, #4
 800313e:	0018      	movs	r0, r3
 8003140:	f7ff feb4 	bl	8002eac <getX>
 8003144:	1c04      	adds	r4, r0, #0
 8003146:	1d3b      	adds	r3, r7, #4
 8003148:	0018      	movs	r0, r3
 800314a:	f7ff fefd 	bl	8002f48 <getY>
 800314e:	1c03      	adds	r3, r0, #0
 8003150:	1c19      	adds	r1, r3, #0
 8003152:	1c20      	adds	r0, r4, #0
 8003154:	f7ff fe74 	bl	8002e40 <getAngle>
 8003158:	1c03      	adds	r3, r0, #0
 800315a:	2587      	movs	r5, #135	; 0x87
 800315c:	197c      	adds	r4, r7, r5
 800315e:	1c18      	adds	r0, r3, #0
 8003160:	f7fd f9ca 	bl	80004f8 <__aeabi_f2uiz>
 8003164:	0003      	movs	r3, r0
 8003166:	7023      	strb	r3, [r4, #0]
	distance = (uint8_t)getDist(getX(data), getY(data));
 8003168:	1d3b      	adds	r3, r7, #4
 800316a:	0018      	movs	r0, r3
 800316c:	f7ff fe9e 	bl	8002eac <getX>
 8003170:	1c04      	adds	r4, r0, #0
 8003172:	1d3b      	adds	r3, r7, #4
 8003174:	0018      	movs	r0, r3
 8003176:	f7ff fee7 	bl	8002f48 <getY>
 800317a:	1c03      	adds	r3, r0, #0
 800317c:	1c19      	adds	r1, r3, #0
 800317e:	1c20      	adds	r0, r4, #0
 8003180:	f7ff ff30 	bl	8002fe4 <getDist>
 8003184:	1c03      	adds	r3, r0, #0
 8003186:	2686      	movs	r6, #134	; 0x86
 8003188:	19bc      	adds	r4, r7, r6
 800318a:	1c18      	adds	r0, r3, #0
 800318c:	f7fd f9b4 	bl	80004f8 <__aeabi_f2uiz>
 8003190:	0003      	movs	r3, r0
 8003192:	7023      	strb	r3, [r4, #0]

	dataToSend[0] = ang;
 8003194:	003b      	movs	r3, r7
 8003196:	197a      	adds	r2, r7, r5
 8003198:	7812      	ldrb	r2, [r2, #0]
 800319a:	701a      	strb	r2, [r3, #0]
    dataToSend[1] = distance;
 800319c:	003b      	movs	r3, r7
 800319e:	19ba      	adds	r2, r7, r6
 80031a0:	7812      	ldrb	r2, [r2, #0]
 80031a2:	705a      	strb	r2, [r3, #1]

	HAL_SPI_Transmit(&hspi1, dataToSend, 8, 110);
 80031a4:	0039      	movs	r1, r7
 80031a6:	4803      	ldr	r0, [pc, #12]	; (80031b4 <main+0x108>)
 80031a8:	236e      	movs	r3, #110	; 0x6e
 80031aa:	2208      	movs	r2, #8
 80031ac:	f001 fa1c 	bl	80045e8 <HAL_SPI_Transmit>
	for(int mux = 1; mux < 3; ++mux)
 80031b0:	e78f      	b.n	80030d2 <main+0x26>
 80031b2:	46c0      	nop			; (mov r8, r8)
 80031b4:	200000cc 	.word	0x200000cc

080031b8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80031b8:	b590      	push	{r4, r7, lr}
 80031ba:	b093      	sub	sp, #76	; 0x4c
 80031bc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80031be:	2414      	movs	r4, #20
 80031c0:	193b      	adds	r3, r7, r4
 80031c2:	0018      	movs	r0, r3
 80031c4:	2334      	movs	r3, #52	; 0x34
 80031c6:	001a      	movs	r2, r3
 80031c8:	2100      	movs	r1, #0
 80031ca:	f003 f875 	bl	80062b8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80031ce:	1d3b      	adds	r3, r7, #4
 80031d0:	0018      	movs	r0, r3
 80031d2:	2310      	movs	r3, #16
 80031d4:	001a      	movs	r2, r3
 80031d6:	2100      	movs	r1, #0
 80031d8:	f003 f86e 	bl	80062b8 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80031dc:	0021      	movs	r1, r4
 80031de:	187b      	adds	r3, r7, r1
 80031e0:	2202      	movs	r2, #2
 80031e2:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80031e4:	187b      	adds	r3, r7, r1
 80031e6:	2201      	movs	r2, #1
 80031e8:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80031ea:	187b      	adds	r3, r7, r1
 80031ec:	2210      	movs	r2, #16
 80031ee:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80031f0:	187b      	adds	r3, r7, r1
 80031f2:	2200      	movs	r2, #0
 80031f4:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80031f6:	187b      	adds	r3, r7, r1
 80031f8:	0018      	movs	r0, r3
 80031fa:	f000 fc5d 	bl	8003ab8 <HAL_RCC_OscConfig>
 80031fe:	1e03      	subs	r3, r0, #0
 8003200:	d001      	beq.n	8003206 <SystemClock_Config+0x4e>
  {
    Error_Handler();
 8003202:	f000 f8cd 	bl	80033a0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003206:	1d3b      	adds	r3, r7, #4
 8003208:	2207      	movs	r2, #7
 800320a:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800320c:	1d3b      	adds	r3, r7, #4
 800320e:	2200      	movs	r2, #0
 8003210:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003212:	1d3b      	adds	r3, r7, #4
 8003214:	2200      	movs	r2, #0
 8003216:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003218:	1d3b      	adds	r3, r7, #4
 800321a:	2200      	movs	r2, #0
 800321c:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800321e:	1d3b      	adds	r3, r7, #4
 8003220:	2100      	movs	r1, #0
 8003222:	0018      	movs	r0, r3
 8003224:	f000 ffce 	bl	80041c4 <HAL_RCC_ClockConfig>
 8003228:	1e03      	subs	r3, r0, #0
 800322a:	d001      	beq.n	8003230 <SystemClock_Config+0x78>
  {
    Error_Handler();
 800322c:	f000 f8b8 	bl	80033a0 <Error_Handler>
  }
}
 8003230:	46c0      	nop			; (mov r8, r8)
 8003232:	46bd      	mov	sp, r7
 8003234:	b013      	add	sp, #76	; 0x4c
 8003236:	bd90      	pop	{r4, r7, pc}

08003238 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8003238:	b580      	push	{r7, lr}
 800323a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 800323c:	4b19      	ldr	r3, [pc, #100]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800323e:	4a1a      	ldr	r2, [pc, #104]	; (80032a8 <MX_SPI1_Init+0x70>)
 8003240:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_SLAVE;
 8003242:	4b18      	ldr	r3, [pc, #96]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003244:	2200      	movs	r2, #0
 8003246:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8003248:	4b16      	ldr	r3, [pc, #88]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800324a:	2200      	movs	r2, #0
 800324c:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 800324e:	4b15      	ldr	r3, [pc, #84]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003250:	22c0      	movs	r2, #192	; 0xc0
 8003252:	0092      	lsls	r2, r2, #2
 8003254:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003256:	4b13      	ldr	r3, [pc, #76]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003258:	2200      	movs	r2, #0
 800325a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800325c:	4b11      	ldr	r3, [pc, #68]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800325e:	2200      	movs	r2, #0
 8003260:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8003262:	4b10      	ldr	r3, [pc, #64]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003264:	2280      	movs	r2, #128	; 0x80
 8003266:	0092      	lsls	r2, r2, #2
 8003268:	619a      	str	r2, [r3, #24]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800326a:	4b0e      	ldr	r3, [pc, #56]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800326c:	2200      	movs	r2, #0
 800326e:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8003270:	4b0c      	ldr	r3, [pc, #48]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003272:	2200      	movs	r2, #0
 8003274:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003276:	4b0b      	ldr	r3, [pc, #44]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003278:	2200      	movs	r2, #0
 800327a:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 7;
 800327c:	4b09      	ldr	r3, [pc, #36]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800327e:	2207      	movs	r2, #7
 8003280:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8003282:	4b08      	ldr	r3, [pc, #32]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003284:	2200      	movs	r2, #0
 8003286:	631a      	str	r2, [r3, #48]	; 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8003288:	4b06      	ldr	r3, [pc, #24]	; (80032a4 <MX_SPI1_Init+0x6c>)
 800328a:	2200      	movs	r2, #0
 800328c:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800328e:	4b05      	ldr	r3, [pc, #20]	; (80032a4 <MX_SPI1_Init+0x6c>)
 8003290:	0018      	movs	r0, r3
 8003292:	f001 f8f1 	bl	8004478 <HAL_SPI_Init>
 8003296:	1e03      	subs	r3, r0, #0
 8003298:	d001      	beq.n	800329e <MX_SPI1_Init+0x66>
  {
    Error_Handler();
 800329a:	f000 f881 	bl	80033a0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800329e:	46c0      	nop			; (mov r8, r8)
 80032a0:	46bd      	mov	sp, r7
 80032a2:	bd80      	pop	{r7, pc}
 80032a4:	200000cc 	.word	0x200000cc
 80032a8:	40013000 	.word	0x40013000

080032ac <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80032ac:	b590      	push	{r4, r7, lr}
 80032ae:	b089      	sub	sp, #36	; 0x24
 80032b0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032b2:	240c      	movs	r4, #12
 80032b4:	193b      	adds	r3, r7, r4
 80032b6:	0018      	movs	r0, r3
 80032b8:	2314      	movs	r3, #20
 80032ba:	001a      	movs	r2, r3
 80032bc:	2100      	movs	r1, #0
 80032be:	f002 fffb 	bl	80062b8 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80032c2:	4b34      	ldr	r3, [pc, #208]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032c4:	695a      	ldr	r2, [r3, #20]
 80032c6:	4b33      	ldr	r3, [pc, #204]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032c8:	2180      	movs	r1, #128	; 0x80
 80032ca:	03c9      	lsls	r1, r1, #15
 80032cc:	430a      	orrs	r2, r1
 80032ce:	615a      	str	r2, [r3, #20]
 80032d0:	4b30      	ldr	r3, [pc, #192]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032d2:	695a      	ldr	r2, [r3, #20]
 80032d4:	2380      	movs	r3, #128	; 0x80
 80032d6:	03db      	lsls	r3, r3, #15
 80032d8:	4013      	ands	r3, r2
 80032da:	60bb      	str	r3, [r7, #8]
 80032dc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80032de:	4b2d      	ldr	r3, [pc, #180]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032e0:	695a      	ldr	r2, [r3, #20]
 80032e2:	4b2c      	ldr	r3, [pc, #176]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032e4:	2180      	movs	r1, #128	; 0x80
 80032e6:	0289      	lsls	r1, r1, #10
 80032e8:	430a      	orrs	r2, r1
 80032ea:	615a      	str	r2, [r3, #20]
 80032ec:	4b29      	ldr	r3, [pc, #164]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032ee:	695a      	ldr	r2, [r3, #20]
 80032f0:	2380      	movs	r3, #128	; 0x80
 80032f2:	029b      	lsls	r3, r3, #10
 80032f4:	4013      	ands	r3, r2
 80032f6:	607b      	str	r3, [r7, #4]
 80032f8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80032fa:	4b26      	ldr	r3, [pc, #152]	; (8003394 <MX_GPIO_Init+0xe8>)
 80032fc:	695a      	ldr	r2, [r3, #20]
 80032fe:	4b25      	ldr	r3, [pc, #148]	; (8003394 <MX_GPIO_Init+0xe8>)
 8003300:	2180      	movs	r1, #128	; 0x80
 8003302:	02c9      	lsls	r1, r1, #11
 8003304:	430a      	orrs	r2, r1
 8003306:	615a      	str	r2, [r3, #20]
 8003308:	4b22      	ldr	r3, [pc, #136]	; (8003394 <MX_GPIO_Init+0xe8>)
 800330a:	695a      	ldr	r2, [r3, #20]
 800330c:	2380      	movs	r3, #128	; 0x80
 800330e:	02db      	lsls	r3, r3, #11
 8003310:	4013      	ands	r3, r2
 8003312:	603b      	str	r3, [r7, #0]
 8003314:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10, GPIO_PIN_RESET);
 8003316:	4920      	ldr	r1, [pc, #128]	; (8003398 <MX_GPIO_Init+0xec>)
 8003318:	2390      	movs	r3, #144	; 0x90
 800331a:	05db      	lsls	r3, r3, #23
 800331c:	2200      	movs	r2, #0
 800331e:	0018      	movs	r0, r3
 8003320:	f000 fbad 	bl	8003a7e <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA0 PA1 PA2 PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10;
 8003324:	193b      	adds	r3, r7, r4
 8003326:	4a1c      	ldr	r2, [pc, #112]	; (8003398 <MX_GPIO_Init+0xec>)
 8003328:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800332a:	193b      	adds	r3, r7, r4
 800332c:	2201      	movs	r2, #1
 800332e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003330:	193b      	adds	r3, r7, r4
 8003332:	2200      	movs	r2, #0
 8003334:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8003336:	193b      	adds	r3, r7, r4
 8003338:	2203      	movs	r2, #3
 800333a:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800333c:	193a      	adds	r2, r7, r4
 800333e:	2390      	movs	r3, #144	; 0x90
 8003340:	05db      	lsls	r3, r3, #23
 8003342:	0011      	movs	r1, r2
 8003344:	0018      	movs	r0, r3
 8003346:	f000 fa15 	bl	8003774 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB1 */
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 800334a:	193b      	adds	r3, r7, r4
 800334c:	2202      	movs	r2, #2
 800334e:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003350:	193b      	adds	r3, r7, r4
 8003352:	2200      	movs	r2, #0
 8003354:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003356:	193b      	adds	r3, r7, r4
 8003358:	2200      	movs	r2, #0
 800335a:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800335c:	193b      	adds	r3, r7, r4
 800335e:	4a0f      	ldr	r2, [pc, #60]	; (800339c <MX_GPIO_Init+0xf0>)
 8003360:	0019      	movs	r1, r3
 8003362:	0010      	movs	r0, r2
 8003364:	f000 fa06 	bl	8003774 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8003368:	0021      	movs	r1, r4
 800336a:	187b      	adds	r3, r7, r1
 800336c:	2280      	movs	r2, #128	; 0x80
 800336e:	0092      	lsls	r2, r2, #2
 8003370:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003372:	187b      	adds	r3, r7, r1
 8003374:	2200      	movs	r2, #0
 8003376:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003378:	187b      	adds	r3, r7, r1
 800337a:	2200      	movs	r2, #0
 800337c:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800337e:	187a      	adds	r2, r7, r1
 8003380:	2390      	movs	r3, #144	; 0x90
 8003382:	05db      	lsls	r3, r3, #23
 8003384:	0011      	movs	r1, r2
 8003386:	0018      	movs	r0, r3
 8003388:	f000 f9f4 	bl	8003774 <HAL_GPIO_Init>

}
 800338c:	46c0      	nop			; (mov r8, r8)
 800338e:	46bd      	mov	sp, r7
 8003390:	b009      	add	sp, #36	; 0x24
 8003392:	bd90      	pop	{r4, r7, pc}
 8003394:	40021000 	.word	0x40021000
 8003398:	00000407 	.word	0x00000407
 800339c:	48000400 	.word	0x48000400

080033a0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80033a0:	b580      	push	{r7, lr}
 80033a2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80033a4:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80033a6:	e7fe      	b.n	80033a6 <Error_Handler+0x6>

080033a8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80033a8:	b580      	push	{r7, lr}
 80033aa:	b082      	sub	sp, #8
 80033ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80033ae:	4b0f      	ldr	r3, [pc, #60]	; (80033ec <HAL_MspInit+0x44>)
 80033b0:	699a      	ldr	r2, [r3, #24]
 80033b2:	4b0e      	ldr	r3, [pc, #56]	; (80033ec <HAL_MspInit+0x44>)
 80033b4:	2101      	movs	r1, #1
 80033b6:	430a      	orrs	r2, r1
 80033b8:	619a      	str	r2, [r3, #24]
 80033ba:	4b0c      	ldr	r3, [pc, #48]	; (80033ec <HAL_MspInit+0x44>)
 80033bc:	699b      	ldr	r3, [r3, #24]
 80033be:	2201      	movs	r2, #1
 80033c0:	4013      	ands	r3, r2
 80033c2:	607b      	str	r3, [r7, #4]
 80033c4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80033c6:	4b09      	ldr	r3, [pc, #36]	; (80033ec <HAL_MspInit+0x44>)
 80033c8:	69da      	ldr	r2, [r3, #28]
 80033ca:	4b08      	ldr	r3, [pc, #32]	; (80033ec <HAL_MspInit+0x44>)
 80033cc:	2180      	movs	r1, #128	; 0x80
 80033ce:	0549      	lsls	r1, r1, #21
 80033d0:	430a      	orrs	r2, r1
 80033d2:	61da      	str	r2, [r3, #28]
 80033d4:	4b05      	ldr	r3, [pc, #20]	; (80033ec <HAL_MspInit+0x44>)
 80033d6:	69da      	ldr	r2, [r3, #28]
 80033d8:	2380      	movs	r3, #128	; 0x80
 80033da:	055b      	lsls	r3, r3, #21
 80033dc:	4013      	ands	r3, r2
 80033de:	603b      	str	r3, [r7, #0]
 80033e0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80033e2:	46c0      	nop			; (mov r8, r8)
 80033e4:	46bd      	mov	sp, r7
 80033e6:	b002      	add	sp, #8
 80033e8:	bd80      	pop	{r7, pc}
 80033ea:	46c0      	nop			; (mov r8, r8)
 80033ec:	40021000 	.word	0x40021000

080033f0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b08a      	sub	sp, #40	; 0x28
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80033f8:	2314      	movs	r3, #20
 80033fa:	18fb      	adds	r3, r7, r3
 80033fc:	0018      	movs	r0, r3
 80033fe:	2314      	movs	r3, #20
 8003400:	001a      	movs	r2, r3
 8003402:	2100      	movs	r1, #0
 8003404:	f002 ff58 	bl	80062b8 <memset>
  if(hspi->Instance==SPI1)
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	4a1c      	ldr	r2, [pc, #112]	; (8003480 <HAL_SPI_MspInit+0x90>)
 800340e:	4293      	cmp	r3, r2
 8003410:	d132      	bne.n	8003478 <HAL_SPI_MspInit+0x88>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8003412:	4b1c      	ldr	r3, [pc, #112]	; (8003484 <HAL_SPI_MspInit+0x94>)
 8003414:	699a      	ldr	r2, [r3, #24]
 8003416:	4b1b      	ldr	r3, [pc, #108]	; (8003484 <HAL_SPI_MspInit+0x94>)
 8003418:	2180      	movs	r1, #128	; 0x80
 800341a:	0149      	lsls	r1, r1, #5
 800341c:	430a      	orrs	r2, r1
 800341e:	619a      	str	r2, [r3, #24]
 8003420:	4b18      	ldr	r3, [pc, #96]	; (8003484 <HAL_SPI_MspInit+0x94>)
 8003422:	699a      	ldr	r2, [r3, #24]
 8003424:	2380      	movs	r3, #128	; 0x80
 8003426:	015b      	lsls	r3, r3, #5
 8003428:	4013      	ands	r3, r2
 800342a:	613b      	str	r3, [r7, #16]
 800342c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800342e:	4b15      	ldr	r3, [pc, #84]	; (8003484 <HAL_SPI_MspInit+0x94>)
 8003430:	695a      	ldr	r2, [r3, #20]
 8003432:	4b14      	ldr	r3, [pc, #80]	; (8003484 <HAL_SPI_MspInit+0x94>)
 8003434:	2180      	movs	r1, #128	; 0x80
 8003436:	0289      	lsls	r1, r1, #10
 8003438:	430a      	orrs	r2, r1
 800343a:	615a      	str	r2, [r3, #20]
 800343c:	4b11      	ldr	r3, [pc, #68]	; (8003484 <HAL_SPI_MspInit+0x94>)
 800343e:	695a      	ldr	r2, [r3, #20]
 8003440:	2380      	movs	r3, #128	; 0x80
 8003442:	029b      	lsls	r3, r3, #10
 8003444:	4013      	ands	r3, r2
 8003446:	60fb      	str	r3, [r7, #12]
 8003448:	68fb      	ldr	r3, [r7, #12]
    PA4     ------> SPI1_NSS
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 800344a:	2114      	movs	r1, #20
 800344c:	187b      	adds	r3, r7, r1
 800344e:	22f0      	movs	r2, #240	; 0xf0
 8003450:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003452:	187b      	adds	r3, r7, r1
 8003454:	2202      	movs	r2, #2
 8003456:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003458:	187b      	adds	r3, r7, r1
 800345a:	2200      	movs	r2, #0
 800345c:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800345e:	187b      	adds	r3, r7, r1
 8003460:	2203      	movs	r2, #3
 8003462:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 8003464:	187b      	adds	r3, r7, r1
 8003466:	2200      	movs	r2, #0
 8003468:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800346a:	187a      	adds	r2, r7, r1
 800346c:	2390      	movs	r3, #144	; 0x90
 800346e:	05db      	lsls	r3, r3, #23
 8003470:	0011      	movs	r1, r2
 8003472:	0018      	movs	r0, r3
 8003474:	f000 f97e 	bl	8003774 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8003478:	46c0      	nop			; (mov r8, r8)
 800347a:	46bd      	mov	sp, r7
 800347c:	b00a      	add	sp, #40	; 0x28
 800347e:	bd80      	pop	{r7, pc}
 8003480:	40013000 	.word	0x40013000
 8003484:	40021000 	.word	0x40021000

08003488 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003488:	b580      	push	{r7, lr}
 800348a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800348c:	e7fe      	b.n	800348c <NMI_Handler+0x4>

0800348e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800348e:	b580      	push	{r7, lr}
 8003490:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003492:	e7fe      	b.n	8003492 <HardFault_Handler+0x4>

08003494 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003494:	b580      	push	{r7, lr}
 8003496:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003498:	46c0      	nop			; (mov r8, r8)
 800349a:	46bd      	mov	sp, r7
 800349c:	bd80      	pop	{r7, pc}

0800349e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800349e:	b580      	push	{r7, lr}
 80034a0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80034a2:	46c0      	nop			; (mov r8, r8)
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bd80      	pop	{r7, pc}

080034a8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80034a8:	b580      	push	{r7, lr}
 80034aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80034ac:	f000 f892 	bl	80035d4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80034b0:	46c0      	nop			; (mov r8, r8)
 80034b2:	46bd      	mov	sp, r7
 80034b4:	bd80      	pop	{r7, pc}

080034b6 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80034b6:	b580      	push	{r7, lr}
 80034b8:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80034ba:	46c0      	nop			; (mov r8, r8)
 80034bc:	46bd      	mov	sp, r7
 80034be:	bd80      	pop	{r7, pc}

080034c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80034c0:	4813      	ldr	r0, [pc, #76]	; (8003510 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80034c2:	4685      	mov	sp, r0

/*Check if boot space corresponds to test memory*/
 
    LDR R0,=0x00000004
 80034c4:	4813      	ldr	r0, [pc, #76]	; (8003514 <LoopForever+0x6>)
    LDR R1, [R0]
 80034c6:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 80034c8:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 80034ca:	4a13      	ldr	r2, [pc, #76]	; (8003518 <LoopForever+0xa>)
    CMP R1, R2
 80034cc:	4291      	cmp	r1, r2
    BNE ApplicationStart
 80034ce:	d105      	bne.n	80034dc <ApplicationStart>

 /*SYSCFG clock enable*/

    LDR R0,=0x40021018
 80034d0:	4812      	ldr	r0, [pc, #72]	; (800351c <LoopForever+0xe>)
    LDR R1,=0x00000001
 80034d2:	4913      	ldr	r1, [pc, #76]	; (8003520 <LoopForever+0x12>)
    STR R1, [R0]
 80034d4:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 80034d6:	4813      	ldr	r0, [pc, #76]	; (8003524 <LoopForever+0x16>)
    LDR R1,=0x00000000
 80034d8:	4913      	ldr	r1, [pc, #76]	; (8003528 <LoopForever+0x1a>)
    STR R1, [R0]
 80034da:	6001      	str	r1, [r0, #0]

080034dc <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80034dc:	4813      	ldr	r0, [pc, #76]	; (800352c <LoopForever+0x1e>)
  ldr r1, =_edata
 80034de:	4914      	ldr	r1, [pc, #80]	; (8003530 <LoopForever+0x22>)
  ldr r2, =_sidata
 80034e0:	4a14      	ldr	r2, [pc, #80]	; (8003534 <LoopForever+0x26>)
  movs r3, #0
 80034e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80034e4:	e002      	b.n	80034ec <LoopCopyDataInit>

080034e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80034e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80034e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80034ea:	3304      	adds	r3, #4

080034ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80034ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80034ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80034f0:	d3f9      	bcc.n	80034e6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80034f2:	4a11      	ldr	r2, [pc, #68]	; (8003538 <LoopForever+0x2a>)
  ldr r4, =_ebss
 80034f4:	4c11      	ldr	r4, [pc, #68]	; (800353c <LoopForever+0x2e>)
  movs r3, #0
 80034f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80034f8:	e001      	b.n	80034fe <LoopFillZerobss>

080034fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80034fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80034fc:	3204      	adds	r2, #4

080034fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80034fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003500:	d3fb      	bcc.n	80034fa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003502:	f7ff ffd8 	bl	80034b6 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8003506:	f002 feb3 	bl	8006270 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800350a:	f7ff fdcf 	bl	80030ac <main>

0800350e <LoopForever>:

LoopForever:
    b LoopForever
 800350e:	e7fe      	b.n	800350e <LoopForever>
  ldr   r0, =_estack
 8003510:	20001800 	.word	0x20001800
    LDR R0,=0x00000004
 8003514:	00000004 	.word	0x00000004
    LDR R2,=0x1F
 8003518:	0000001f 	.word	0x0000001f
    LDR R0,=0x40021018
 800351c:	40021018 	.word	0x40021018
    LDR R1,=0x00000001
 8003520:	00000001 	.word	0x00000001
    LDR R0,=0x40010000
 8003524:	40010000 	.word	0x40010000
    LDR R1,=0x00000000
 8003528:	00000000 	.word	0x00000000
  ldr r0, =_sdata
 800352c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003530:	200000b0 	.word	0x200000b0
  ldr r2, =_sidata
 8003534:	080065f8 	.word	0x080065f8
  ldr r2, =_sbss
 8003538:	200000b0 	.word	0x200000b0
  ldr r4, =_ebss
 800353c:	20000134 	.word	0x20000134

08003540 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003540:	e7fe      	b.n	8003540 <ADC1_IRQHandler>
	...

08003544 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003544:	b580      	push	{r7, lr}
 8003546:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003548:	4b07      	ldr	r3, [pc, #28]	; (8003568 <HAL_Init+0x24>)
 800354a:	681a      	ldr	r2, [r3, #0]
 800354c:	4b06      	ldr	r3, [pc, #24]	; (8003568 <HAL_Init+0x24>)
 800354e:	2110      	movs	r1, #16
 8003550:	430a      	orrs	r2, r1
 8003552:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8003554:	2000      	movs	r0, #0
 8003556:	f000 f809 	bl	800356c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800355a:	f7ff ff25 	bl	80033a8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800355e:	2300      	movs	r3, #0
}
 8003560:	0018      	movs	r0, r3
 8003562:	46bd      	mov	sp, r7
 8003564:	bd80      	pop	{r7, pc}
 8003566:	46c0      	nop			; (mov r8, r8)
 8003568:	40022000 	.word	0x40022000

0800356c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800356c:	b590      	push	{r4, r7, lr}
 800356e:	b083      	sub	sp, #12
 8003570:	af00      	add	r7, sp, #0
 8003572:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003574:	4b14      	ldr	r3, [pc, #80]	; (80035c8 <HAL_InitTick+0x5c>)
 8003576:	681c      	ldr	r4, [r3, #0]
 8003578:	4b14      	ldr	r3, [pc, #80]	; (80035cc <HAL_InitTick+0x60>)
 800357a:	781b      	ldrb	r3, [r3, #0]
 800357c:	0019      	movs	r1, r3
 800357e:	23fa      	movs	r3, #250	; 0xfa
 8003580:	0098      	lsls	r0, r3, #2
 8003582:	f7fc fdcb 	bl	800011c <__udivsi3>
 8003586:	0003      	movs	r3, r0
 8003588:	0019      	movs	r1, r3
 800358a:	0020      	movs	r0, r4
 800358c:	f7fc fdc6 	bl	800011c <__udivsi3>
 8003590:	0003      	movs	r3, r0
 8003592:	0018      	movs	r0, r3
 8003594:	f000 f8e1 	bl	800375a <HAL_SYSTICK_Config>
 8003598:	1e03      	subs	r3, r0, #0
 800359a:	d001      	beq.n	80035a0 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800359c:	2301      	movs	r3, #1
 800359e:	e00f      	b.n	80035c0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	2b03      	cmp	r3, #3
 80035a4:	d80b      	bhi.n	80035be <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80035a6:	6879      	ldr	r1, [r7, #4]
 80035a8:	2301      	movs	r3, #1
 80035aa:	425b      	negs	r3, r3
 80035ac:	2200      	movs	r2, #0
 80035ae:	0018      	movs	r0, r3
 80035b0:	f000 f8be 	bl	8003730 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80035b4:	4b06      	ldr	r3, [pc, #24]	; (80035d0 <HAL_InitTick+0x64>)
 80035b6:	687a      	ldr	r2, [r7, #4]
 80035b8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80035ba:	2300      	movs	r3, #0
 80035bc:	e000      	b.n	80035c0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80035be:	2301      	movs	r3, #1
}
 80035c0:	0018      	movs	r0, r3
 80035c2:	46bd      	mov	sp, r7
 80035c4:	b003      	add	sp, #12
 80035c6:	bd90      	pop	{r4, r7, pc}
 80035c8:	20000040 	.word	0x20000040
 80035cc:	20000048 	.word	0x20000048
 80035d0:	20000044 	.word	0x20000044

080035d4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80035d4:	b580      	push	{r7, lr}
 80035d6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80035d8:	4b05      	ldr	r3, [pc, #20]	; (80035f0 <HAL_IncTick+0x1c>)
 80035da:	781b      	ldrb	r3, [r3, #0]
 80035dc:	001a      	movs	r2, r3
 80035de:	4b05      	ldr	r3, [pc, #20]	; (80035f4 <HAL_IncTick+0x20>)
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	18d2      	adds	r2, r2, r3
 80035e4:	4b03      	ldr	r3, [pc, #12]	; (80035f4 <HAL_IncTick+0x20>)
 80035e6:	601a      	str	r2, [r3, #0]
}
 80035e8:	46c0      	nop			; (mov r8, r8)
 80035ea:	46bd      	mov	sp, r7
 80035ec:	bd80      	pop	{r7, pc}
 80035ee:	46c0      	nop			; (mov r8, r8)
 80035f0:	20000048 	.word	0x20000048
 80035f4:	20000130 	.word	0x20000130

080035f8 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80035f8:	b580      	push	{r7, lr}
 80035fa:	af00      	add	r7, sp, #0
  return uwTick;
 80035fc:	4b02      	ldr	r3, [pc, #8]	; (8003608 <HAL_GetTick+0x10>)
 80035fe:	681b      	ldr	r3, [r3, #0]
}
 8003600:	0018      	movs	r0, r3
 8003602:	46bd      	mov	sp, r7
 8003604:	bd80      	pop	{r7, pc}
 8003606:	46c0      	nop			; (mov r8, r8)
 8003608:	20000130 	.word	0x20000130

0800360c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800360c:	b590      	push	{r4, r7, lr}
 800360e:	b083      	sub	sp, #12
 8003610:	af00      	add	r7, sp, #0
 8003612:	0002      	movs	r2, r0
 8003614:	6039      	str	r1, [r7, #0]
 8003616:	1dfb      	adds	r3, r7, #7
 8003618:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800361a:	1dfb      	adds	r3, r7, #7
 800361c:	781b      	ldrb	r3, [r3, #0]
 800361e:	2b7f      	cmp	r3, #127	; 0x7f
 8003620:	d828      	bhi.n	8003674 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003622:	4a2f      	ldr	r2, [pc, #188]	; (80036e0 <__NVIC_SetPriority+0xd4>)
 8003624:	1dfb      	adds	r3, r7, #7
 8003626:	781b      	ldrb	r3, [r3, #0]
 8003628:	b25b      	sxtb	r3, r3
 800362a:	089b      	lsrs	r3, r3, #2
 800362c:	33c0      	adds	r3, #192	; 0xc0
 800362e:	009b      	lsls	r3, r3, #2
 8003630:	589b      	ldr	r3, [r3, r2]
 8003632:	1dfa      	adds	r2, r7, #7
 8003634:	7812      	ldrb	r2, [r2, #0]
 8003636:	0011      	movs	r1, r2
 8003638:	2203      	movs	r2, #3
 800363a:	400a      	ands	r2, r1
 800363c:	00d2      	lsls	r2, r2, #3
 800363e:	21ff      	movs	r1, #255	; 0xff
 8003640:	4091      	lsls	r1, r2
 8003642:	000a      	movs	r2, r1
 8003644:	43d2      	mvns	r2, r2
 8003646:	401a      	ands	r2, r3
 8003648:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800364a:	683b      	ldr	r3, [r7, #0]
 800364c:	019b      	lsls	r3, r3, #6
 800364e:	22ff      	movs	r2, #255	; 0xff
 8003650:	401a      	ands	r2, r3
 8003652:	1dfb      	adds	r3, r7, #7
 8003654:	781b      	ldrb	r3, [r3, #0]
 8003656:	0018      	movs	r0, r3
 8003658:	2303      	movs	r3, #3
 800365a:	4003      	ands	r3, r0
 800365c:	00db      	lsls	r3, r3, #3
 800365e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003660:	481f      	ldr	r0, [pc, #124]	; (80036e0 <__NVIC_SetPriority+0xd4>)
 8003662:	1dfb      	adds	r3, r7, #7
 8003664:	781b      	ldrb	r3, [r3, #0]
 8003666:	b25b      	sxtb	r3, r3
 8003668:	089b      	lsrs	r3, r3, #2
 800366a:	430a      	orrs	r2, r1
 800366c:	33c0      	adds	r3, #192	; 0xc0
 800366e:	009b      	lsls	r3, r3, #2
 8003670:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003672:	e031      	b.n	80036d8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003674:	4a1b      	ldr	r2, [pc, #108]	; (80036e4 <__NVIC_SetPriority+0xd8>)
 8003676:	1dfb      	adds	r3, r7, #7
 8003678:	781b      	ldrb	r3, [r3, #0]
 800367a:	0019      	movs	r1, r3
 800367c:	230f      	movs	r3, #15
 800367e:	400b      	ands	r3, r1
 8003680:	3b08      	subs	r3, #8
 8003682:	089b      	lsrs	r3, r3, #2
 8003684:	3306      	adds	r3, #6
 8003686:	009b      	lsls	r3, r3, #2
 8003688:	18d3      	adds	r3, r2, r3
 800368a:	3304      	adds	r3, #4
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	1dfa      	adds	r2, r7, #7
 8003690:	7812      	ldrb	r2, [r2, #0]
 8003692:	0011      	movs	r1, r2
 8003694:	2203      	movs	r2, #3
 8003696:	400a      	ands	r2, r1
 8003698:	00d2      	lsls	r2, r2, #3
 800369a:	21ff      	movs	r1, #255	; 0xff
 800369c:	4091      	lsls	r1, r2
 800369e:	000a      	movs	r2, r1
 80036a0:	43d2      	mvns	r2, r2
 80036a2:	401a      	ands	r2, r3
 80036a4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80036a6:	683b      	ldr	r3, [r7, #0]
 80036a8:	019b      	lsls	r3, r3, #6
 80036aa:	22ff      	movs	r2, #255	; 0xff
 80036ac:	401a      	ands	r2, r3
 80036ae:	1dfb      	adds	r3, r7, #7
 80036b0:	781b      	ldrb	r3, [r3, #0]
 80036b2:	0018      	movs	r0, r3
 80036b4:	2303      	movs	r3, #3
 80036b6:	4003      	ands	r3, r0
 80036b8:	00db      	lsls	r3, r3, #3
 80036ba:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80036bc:	4809      	ldr	r0, [pc, #36]	; (80036e4 <__NVIC_SetPriority+0xd8>)
 80036be:	1dfb      	adds	r3, r7, #7
 80036c0:	781b      	ldrb	r3, [r3, #0]
 80036c2:	001c      	movs	r4, r3
 80036c4:	230f      	movs	r3, #15
 80036c6:	4023      	ands	r3, r4
 80036c8:	3b08      	subs	r3, #8
 80036ca:	089b      	lsrs	r3, r3, #2
 80036cc:	430a      	orrs	r2, r1
 80036ce:	3306      	adds	r3, #6
 80036d0:	009b      	lsls	r3, r3, #2
 80036d2:	18c3      	adds	r3, r0, r3
 80036d4:	3304      	adds	r3, #4
 80036d6:	601a      	str	r2, [r3, #0]
}
 80036d8:	46c0      	nop			; (mov r8, r8)
 80036da:	46bd      	mov	sp, r7
 80036dc:	b003      	add	sp, #12
 80036de:	bd90      	pop	{r4, r7, pc}
 80036e0:	e000e100 	.word	0xe000e100
 80036e4:	e000ed00 	.word	0xe000ed00

080036e8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b082      	sub	sp, #8
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	3b01      	subs	r3, #1
 80036f4:	4a0c      	ldr	r2, [pc, #48]	; (8003728 <SysTick_Config+0x40>)
 80036f6:	4293      	cmp	r3, r2
 80036f8:	d901      	bls.n	80036fe <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80036fa:	2301      	movs	r3, #1
 80036fc:	e010      	b.n	8003720 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80036fe:	4b0b      	ldr	r3, [pc, #44]	; (800372c <SysTick_Config+0x44>)
 8003700:	687a      	ldr	r2, [r7, #4]
 8003702:	3a01      	subs	r2, #1
 8003704:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003706:	2301      	movs	r3, #1
 8003708:	425b      	negs	r3, r3
 800370a:	2103      	movs	r1, #3
 800370c:	0018      	movs	r0, r3
 800370e:	f7ff ff7d 	bl	800360c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003712:	4b06      	ldr	r3, [pc, #24]	; (800372c <SysTick_Config+0x44>)
 8003714:	2200      	movs	r2, #0
 8003716:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003718:	4b04      	ldr	r3, [pc, #16]	; (800372c <SysTick_Config+0x44>)
 800371a:	2207      	movs	r2, #7
 800371c:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800371e:	2300      	movs	r3, #0
}
 8003720:	0018      	movs	r0, r3
 8003722:	46bd      	mov	sp, r7
 8003724:	b002      	add	sp, #8
 8003726:	bd80      	pop	{r7, pc}
 8003728:	00ffffff 	.word	0x00ffffff
 800372c:	e000e010 	.word	0xe000e010

08003730 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003730:	b580      	push	{r7, lr}
 8003732:	b084      	sub	sp, #16
 8003734:	af00      	add	r7, sp, #0
 8003736:	60b9      	str	r1, [r7, #8]
 8003738:	607a      	str	r2, [r7, #4]
 800373a:	210f      	movs	r1, #15
 800373c:	187b      	adds	r3, r7, r1
 800373e:	1c02      	adds	r2, r0, #0
 8003740:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003742:	68ba      	ldr	r2, [r7, #8]
 8003744:	187b      	adds	r3, r7, r1
 8003746:	781b      	ldrb	r3, [r3, #0]
 8003748:	b25b      	sxtb	r3, r3
 800374a:	0011      	movs	r1, r2
 800374c:	0018      	movs	r0, r3
 800374e:	f7ff ff5d 	bl	800360c <__NVIC_SetPriority>
}
 8003752:	46c0      	nop			; (mov r8, r8)
 8003754:	46bd      	mov	sp, r7
 8003756:	b004      	add	sp, #16
 8003758:	bd80      	pop	{r7, pc}

0800375a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800375a:	b580      	push	{r7, lr}
 800375c:	b082      	sub	sp, #8
 800375e:	af00      	add	r7, sp, #0
 8003760:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	0018      	movs	r0, r3
 8003766:	f7ff ffbf 	bl	80036e8 <SysTick_Config>
 800376a:	0003      	movs	r3, r0
}
 800376c:	0018      	movs	r0, r3
 800376e:	46bd      	mov	sp, r7
 8003770:	b002      	add	sp, #8
 8003772:	bd80      	pop	{r7, pc}

08003774 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{ 
 8003774:	b580      	push	{r7, lr}
 8003776:	b086      	sub	sp, #24
 8003778:	af00      	add	r7, sp, #0
 800377a:	6078      	str	r0, [r7, #4]
 800377c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800377e:	2300      	movs	r3, #0
 8003780:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003782:	e149      	b.n	8003a18 <HAL_GPIO_Init+0x2a4>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	2101      	movs	r1, #1
 800378a:	697a      	ldr	r2, [r7, #20]
 800378c:	4091      	lsls	r1, r2
 800378e:	000a      	movs	r2, r1
 8003790:	4013      	ands	r3, r2
 8003792:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	2b00      	cmp	r3, #0
 8003798:	d100      	bne.n	800379c <HAL_GPIO_Init+0x28>
 800379a:	e13a      	b.n	8003a12 <HAL_GPIO_Init+0x29e>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	685b      	ldr	r3, [r3, #4]
 80037a0:	2b01      	cmp	r3, #1
 80037a2:	d00b      	beq.n	80037bc <HAL_GPIO_Init+0x48>
 80037a4:	683b      	ldr	r3, [r7, #0]
 80037a6:	685b      	ldr	r3, [r3, #4]
 80037a8:	2b02      	cmp	r3, #2
 80037aa:	d007      	beq.n	80037bc <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80037ac:	683b      	ldr	r3, [r7, #0]
 80037ae:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80037b0:	2b11      	cmp	r3, #17
 80037b2:	d003      	beq.n	80037bc <HAL_GPIO_Init+0x48>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80037b4:	683b      	ldr	r3, [r7, #0]
 80037b6:	685b      	ldr	r3, [r3, #4]
 80037b8:	2b12      	cmp	r3, #18
 80037ba:	d130      	bne.n	800381e <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	689b      	ldr	r3, [r3, #8]
 80037c0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80037c2:	697b      	ldr	r3, [r7, #20]
 80037c4:	005b      	lsls	r3, r3, #1
 80037c6:	2203      	movs	r2, #3
 80037c8:	409a      	lsls	r2, r3
 80037ca:	0013      	movs	r3, r2
 80037cc:	43da      	mvns	r2, r3
 80037ce:	693b      	ldr	r3, [r7, #16]
 80037d0:	4013      	ands	r3, r2
 80037d2:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80037d4:	683b      	ldr	r3, [r7, #0]
 80037d6:	68da      	ldr	r2, [r3, #12]
 80037d8:	697b      	ldr	r3, [r7, #20]
 80037da:	005b      	lsls	r3, r3, #1
 80037dc:	409a      	lsls	r2, r3
 80037de:	0013      	movs	r3, r2
 80037e0:	693a      	ldr	r2, [r7, #16]
 80037e2:	4313      	orrs	r3, r2
 80037e4:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	693a      	ldr	r2, [r7, #16]
 80037ea:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	685b      	ldr	r3, [r3, #4]
 80037f0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80037f2:	2201      	movs	r2, #1
 80037f4:	697b      	ldr	r3, [r7, #20]
 80037f6:	409a      	lsls	r2, r3
 80037f8:	0013      	movs	r3, r2
 80037fa:	43da      	mvns	r2, r3
 80037fc:	693b      	ldr	r3, [r7, #16]
 80037fe:	4013      	ands	r3, r2
 8003800:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8003802:	683b      	ldr	r3, [r7, #0]
 8003804:	685b      	ldr	r3, [r3, #4]
 8003806:	091b      	lsrs	r3, r3, #4
 8003808:	2201      	movs	r2, #1
 800380a:	401a      	ands	r2, r3
 800380c:	697b      	ldr	r3, [r7, #20]
 800380e:	409a      	lsls	r2, r3
 8003810:	0013      	movs	r3, r2
 8003812:	693a      	ldr	r2, [r7, #16]
 8003814:	4313      	orrs	r3, r2
 8003816:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	693a      	ldr	r2, [r7, #16]
 800381c:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	68db      	ldr	r3, [r3, #12]
 8003822:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8003824:	697b      	ldr	r3, [r7, #20]
 8003826:	005b      	lsls	r3, r3, #1
 8003828:	2203      	movs	r2, #3
 800382a:	409a      	lsls	r2, r3
 800382c:	0013      	movs	r3, r2
 800382e:	43da      	mvns	r2, r3
 8003830:	693b      	ldr	r3, [r7, #16]
 8003832:	4013      	ands	r3, r2
 8003834:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8003836:	683b      	ldr	r3, [r7, #0]
 8003838:	689a      	ldr	r2, [r3, #8]
 800383a:	697b      	ldr	r3, [r7, #20]
 800383c:	005b      	lsls	r3, r3, #1
 800383e:	409a      	lsls	r2, r3
 8003840:	0013      	movs	r3, r2
 8003842:	693a      	ldr	r2, [r7, #16]
 8003844:	4313      	orrs	r3, r2
 8003846:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	693a      	ldr	r2, [r7, #16]
 800384c:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800384e:	683b      	ldr	r3, [r7, #0]
 8003850:	685b      	ldr	r3, [r3, #4]
 8003852:	2b02      	cmp	r3, #2
 8003854:	d003      	beq.n	800385e <HAL_GPIO_Init+0xea>
 8003856:	683b      	ldr	r3, [r7, #0]
 8003858:	685b      	ldr	r3, [r3, #4]
 800385a:	2b12      	cmp	r3, #18
 800385c:	d123      	bne.n	80038a6 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 800385e:	697b      	ldr	r3, [r7, #20]
 8003860:	08da      	lsrs	r2, r3, #3
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	3208      	adds	r2, #8
 8003866:	0092      	lsls	r2, r2, #2
 8003868:	58d3      	ldr	r3, [r2, r3]
 800386a:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800386c:	697b      	ldr	r3, [r7, #20]
 800386e:	2207      	movs	r2, #7
 8003870:	4013      	ands	r3, r2
 8003872:	009b      	lsls	r3, r3, #2
 8003874:	220f      	movs	r2, #15
 8003876:	409a      	lsls	r2, r3
 8003878:	0013      	movs	r3, r2
 800387a:	43da      	mvns	r2, r3
 800387c:	693b      	ldr	r3, [r7, #16]
 800387e:	4013      	ands	r3, r2
 8003880:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003882:	683b      	ldr	r3, [r7, #0]
 8003884:	691a      	ldr	r2, [r3, #16]
 8003886:	697b      	ldr	r3, [r7, #20]
 8003888:	2107      	movs	r1, #7
 800388a:	400b      	ands	r3, r1
 800388c:	009b      	lsls	r3, r3, #2
 800388e:	409a      	lsls	r2, r3
 8003890:	0013      	movs	r3, r2
 8003892:	693a      	ldr	r2, [r7, #16]
 8003894:	4313      	orrs	r3, r2
 8003896:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003898:	697b      	ldr	r3, [r7, #20]
 800389a:	08da      	lsrs	r2, r3, #3
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	3208      	adds	r2, #8
 80038a0:	0092      	lsls	r2, r2, #2
 80038a2:	6939      	ldr	r1, [r7, #16]
 80038a4:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80038ac:	697b      	ldr	r3, [r7, #20]
 80038ae:	005b      	lsls	r3, r3, #1
 80038b0:	2203      	movs	r2, #3
 80038b2:	409a      	lsls	r2, r3
 80038b4:	0013      	movs	r3, r2
 80038b6:	43da      	mvns	r2, r3
 80038b8:	693b      	ldr	r3, [r7, #16]
 80038ba:	4013      	ands	r3, r2
 80038bc:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80038be:	683b      	ldr	r3, [r7, #0]
 80038c0:	685b      	ldr	r3, [r3, #4]
 80038c2:	2203      	movs	r2, #3
 80038c4:	401a      	ands	r2, r3
 80038c6:	697b      	ldr	r3, [r7, #20]
 80038c8:	005b      	lsls	r3, r3, #1
 80038ca:	409a      	lsls	r2, r3
 80038cc:	0013      	movs	r3, r2
 80038ce:	693a      	ldr	r2, [r7, #16]
 80038d0:	4313      	orrs	r3, r2
 80038d2:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	693a      	ldr	r2, [r7, #16]
 80038d8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80038da:	683b      	ldr	r3, [r7, #0]
 80038dc:	685a      	ldr	r2, [r3, #4]
 80038de:	2380      	movs	r3, #128	; 0x80
 80038e0:	055b      	lsls	r3, r3, #21
 80038e2:	4013      	ands	r3, r2
 80038e4:	d100      	bne.n	80038e8 <HAL_GPIO_Init+0x174>
 80038e6:	e094      	b.n	8003a12 <HAL_GPIO_Init+0x29e>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80038e8:	4b51      	ldr	r3, [pc, #324]	; (8003a30 <HAL_GPIO_Init+0x2bc>)
 80038ea:	699a      	ldr	r2, [r3, #24]
 80038ec:	4b50      	ldr	r3, [pc, #320]	; (8003a30 <HAL_GPIO_Init+0x2bc>)
 80038ee:	2101      	movs	r1, #1
 80038f0:	430a      	orrs	r2, r1
 80038f2:	619a      	str	r2, [r3, #24]
 80038f4:	4b4e      	ldr	r3, [pc, #312]	; (8003a30 <HAL_GPIO_Init+0x2bc>)
 80038f6:	699b      	ldr	r3, [r3, #24]
 80038f8:	2201      	movs	r2, #1
 80038fa:	4013      	ands	r3, r2
 80038fc:	60bb      	str	r3, [r7, #8]
 80038fe:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003900:	4a4c      	ldr	r2, [pc, #304]	; (8003a34 <HAL_GPIO_Init+0x2c0>)
 8003902:	697b      	ldr	r3, [r7, #20]
 8003904:	089b      	lsrs	r3, r3, #2
 8003906:	3302      	adds	r3, #2
 8003908:	009b      	lsls	r3, r3, #2
 800390a:	589b      	ldr	r3, [r3, r2]
 800390c:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800390e:	697b      	ldr	r3, [r7, #20]
 8003910:	2203      	movs	r2, #3
 8003912:	4013      	ands	r3, r2
 8003914:	009b      	lsls	r3, r3, #2
 8003916:	220f      	movs	r2, #15
 8003918:	409a      	lsls	r2, r3
 800391a:	0013      	movs	r3, r2
 800391c:	43da      	mvns	r2, r3
 800391e:	693b      	ldr	r3, [r7, #16]
 8003920:	4013      	ands	r3, r2
 8003922:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003924:	687a      	ldr	r2, [r7, #4]
 8003926:	2390      	movs	r3, #144	; 0x90
 8003928:	05db      	lsls	r3, r3, #23
 800392a:	429a      	cmp	r2, r3
 800392c:	d00d      	beq.n	800394a <HAL_GPIO_Init+0x1d6>
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	4a41      	ldr	r2, [pc, #260]	; (8003a38 <HAL_GPIO_Init+0x2c4>)
 8003932:	4293      	cmp	r3, r2
 8003934:	d007      	beq.n	8003946 <HAL_GPIO_Init+0x1d2>
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	4a40      	ldr	r2, [pc, #256]	; (8003a3c <HAL_GPIO_Init+0x2c8>)
 800393a:	4293      	cmp	r3, r2
 800393c:	d101      	bne.n	8003942 <HAL_GPIO_Init+0x1ce>
 800393e:	2302      	movs	r3, #2
 8003940:	e004      	b.n	800394c <HAL_GPIO_Init+0x1d8>
 8003942:	2305      	movs	r3, #5
 8003944:	e002      	b.n	800394c <HAL_GPIO_Init+0x1d8>
 8003946:	2301      	movs	r3, #1
 8003948:	e000      	b.n	800394c <HAL_GPIO_Init+0x1d8>
 800394a:	2300      	movs	r3, #0
 800394c:	697a      	ldr	r2, [r7, #20]
 800394e:	2103      	movs	r1, #3
 8003950:	400a      	ands	r2, r1
 8003952:	0092      	lsls	r2, r2, #2
 8003954:	4093      	lsls	r3, r2
 8003956:	693a      	ldr	r2, [r7, #16]
 8003958:	4313      	orrs	r3, r2
 800395a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 800395c:	4935      	ldr	r1, [pc, #212]	; (8003a34 <HAL_GPIO_Init+0x2c0>)
 800395e:	697b      	ldr	r3, [r7, #20]
 8003960:	089b      	lsrs	r3, r3, #2
 8003962:	3302      	adds	r3, #2
 8003964:	009b      	lsls	r3, r3, #2
 8003966:	693a      	ldr	r2, [r7, #16]
 8003968:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800396a:	4b35      	ldr	r3, [pc, #212]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	43da      	mvns	r2, r3
 8003974:	693b      	ldr	r3, [r7, #16]
 8003976:	4013      	ands	r3, r2
 8003978:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800397a:	683b      	ldr	r3, [r7, #0]
 800397c:	685a      	ldr	r2, [r3, #4]
 800397e:	2380      	movs	r3, #128	; 0x80
 8003980:	025b      	lsls	r3, r3, #9
 8003982:	4013      	ands	r3, r2
 8003984:	d003      	beq.n	800398e <HAL_GPIO_Init+0x21a>
        {
          temp |= iocurrent;
 8003986:	693a      	ldr	r2, [r7, #16]
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	4313      	orrs	r3, r2
 800398c:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 800398e:	4b2c      	ldr	r3, [pc, #176]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 8003990:	693a      	ldr	r2, [r7, #16]
 8003992:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8003994:	4b2a      	ldr	r3, [pc, #168]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 8003996:	685b      	ldr	r3, [r3, #4]
 8003998:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	43da      	mvns	r2, r3
 800399e:	693b      	ldr	r3, [r7, #16]
 80039a0:	4013      	ands	r3, r2
 80039a2:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80039a4:	683b      	ldr	r3, [r7, #0]
 80039a6:	685a      	ldr	r2, [r3, #4]
 80039a8:	2380      	movs	r3, #128	; 0x80
 80039aa:	029b      	lsls	r3, r3, #10
 80039ac:	4013      	ands	r3, r2
 80039ae:	d003      	beq.n	80039b8 <HAL_GPIO_Init+0x244>
        {
          temp |= iocurrent;
 80039b0:	693a      	ldr	r2, [r7, #16]
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	4313      	orrs	r3, r2
 80039b6:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 80039b8:	4b21      	ldr	r3, [pc, #132]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 80039ba:	693a      	ldr	r2, [r7, #16]
 80039bc:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80039be:	4b20      	ldr	r3, [pc, #128]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 80039c0:	689b      	ldr	r3, [r3, #8]
 80039c2:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	43da      	mvns	r2, r3
 80039c8:	693b      	ldr	r3, [r7, #16]
 80039ca:	4013      	ands	r3, r2
 80039cc:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80039ce:	683b      	ldr	r3, [r7, #0]
 80039d0:	685a      	ldr	r2, [r3, #4]
 80039d2:	2380      	movs	r3, #128	; 0x80
 80039d4:	035b      	lsls	r3, r3, #13
 80039d6:	4013      	ands	r3, r2
 80039d8:	d003      	beq.n	80039e2 <HAL_GPIO_Init+0x26e>
        {
          temp |= iocurrent;
 80039da:	693a      	ldr	r2, [r7, #16]
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	4313      	orrs	r3, r2
 80039e0:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80039e2:	4b17      	ldr	r3, [pc, #92]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 80039e4:	693a      	ldr	r2, [r7, #16]
 80039e6:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80039e8:	4b15      	ldr	r3, [pc, #84]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 80039ea:	68db      	ldr	r3, [r3, #12]
 80039ec:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	43da      	mvns	r2, r3
 80039f2:	693b      	ldr	r3, [r7, #16]
 80039f4:	4013      	ands	r3, r2
 80039f6:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80039f8:	683b      	ldr	r3, [r7, #0]
 80039fa:	685a      	ldr	r2, [r3, #4]
 80039fc:	2380      	movs	r3, #128	; 0x80
 80039fe:	039b      	lsls	r3, r3, #14
 8003a00:	4013      	ands	r3, r2
 8003a02:	d003      	beq.n	8003a0c <HAL_GPIO_Init+0x298>
        {
          temp |= iocurrent;
 8003a04:	693a      	ldr	r2, [r7, #16]
 8003a06:	68fb      	ldr	r3, [r7, #12]
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8003a0c:	4b0c      	ldr	r3, [pc, #48]	; (8003a40 <HAL_GPIO_Init+0x2cc>)
 8003a0e:	693a      	ldr	r2, [r7, #16]
 8003a10:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 8003a12:	697b      	ldr	r3, [r7, #20]
 8003a14:	3301      	adds	r3, #1
 8003a16:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003a18:	683b      	ldr	r3, [r7, #0]
 8003a1a:	681a      	ldr	r2, [r3, #0]
 8003a1c:	697b      	ldr	r3, [r7, #20]
 8003a1e:	40da      	lsrs	r2, r3
 8003a20:	1e13      	subs	r3, r2, #0
 8003a22:	d000      	beq.n	8003a26 <HAL_GPIO_Init+0x2b2>
 8003a24:	e6ae      	b.n	8003784 <HAL_GPIO_Init+0x10>
  } 
}
 8003a26:	46c0      	nop			; (mov r8, r8)
 8003a28:	46bd      	mov	sp, r7
 8003a2a:	b006      	add	sp, #24
 8003a2c:	bd80      	pop	{r7, pc}
 8003a2e:	46c0      	nop			; (mov r8, r8)
 8003a30:	40021000 	.word	0x40021000
 8003a34:	40010000 	.word	0x40010000
 8003a38:	48000400 	.word	0x48000400
 8003a3c:	48000800 	.word	0x48000800
 8003a40:	40010400 	.word	0x40010400

08003a44 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003a44:	b580      	push	{r7, lr}
 8003a46:	b084      	sub	sp, #16
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
 8003a4c:	000a      	movs	r2, r1
 8003a4e:	1cbb      	adds	r3, r7, #2
 8003a50:	801a      	strh	r2, [r3, #0]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	691b      	ldr	r3, [r3, #16]
 8003a56:	1cba      	adds	r2, r7, #2
 8003a58:	8812      	ldrh	r2, [r2, #0]
 8003a5a:	4013      	ands	r3, r2
 8003a5c:	d004      	beq.n	8003a68 <HAL_GPIO_ReadPin+0x24>
  {
    bitstatus = GPIO_PIN_SET;
 8003a5e:	230f      	movs	r3, #15
 8003a60:	18fb      	adds	r3, r7, r3
 8003a62:	2201      	movs	r2, #1
 8003a64:	701a      	strb	r2, [r3, #0]
 8003a66:	e003      	b.n	8003a70 <HAL_GPIO_ReadPin+0x2c>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8003a68:	230f      	movs	r3, #15
 8003a6a:	18fb      	adds	r3, r7, r3
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	701a      	strb	r2, [r3, #0]
  }
  return bitstatus;
 8003a70:	230f      	movs	r3, #15
 8003a72:	18fb      	adds	r3, r7, r3
 8003a74:	781b      	ldrb	r3, [r3, #0]
  }
 8003a76:	0018      	movs	r0, r3
 8003a78:	46bd      	mov	sp, r7
 8003a7a:	b004      	add	sp, #16
 8003a7c:	bd80      	pop	{r7, pc}

08003a7e <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003a7e:	b580      	push	{r7, lr}
 8003a80:	b082      	sub	sp, #8
 8003a82:	af00      	add	r7, sp, #0
 8003a84:	6078      	str	r0, [r7, #4]
 8003a86:	0008      	movs	r0, r1
 8003a88:	0011      	movs	r1, r2
 8003a8a:	1cbb      	adds	r3, r7, #2
 8003a8c:	1c02      	adds	r2, r0, #0
 8003a8e:	801a      	strh	r2, [r3, #0]
 8003a90:	1c7b      	adds	r3, r7, #1
 8003a92:	1c0a      	adds	r2, r1, #0
 8003a94:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003a96:	1c7b      	adds	r3, r7, #1
 8003a98:	781b      	ldrb	r3, [r3, #0]
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d004      	beq.n	8003aa8 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8003a9e:	1cbb      	adds	r3, r7, #2
 8003aa0:	881a      	ldrh	r2, [r3, #0]
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003aa6:	e003      	b.n	8003ab0 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003aa8:	1cbb      	adds	r3, r7, #2
 8003aaa:	881a      	ldrh	r2, [r3, #0]
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	629a      	str	r2, [r3, #40]	; 0x28
}
 8003ab0:	46c0      	nop			; (mov r8, r8)
 8003ab2:	46bd      	mov	sp, r7
 8003ab4:	b002      	add	sp, #8
 8003ab6:	bd80      	pop	{r7, pc}

08003ab8 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003ab8:	b580      	push	{r7, lr}
 8003aba:	b088      	sub	sp, #32
 8003abc:	af00      	add	r7, sp, #0
 8003abe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d102      	bne.n	8003acc <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	f000 fb76 	bl	80041b8 <HAL_RCC_OscConfig+0x700>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	2201      	movs	r2, #1
 8003ad2:	4013      	ands	r3, r2
 8003ad4:	d100      	bne.n	8003ad8 <HAL_RCC_OscConfig+0x20>
 8003ad6:	e08e      	b.n	8003bf6 <HAL_RCC_OscConfig+0x13e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8003ad8:	4bc5      	ldr	r3, [pc, #788]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003ada:	685b      	ldr	r3, [r3, #4]
 8003adc:	220c      	movs	r2, #12
 8003ade:	4013      	ands	r3, r2
 8003ae0:	2b04      	cmp	r3, #4
 8003ae2:	d00e      	beq.n	8003b02 <HAL_RCC_OscConfig+0x4a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8003ae4:	4bc2      	ldr	r3, [pc, #776]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003ae6:	685b      	ldr	r3, [r3, #4]
 8003ae8:	220c      	movs	r2, #12
 8003aea:	4013      	ands	r3, r2
 8003aec:	2b08      	cmp	r3, #8
 8003aee:	d117      	bne.n	8003b20 <HAL_RCC_OscConfig+0x68>
 8003af0:	4bbf      	ldr	r3, [pc, #764]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003af2:	685a      	ldr	r2, [r3, #4]
 8003af4:	23c0      	movs	r3, #192	; 0xc0
 8003af6:	025b      	lsls	r3, r3, #9
 8003af8:	401a      	ands	r2, r3
 8003afa:	2380      	movs	r3, #128	; 0x80
 8003afc:	025b      	lsls	r3, r3, #9
 8003afe:	429a      	cmp	r2, r3
 8003b00:	d10e      	bne.n	8003b20 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003b02:	4bbb      	ldr	r3, [pc, #748]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b04:	681a      	ldr	r2, [r3, #0]
 8003b06:	2380      	movs	r3, #128	; 0x80
 8003b08:	029b      	lsls	r3, r3, #10
 8003b0a:	4013      	ands	r3, r2
 8003b0c:	d100      	bne.n	8003b10 <HAL_RCC_OscConfig+0x58>
 8003b0e:	e071      	b.n	8003bf4 <HAL_RCC_OscConfig+0x13c>
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	685b      	ldr	r3, [r3, #4]
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	d000      	beq.n	8003b1a <HAL_RCC_OscConfig+0x62>
 8003b18:	e06c      	b.n	8003bf4 <HAL_RCC_OscConfig+0x13c>
      {
        return HAL_ERROR;
 8003b1a:	2301      	movs	r3, #1
 8003b1c:	f000 fb4c 	bl	80041b8 <HAL_RCC_OscConfig+0x700>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	685b      	ldr	r3, [r3, #4]
 8003b24:	2b01      	cmp	r3, #1
 8003b26:	d107      	bne.n	8003b38 <HAL_RCC_OscConfig+0x80>
 8003b28:	4bb1      	ldr	r3, [pc, #708]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b2a:	681a      	ldr	r2, [r3, #0]
 8003b2c:	4bb0      	ldr	r3, [pc, #704]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b2e:	2180      	movs	r1, #128	; 0x80
 8003b30:	0249      	lsls	r1, r1, #9
 8003b32:	430a      	orrs	r2, r1
 8003b34:	601a      	str	r2, [r3, #0]
 8003b36:	e02f      	b.n	8003b98 <HAL_RCC_OscConfig+0xe0>
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	685b      	ldr	r3, [r3, #4]
 8003b3c:	2b00      	cmp	r3, #0
 8003b3e:	d10c      	bne.n	8003b5a <HAL_RCC_OscConfig+0xa2>
 8003b40:	4bab      	ldr	r3, [pc, #684]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b42:	681a      	ldr	r2, [r3, #0]
 8003b44:	4baa      	ldr	r3, [pc, #680]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b46:	49ab      	ldr	r1, [pc, #684]	; (8003df4 <HAL_RCC_OscConfig+0x33c>)
 8003b48:	400a      	ands	r2, r1
 8003b4a:	601a      	str	r2, [r3, #0]
 8003b4c:	4ba8      	ldr	r3, [pc, #672]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b4e:	681a      	ldr	r2, [r3, #0]
 8003b50:	4ba7      	ldr	r3, [pc, #668]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b52:	49a9      	ldr	r1, [pc, #676]	; (8003df8 <HAL_RCC_OscConfig+0x340>)
 8003b54:	400a      	ands	r2, r1
 8003b56:	601a      	str	r2, [r3, #0]
 8003b58:	e01e      	b.n	8003b98 <HAL_RCC_OscConfig+0xe0>
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	2b05      	cmp	r3, #5
 8003b60:	d10e      	bne.n	8003b80 <HAL_RCC_OscConfig+0xc8>
 8003b62:	4ba3      	ldr	r3, [pc, #652]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b64:	681a      	ldr	r2, [r3, #0]
 8003b66:	4ba2      	ldr	r3, [pc, #648]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b68:	2180      	movs	r1, #128	; 0x80
 8003b6a:	02c9      	lsls	r1, r1, #11
 8003b6c:	430a      	orrs	r2, r1
 8003b6e:	601a      	str	r2, [r3, #0]
 8003b70:	4b9f      	ldr	r3, [pc, #636]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b72:	681a      	ldr	r2, [r3, #0]
 8003b74:	4b9e      	ldr	r3, [pc, #632]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b76:	2180      	movs	r1, #128	; 0x80
 8003b78:	0249      	lsls	r1, r1, #9
 8003b7a:	430a      	orrs	r2, r1
 8003b7c:	601a      	str	r2, [r3, #0]
 8003b7e:	e00b      	b.n	8003b98 <HAL_RCC_OscConfig+0xe0>
 8003b80:	4b9b      	ldr	r3, [pc, #620]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b82:	681a      	ldr	r2, [r3, #0]
 8003b84:	4b9a      	ldr	r3, [pc, #616]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b86:	499b      	ldr	r1, [pc, #620]	; (8003df4 <HAL_RCC_OscConfig+0x33c>)
 8003b88:	400a      	ands	r2, r1
 8003b8a:	601a      	str	r2, [r3, #0]
 8003b8c:	4b98      	ldr	r3, [pc, #608]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b8e:	681a      	ldr	r2, [r3, #0]
 8003b90:	4b97      	ldr	r3, [pc, #604]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003b92:	4999      	ldr	r1, [pc, #612]	; (8003df8 <HAL_RCC_OscConfig+0x340>)
 8003b94:	400a      	ands	r2, r1
 8003b96:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	685b      	ldr	r3, [r3, #4]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d014      	beq.n	8003bca <HAL_RCC_OscConfig+0x112>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003ba0:	f7ff fd2a 	bl	80035f8 <HAL_GetTick>
 8003ba4:	0003      	movs	r3, r0
 8003ba6:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003ba8:	e008      	b.n	8003bbc <HAL_RCC_OscConfig+0x104>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003baa:	f7ff fd25 	bl	80035f8 <HAL_GetTick>
 8003bae:	0002      	movs	r2, r0
 8003bb0:	69bb      	ldr	r3, [r7, #24]
 8003bb2:	1ad3      	subs	r3, r2, r3
 8003bb4:	2b64      	cmp	r3, #100	; 0x64
 8003bb6:	d901      	bls.n	8003bbc <HAL_RCC_OscConfig+0x104>
          {
            return HAL_TIMEOUT;
 8003bb8:	2303      	movs	r3, #3
 8003bba:	e2fd      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003bbc:	4b8c      	ldr	r3, [pc, #560]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003bbe:	681a      	ldr	r2, [r3, #0]
 8003bc0:	2380      	movs	r3, #128	; 0x80
 8003bc2:	029b      	lsls	r3, r3, #10
 8003bc4:	4013      	ands	r3, r2
 8003bc6:	d0f0      	beq.n	8003baa <HAL_RCC_OscConfig+0xf2>
 8003bc8:	e015      	b.n	8003bf6 <HAL_RCC_OscConfig+0x13e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003bca:	f7ff fd15 	bl	80035f8 <HAL_GetTick>
 8003bce:	0003      	movs	r3, r0
 8003bd0:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003bd2:	e008      	b.n	8003be6 <HAL_RCC_OscConfig+0x12e>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003bd4:	f7ff fd10 	bl	80035f8 <HAL_GetTick>
 8003bd8:	0002      	movs	r2, r0
 8003bda:	69bb      	ldr	r3, [r7, #24]
 8003bdc:	1ad3      	subs	r3, r2, r3
 8003bde:	2b64      	cmp	r3, #100	; 0x64
 8003be0:	d901      	bls.n	8003be6 <HAL_RCC_OscConfig+0x12e>
          {
            return HAL_TIMEOUT;
 8003be2:	2303      	movs	r3, #3
 8003be4:	e2e8      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003be6:	4b82      	ldr	r3, [pc, #520]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003be8:	681a      	ldr	r2, [r3, #0]
 8003bea:	2380      	movs	r3, #128	; 0x80
 8003bec:	029b      	lsls	r3, r3, #10
 8003bee:	4013      	ands	r3, r2
 8003bf0:	d1f0      	bne.n	8003bd4 <HAL_RCC_OscConfig+0x11c>
 8003bf2:	e000      	b.n	8003bf6 <HAL_RCC_OscConfig+0x13e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003bf4:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	2202      	movs	r2, #2
 8003bfc:	4013      	ands	r3, r2
 8003bfe:	d100      	bne.n	8003c02 <HAL_RCC_OscConfig+0x14a>
 8003c00:	e06c      	b.n	8003cdc <HAL_RCC_OscConfig+0x224>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8003c02:	4b7b      	ldr	r3, [pc, #492]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c04:	685b      	ldr	r3, [r3, #4]
 8003c06:	220c      	movs	r2, #12
 8003c08:	4013      	ands	r3, r2
 8003c0a:	d00e      	beq.n	8003c2a <HAL_RCC_OscConfig+0x172>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8003c0c:	4b78      	ldr	r3, [pc, #480]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c0e:	685b      	ldr	r3, [r3, #4]
 8003c10:	220c      	movs	r2, #12
 8003c12:	4013      	ands	r3, r2
 8003c14:	2b08      	cmp	r3, #8
 8003c16:	d11f      	bne.n	8003c58 <HAL_RCC_OscConfig+0x1a0>
 8003c18:	4b75      	ldr	r3, [pc, #468]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c1a:	685a      	ldr	r2, [r3, #4]
 8003c1c:	23c0      	movs	r3, #192	; 0xc0
 8003c1e:	025b      	lsls	r3, r3, #9
 8003c20:	401a      	ands	r2, r3
 8003c22:	2380      	movs	r3, #128	; 0x80
 8003c24:	021b      	lsls	r3, r3, #8
 8003c26:	429a      	cmp	r2, r3
 8003c28:	d116      	bne.n	8003c58 <HAL_RCC_OscConfig+0x1a0>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003c2a:	4b71      	ldr	r3, [pc, #452]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	2202      	movs	r2, #2
 8003c30:	4013      	ands	r3, r2
 8003c32:	d005      	beq.n	8003c40 <HAL_RCC_OscConfig+0x188>
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	68db      	ldr	r3, [r3, #12]
 8003c38:	2b01      	cmp	r3, #1
 8003c3a:	d001      	beq.n	8003c40 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8003c3c:	2301      	movs	r3, #1
 8003c3e:	e2bb      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003c40:	4b6b      	ldr	r3, [pc, #428]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	22f8      	movs	r2, #248	; 0xf8
 8003c46:	4393      	bics	r3, r2
 8003c48:	0019      	movs	r1, r3
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	691b      	ldr	r3, [r3, #16]
 8003c4e:	00da      	lsls	r2, r3, #3
 8003c50:	4b67      	ldr	r3, [pc, #412]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c52:	430a      	orrs	r2, r1
 8003c54:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003c56:	e041      	b.n	8003cdc <HAL_RCC_OscConfig+0x224>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	68db      	ldr	r3, [r3, #12]
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	d024      	beq.n	8003caa <HAL_RCC_OscConfig+0x1f2>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8003c60:	4b63      	ldr	r3, [pc, #396]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c62:	681a      	ldr	r2, [r3, #0]
 8003c64:	4b62      	ldr	r3, [pc, #392]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c66:	2101      	movs	r1, #1
 8003c68:	430a      	orrs	r2, r1
 8003c6a:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003c6c:	f7ff fcc4 	bl	80035f8 <HAL_GetTick>
 8003c70:	0003      	movs	r3, r0
 8003c72:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003c74:	e008      	b.n	8003c88 <HAL_RCC_OscConfig+0x1d0>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003c76:	f7ff fcbf 	bl	80035f8 <HAL_GetTick>
 8003c7a:	0002      	movs	r2, r0
 8003c7c:	69bb      	ldr	r3, [r7, #24]
 8003c7e:	1ad3      	subs	r3, r2, r3
 8003c80:	2b02      	cmp	r3, #2
 8003c82:	d901      	bls.n	8003c88 <HAL_RCC_OscConfig+0x1d0>
          {
            return HAL_TIMEOUT;
 8003c84:	2303      	movs	r3, #3
 8003c86:	e297      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003c88:	4b59      	ldr	r3, [pc, #356]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	2202      	movs	r2, #2
 8003c8e:	4013      	ands	r3, r2
 8003c90:	d0f1      	beq.n	8003c76 <HAL_RCC_OscConfig+0x1be>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003c92:	4b57      	ldr	r3, [pc, #348]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	22f8      	movs	r2, #248	; 0xf8
 8003c98:	4393      	bics	r3, r2
 8003c9a:	0019      	movs	r1, r3
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	691b      	ldr	r3, [r3, #16]
 8003ca0:	00da      	lsls	r2, r3, #3
 8003ca2:	4b53      	ldr	r3, [pc, #332]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003ca4:	430a      	orrs	r2, r1
 8003ca6:	601a      	str	r2, [r3, #0]
 8003ca8:	e018      	b.n	8003cdc <HAL_RCC_OscConfig+0x224>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8003caa:	4b51      	ldr	r3, [pc, #324]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003cac:	681a      	ldr	r2, [r3, #0]
 8003cae:	4b50      	ldr	r3, [pc, #320]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003cb0:	2101      	movs	r1, #1
 8003cb2:	438a      	bics	r2, r1
 8003cb4:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003cb6:	f7ff fc9f 	bl	80035f8 <HAL_GetTick>
 8003cba:	0003      	movs	r3, r0
 8003cbc:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003cbe:	e008      	b.n	8003cd2 <HAL_RCC_OscConfig+0x21a>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003cc0:	f7ff fc9a 	bl	80035f8 <HAL_GetTick>
 8003cc4:	0002      	movs	r2, r0
 8003cc6:	69bb      	ldr	r3, [r7, #24]
 8003cc8:	1ad3      	subs	r3, r2, r3
 8003cca:	2b02      	cmp	r3, #2
 8003ccc:	d901      	bls.n	8003cd2 <HAL_RCC_OscConfig+0x21a>
          {
            return HAL_TIMEOUT;
 8003cce:	2303      	movs	r3, #3
 8003cd0:	e272      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003cd2:	4b47      	ldr	r3, [pc, #284]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	2202      	movs	r2, #2
 8003cd8:	4013      	ands	r3, r2
 8003cda:	d1f1      	bne.n	8003cc0 <HAL_RCC_OscConfig+0x208>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	2208      	movs	r2, #8
 8003ce2:	4013      	ands	r3, r2
 8003ce4:	d036      	beq.n	8003d54 <HAL_RCC_OscConfig+0x29c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	69db      	ldr	r3, [r3, #28]
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	d019      	beq.n	8003d22 <HAL_RCC_OscConfig+0x26a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003cee:	4b40      	ldr	r3, [pc, #256]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003cf0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003cf2:	4b3f      	ldr	r3, [pc, #252]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003cf4:	2101      	movs	r1, #1
 8003cf6:	430a      	orrs	r2, r1
 8003cf8:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003cfa:	f7ff fc7d 	bl	80035f8 <HAL_GetTick>
 8003cfe:	0003      	movs	r3, r0
 8003d00:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003d02:	e008      	b.n	8003d16 <HAL_RCC_OscConfig+0x25e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003d04:	f7ff fc78 	bl	80035f8 <HAL_GetTick>
 8003d08:	0002      	movs	r2, r0
 8003d0a:	69bb      	ldr	r3, [r7, #24]
 8003d0c:	1ad3      	subs	r3, r2, r3
 8003d0e:	2b02      	cmp	r3, #2
 8003d10:	d901      	bls.n	8003d16 <HAL_RCC_OscConfig+0x25e>
        {
          return HAL_TIMEOUT;
 8003d12:	2303      	movs	r3, #3
 8003d14:	e250      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003d16:	4b36      	ldr	r3, [pc, #216]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d1a:	2202      	movs	r2, #2
 8003d1c:	4013      	ands	r3, r2
 8003d1e:	d0f1      	beq.n	8003d04 <HAL_RCC_OscConfig+0x24c>
 8003d20:	e018      	b.n	8003d54 <HAL_RCC_OscConfig+0x29c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003d22:	4b33      	ldr	r3, [pc, #204]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003d26:	4b32      	ldr	r3, [pc, #200]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d28:	2101      	movs	r1, #1
 8003d2a:	438a      	bics	r2, r1
 8003d2c:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003d2e:	f7ff fc63 	bl	80035f8 <HAL_GetTick>
 8003d32:	0003      	movs	r3, r0
 8003d34:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003d36:	e008      	b.n	8003d4a <HAL_RCC_OscConfig+0x292>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003d38:	f7ff fc5e 	bl	80035f8 <HAL_GetTick>
 8003d3c:	0002      	movs	r2, r0
 8003d3e:	69bb      	ldr	r3, [r7, #24]
 8003d40:	1ad3      	subs	r3, r2, r3
 8003d42:	2b02      	cmp	r3, #2
 8003d44:	d901      	bls.n	8003d4a <HAL_RCC_OscConfig+0x292>
        {
          return HAL_TIMEOUT;
 8003d46:	2303      	movs	r3, #3
 8003d48:	e236      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8003d4a:	4b29      	ldr	r3, [pc, #164]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d4e:	2202      	movs	r2, #2
 8003d50:	4013      	ands	r3, r2
 8003d52:	d1f1      	bne.n	8003d38 <HAL_RCC_OscConfig+0x280>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	2204      	movs	r2, #4
 8003d5a:	4013      	ands	r3, r2
 8003d5c:	d100      	bne.n	8003d60 <HAL_RCC_OscConfig+0x2a8>
 8003d5e:	e0b5      	b.n	8003ecc <HAL_RCC_OscConfig+0x414>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003d60:	231f      	movs	r3, #31
 8003d62:	18fb      	adds	r3, r7, r3
 8003d64:	2200      	movs	r2, #0
 8003d66:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003d68:	4b21      	ldr	r3, [pc, #132]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d6a:	69da      	ldr	r2, [r3, #28]
 8003d6c:	2380      	movs	r3, #128	; 0x80
 8003d6e:	055b      	lsls	r3, r3, #21
 8003d70:	4013      	ands	r3, r2
 8003d72:	d111      	bne.n	8003d98 <HAL_RCC_OscConfig+0x2e0>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003d74:	4b1e      	ldr	r3, [pc, #120]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d76:	69da      	ldr	r2, [r3, #28]
 8003d78:	4b1d      	ldr	r3, [pc, #116]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d7a:	2180      	movs	r1, #128	; 0x80
 8003d7c:	0549      	lsls	r1, r1, #21
 8003d7e:	430a      	orrs	r2, r1
 8003d80:	61da      	str	r2, [r3, #28]
 8003d82:	4b1b      	ldr	r3, [pc, #108]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003d84:	69da      	ldr	r2, [r3, #28]
 8003d86:	2380      	movs	r3, #128	; 0x80
 8003d88:	055b      	lsls	r3, r3, #21
 8003d8a:	4013      	ands	r3, r2
 8003d8c:	60fb      	str	r3, [r7, #12]
 8003d8e:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8003d90:	231f      	movs	r3, #31
 8003d92:	18fb      	adds	r3, r7, r3
 8003d94:	2201      	movs	r2, #1
 8003d96:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003d98:	4b18      	ldr	r3, [pc, #96]	; (8003dfc <HAL_RCC_OscConfig+0x344>)
 8003d9a:	681a      	ldr	r2, [r3, #0]
 8003d9c:	2380      	movs	r3, #128	; 0x80
 8003d9e:	005b      	lsls	r3, r3, #1
 8003da0:	4013      	ands	r3, r2
 8003da2:	d11a      	bne.n	8003dda <HAL_RCC_OscConfig+0x322>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003da4:	4b15      	ldr	r3, [pc, #84]	; (8003dfc <HAL_RCC_OscConfig+0x344>)
 8003da6:	681a      	ldr	r2, [r3, #0]
 8003da8:	4b14      	ldr	r3, [pc, #80]	; (8003dfc <HAL_RCC_OscConfig+0x344>)
 8003daa:	2180      	movs	r1, #128	; 0x80
 8003dac:	0049      	lsls	r1, r1, #1
 8003dae:	430a      	orrs	r2, r1
 8003db0:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003db2:	f7ff fc21 	bl	80035f8 <HAL_GetTick>
 8003db6:	0003      	movs	r3, r0
 8003db8:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003dba:	e008      	b.n	8003dce <HAL_RCC_OscConfig+0x316>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003dbc:	f7ff fc1c 	bl	80035f8 <HAL_GetTick>
 8003dc0:	0002      	movs	r2, r0
 8003dc2:	69bb      	ldr	r3, [r7, #24]
 8003dc4:	1ad3      	subs	r3, r2, r3
 8003dc6:	2b64      	cmp	r3, #100	; 0x64
 8003dc8:	d901      	bls.n	8003dce <HAL_RCC_OscConfig+0x316>
        {
          return HAL_TIMEOUT;
 8003dca:	2303      	movs	r3, #3
 8003dcc:	e1f4      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003dce:	4b0b      	ldr	r3, [pc, #44]	; (8003dfc <HAL_RCC_OscConfig+0x344>)
 8003dd0:	681a      	ldr	r2, [r3, #0]
 8003dd2:	2380      	movs	r3, #128	; 0x80
 8003dd4:	005b      	lsls	r3, r3, #1
 8003dd6:	4013      	ands	r3, r2
 8003dd8:	d0f0      	beq.n	8003dbc <HAL_RCC_OscConfig+0x304>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	689b      	ldr	r3, [r3, #8]
 8003dde:	2b01      	cmp	r3, #1
 8003de0:	d10e      	bne.n	8003e00 <HAL_RCC_OscConfig+0x348>
 8003de2:	4b03      	ldr	r3, [pc, #12]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003de4:	6a1a      	ldr	r2, [r3, #32]
 8003de6:	4b02      	ldr	r3, [pc, #8]	; (8003df0 <HAL_RCC_OscConfig+0x338>)
 8003de8:	2101      	movs	r1, #1
 8003dea:	430a      	orrs	r2, r1
 8003dec:	621a      	str	r2, [r3, #32]
 8003dee:	e035      	b.n	8003e5c <HAL_RCC_OscConfig+0x3a4>
 8003df0:	40021000 	.word	0x40021000
 8003df4:	fffeffff 	.word	0xfffeffff
 8003df8:	fffbffff 	.word	0xfffbffff
 8003dfc:	40007000 	.word	0x40007000
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	689b      	ldr	r3, [r3, #8]
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d10c      	bne.n	8003e22 <HAL_RCC_OscConfig+0x36a>
 8003e08:	4bca      	ldr	r3, [pc, #808]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e0a:	6a1a      	ldr	r2, [r3, #32]
 8003e0c:	4bc9      	ldr	r3, [pc, #804]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e0e:	2101      	movs	r1, #1
 8003e10:	438a      	bics	r2, r1
 8003e12:	621a      	str	r2, [r3, #32]
 8003e14:	4bc7      	ldr	r3, [pc, #796]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e16:	6a1a      	ldr	r2, [r3, #32]
 8003e18:	4bc6      	ldr	r3, [pc, #792]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e1a:	2104      	movs	r1, #4
 8003e1c:	438a      	bics	r2, r1
 8003e1e:	621a      	str	r2, [r3, #32]
 8003e20:	e01c      	b.n	8003e5c <HAL_RCC_OscConfig+0x3a4>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	689b      	ldr	r3, [r3, #8]
 8003e26:	2b05      	cmp	r3, #5
 8003e28:	d10c      	bne.n	8003e44 <HAL_RCC_OscConfig+0x38c>
 8003e2a:	4bc2      	ldr	r3, [pc, #776]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e2c:	6a1a      	ldr	r2, [r3, #32]
 8003e2e:	4bc1      	ldr	r3, [pc, #772]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e30:	2104      	movs	r1, #4
 8003e32:	430a      	orrs	r2, r1
 8003e34:	621a      	str	r2, [r3, #32]
 8003e36:	4bbf      	ldr	r3, [pc, #764]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e38:	6a1a      	ldr	r2, [r3, #32]
 8003e3a:	4bbe      	ldr	r3, [pc, #760]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e3c:	2101      	movs	r1, #1
 8003e3e:	430a      	orrs	r2, r1
 8003e40:	621a      	str	r2, [r3, #32]
 8003e42:	e00b      	b.n	8003e5c <HAL_RCC_OscConfig+0x3a4>
 8003e44:	4bbb      	ldr	r3, [pc, #748]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e46:	6a1a      	ldr	r2, [r3, #32]
 8003e48:	4bba      	ldr	r3, [pc, #744]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e4a:	2101      	movs	r1, #1
 8003e4c:	438a      	bics	r2, r1
 8003e4e:	621a      	str	r2, [r3, #32]
 8003e50:	4bb8      	ldr	r3, [pc, #736]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e52:	6a1a      	ldr	r2, [r3, #32]
 8003e54:	4bb7      	ldr	r3, [pc, #732]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e56:	2104      	movs	r1, #4
 8003e58:	438a      	bics	r2, r1
 8003e5a:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	689b      	ldr	r3, [r3, #8]
 8003e60:	2b00      	cmp	r3, #0
 8003e62:	d014      	beq.n	8003e8e <HAL_RCC_OscConfig+0x3d6>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003e64:	f7ff fbc8 	bl	80035f8 <HAL_GetTick>
 8003e68:	0003      	movs	r3, r0
 8003e6a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003e6c:	e009      	b.n	8003e82 <HAL_RCC_OscConfig+0x3ca>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003e6e:	f7ff fbc3 	bl	80035f8 <HAL_GetTick>
 8003e72:	0002      	movs	r2, r0
 8003e74:	69bb      	ldr	r3, [r7, #24]
 8003e76:	1ad3      	subs	r3, r2, r3
 8003e78:	4aaf      	ldr	r2, [pc, #700]	; (8004138 <HAL_RCC_OscConfig+0x680>)
 8003e7a:	4293      	cmp	r3, r2
 8003e7c:	d901      	bls.n	8003e82 <HAL_RCC_OscConfig+0x3ca>
        {
          return HAL_TIMEOUT;
 8003e7e:	2303      	movs	r3, #3
 8003e80:	e19a      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003e82:	4bac      	ldr	r3, [pc, #688]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003e84:	6a1b      	ldr	r3, [r3, #32]
 8003e86:	2202      	movs	r2, #2
 8003e88:	4013      	ands	r3, r2
 8003e8a:	d0f0      	beq.n	8003e6e <HAL_RCC_OscConfig+0x3b6>
 8003e8c:	e013      	b.n	8003eb6 <HAL_RCC_OscConfig+0x3fe>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003e8e:	f7ff fbb3 	bl	80035f8 <HAL_GetTick>
 8003e92:	0003      	movs	r3, r0
 8003e94:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003e96:	e009      	b.n	8003eac <HAL_RCC_OscConfig+0x3f4>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003e98:	f7ff fbae 	bl	80035f8 <HAL_GetTick>
 8003e9c:	0002      	movs	r2, r0
 8003e9e:	69bb      	ldr	r3, [r7, #24]
 8003ea0:	1ad3      	subs	r3, r2, r3
 8003ea2:	4aa5      	ldr	r2, [pc, #660]	; (8004138 <HAL_RCC_OscConfig+0x680>)
 8003ea4:	4293      	cmp	r3, r2
 8003ea6:	d901      	bls.n	8003eac <HAL_RCC_OscConfig+0x3f4>
        {
          return HAL_TIMEOUT;
 8003ea8:	2303      	movs	r3, #3
 8003eaa:	e185      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003eac:	4ba1      	ldr	r3, [pc, #644]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003eae:	6a1b      	ldr	r3, [r3, #32]
 8003eb0:	2202      	movs	r2, #2
 8003eb2:	4013      	ands	r3, r2
 8003eb4:	d1f0      	bne.n	8003e98 <HAL_RCC_OscConfig+0x3e0>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003eb6:	231f      	movs	r3, #31
 8003eb8:	18fb      	adds	r3, r7, r3
 8003eba:	781b      	ldrb	r3, [r3, #0]
 8003ebc:	2b01      	cmp	r3, #1
 8003ebe:	d105      	bne.n	8003ecc <HAL_RCC_OscConfig+0x414>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003ec0:	4b9c      	ldr	r3, [pc, #624]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ec2:	69da      	ldr	r2, [r3, #28]
 8003ec4:	4b9b      	ldr	r3, [pc, #620]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ec6:	499d      	ldr	r1, [pc, #628]	; (800413c <HAL_RCC_OscConfig+0x684>)
 8003ec8:	400a      	ands	r2, r1
 8003eca:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	2210      	movs	r2, #16
 8003ed2:	4013      	ands	r3, r2
 8003ed4:	d063      	beq.n	8003f9e <HAL_RCC_OscConfig+0x4e6>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	695b      	ldr	r3, [r3, #20]
 8003eda:	2b01      	cmp	r3, #1
 8003edc:	d12a      	bne.n	8003f34 <HAL_RCC_OscConfig+0x47c>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003ede:	4b95      	ldr	r3, [pc, #596]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ee0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ee2:	4b94      	ldr	r3, [pc, #592]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ee4:	2104      	movs	r1, #4
 8003ee6:	430a      	orrs	r2, r1
 8003ee8:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8003eea:	4b92      	ldr	r3, [pc, #584]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003eec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003eee:	4b91      	ldr	r3, [pc, #580]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ef0:	2101      	movs	r1, #1
 8003ef2:	430a      	orrs	r2, r1
 8003ef4:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003ef6:	f7ff fb7f 	bl	80035f8 <HAL_GetTick>
 8003efa:	0003      	movs	r3, r0
 8003efc:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003efe:	e008      	b.n	8003f12 <HAL_RCC_OscConfig+0x45a>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003f00:	f7ff fb7a 	bl	80035f8 <HAL_GetTick>
 8003f04:	0002      	movs	r2, r0
 8003f06:	69bb      	ldr	r3, [r7, #24]
 8003f08:	1ad3      	subs	r3, r2, r3
 8003f0a:	2b02      	cmp	r3, #2
 8003f0c:	d901      	bls.n	8003f12 <HAL_RCC_OscConfig+0x45a>
        {
          return HAL_TIMEOUT;
 8003f0e:	2303      	movs	r3, #3
 8003f10:	e152      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003f12:	4b88      	ldr	r3, [pc, #544]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f16:	2202      	movs	r2, #2
 8003f18:	4013      	ands	r3, r2
 8003f1a:	d0f1      	beq.n	8003f00 <HAL_RCC_OscConfig+0x448>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003f1c:	4b85      	ldr	r3, [pc, #532]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f20:	22f8      	movs	r2, #248	; 0xf8
 8003f22:	4393      	bics	r3, r2
 8003f24:	0019      	movs	r1, r3
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	699b      	ldr	r3, [r3, #24]
 8003f2a:	00da      	lsls	r2, r3, #3
 8003f2c:	4b81      	ldr	r3, [pc, #516]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f2e:	430a      	orrs	r2, r1
 8003f30:	635a      	str	r2, [r3, #52]	; 0x34
 8003f32:	e034      	b.n	8003f9e <HAL_RCC_OscConfig+0x4e6>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	695b      	ldr	r3, [r3, #20]
 8003f38:	3305      	adds	r3, #5
 8003f3a:	d111      	bne.n	8003f60 <HAL_RCC_OscConfig+0x4a8>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8003f3c:	4b7d      	ldr	r3, [pc, #500]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f40:	4b7c      	ldr	r3, [pc, #496]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f42:	2104      	movs	r1, #4
 8003f44:	438a      	bics	r2, r1
 8003f46:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003f48:	4b7a      	ldr	r3, [pc, #488]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f4c:	22f8      	movs	r2, #248	; 0xf8
 8003f4e:	4393      	bics	r3, r2
 8003f50:	0019      	movs	r1, r3
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	699b      	ldr	r3, [r3, #24]
 8003f56:	00da      	lsls	r2, r3, #3
 8003f58:	4b76      	ldr	r3, [pc, #472]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f5a:	430a      	orrs	r2, r1
 8003f5c:	635a      	str	r2, [r3, #52]	; 0x34
 8003f5e:	e01e      	b.n	8003f9e <HAL_RCC_OscConfig+0x4e6>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003f60:	4b74      	ldr	r3, [pc, #464]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f62:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f64:	4b73      	ldr	r3, [pc, #460]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f66:	2104      	movs	r1, #4
 8003f68:	430a      	orrs	r2, r1
 8003f6a:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003f6c:	4b71      	ldr	r3, [pc, #452]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f6e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f70:	4b70      	ldr	r3, [pc, #448]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f72:	2101      	movs	r1, #1
 8003f74:	438a      	bics	r2, r1
 8003f76:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003f78:	f7ff fb3e 	bl	80035f8 <HAL_GetTick>
 8003f7c:	0003      	movs	r3, r0
 8003f7e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003f80:	e008      	b.n	8003f94 <HAL_RCC_OscConfig+0x4dc>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003f82:	f7ff fb39 	bl	80035f8 <HAL_GetTick>
 8003f86:	0002      	movs	r2, r0
 8003f88:	69bb      	ldr	r3, [r7, #24]
 8003f8a:	1ad3      	subs	r3, r2, r3
 8003f8c:	2b02      	cmp	r3, #2
 8003f8e:	d901      	bls.n	8003f94 <HAL_RCC_OscConfig+0x4dc>
        {
          return HAL_TIMEOUT;
 8003f90:	2303      	movs	r3, #3
 8003f92:	e111      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003f94:	4b67      	ldr	r3, [pc, #412]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003f96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f98:	2202      	movs	r2, #2
 8003f9a:	4013      	ands	r3, r2
 8003f9c:	d1f1      	bne.n	8003f82 <HAL_RCC_OscConfig+0x4ca>
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	2220      	movs	r2, #32
 8003fa4:	4013      	ands	r3, r2
 8003fa6:	d05c      	beq.n	8004062 <HAL_RCC_OscConfig+0x5aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* When the HSI48 is used as system clock it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003fa8:	4b62      	ldr	r3, [pc, #392]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003faa:	685b      	ldr	r3, [r3, #4]
 8003fac:	220c      	movs	r2, #12
 8003fae:	4013      	ands	r3, r2
 8003fb0:	2b0c      	cmp	r3, #12
 8003fb2:	d00e      	beq.n	8003fd2 <HAL_RCC_OscConfig+0x51a>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003fb4:	4b5f      	ldr	r3, [pc, #380]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003fb6:	685b      	ldr	r3, [r3, #4]
 8003fb8:	220c      	movs	r2, #12
 8003fba:	4013      	ands	r3, r2
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 8003fbc:	2b08      	cmp	r3, #8
 8003fbe:	d114      	bne.n	8003fea <HAL_RCC_OscConfig+0x532>
       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI48)))
 8003fc0:	4b5c      	ldr	r3, [pc, #368]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003fc2:	685a      	ldr	r2, [r3, #4]
 8003fc4:	23c0      	movs	r3, #192	; 0xc0
 8003fc6:	025b      	lsls	r3, r3, #9
 8003fc8:	401a      	ands	r2, r3
 8003fca:	23c0      	movs	r3, #192	; 0xc0
 8003fcc:	025b      	lsls	r3, r3, #9
 8003fce:	429a      	cmp	r2, r3
 8003fd0:	d10b      	bne.n	8003fea <HAL_RCC_OscConfig+0x532>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 8003fd2:	4b58      	ldr	r3, [pc, #352]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003fd4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003fd6:	2380      	movs	r3, #128	; 0x80
 8003fd8:	025b      	lsls	r3, r3, #9
 8003fda:	4013      	ands	r3, r2
 8003fdc:	d040      	beq.n	8004060 <HAL_RCC_OscConfig+0x5a8>
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	6a1b      	ldr	r3, [r3, #32]
 8003fe2:	2b01      	cmp	r3, #1
 8003fe4:	d03c      	beq.n	8004060 <HAL_RCC_OscConfig+0x5a8>
      {
        return HAL_ERROR;
 8003fe6:	2301      	movs	r3, #1
 8003fe8:	e0e6      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      }
    }
    else
    {
      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	6a1b      	ldr	r3, [r3, #32]
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d01b      	beq.n	800402a <HAL_RCC_OscConfig+0x572>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003ff2:	4b50      	ldr	r3, [pc, #320]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ff4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ff6:	4b4f      	ldr	r3, [pc, #316]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8003ff8:	2180      	movs	r1, #128	; 0x80
 8003ffa:	0249      	lsls	r1, r1, #9
 8003ffc:	430a      	orrs	r2, r1
 8003ffe:	635a      	str	r2, [r3, #52]	; 0x34

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004000:	f7ff fafa 	bl	80035f8 <HAL_GetTick>
 8004004:	0003      	movs	r3, r0
 8004006:	61bb      	str	r3, [r7, #24]
      
        /* Wait till HSI48 is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8004008:	e008      	b.n	800401c <HAL_RCC_OscConfig+0x564>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800400a:	f7ff faf5 	bl	80035f8 <HAL_GetTick>
 800400e:	0002      	movs	r2, r0
 8004010:	69bb      	ldr	r3, [r7, #24]
 8004012:	1ad3      	subs	r3, r2, r3
 8004014:	2b02      	cmp	r3, #2
 8004016:	d901      	bls.n	800401c <HAL_RCC_OscConfig+0x564>
          {
            return HAL_TIMEOUT;
 8004018:	2303      	movs	r3, #3
 800401a:	e0cd      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 800401c:	4b45      	ldr	r3, [pc, #276]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 800401e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004020:	2380      	movs	r3, #128	; 0x80
 8004022:	025b      	lsls	r3, r3, #9
 8004024:	4013      	ands	r3, r2
 8004026:	d0f0      	beq.n	800400a <HAL_RCC_OscConfig+0x552>
 8004028:	e01b      	b.n	8004062 <HAL_RCC_OscConfig+0x5aa>
        } 
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 800402a:	4b42      	ldr	r3, [pc, #264]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 800402c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800402e:	4b41      	ldr	r3, [pc, #260]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004030:	4943      	ldr	r1, [pc, #268]	; (8004140 <HAL_RCC_OscConfig+0x688>)
 8004032:	400a      	ands	r2, r1
 8004034:	635a      	str	r2, [r3, #52]	; 0x34

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004036:	f7ff fadf 	bl	80035f8 <HAL_GetTick>
 800403a:	0003      	movs	r3, r0
 800403c:	61bb      	str	r3, [r7, #24]
      
        /* Wait till HSI48 is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 800403e:	e008      	b.n	8004052 <HAL_RCC_OscConfig+0x59a>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004040:	f7ff fada 	bl	80035f8 <HAL_GetTick>
 8004044:	0002      	movs	r2, r0
 8004046:	69bb      	ldr	r3, [r7, #24]
 8004048:	1ad3      	subs	r3, r2, r3
 800404a:	2b02      	cmp	r3, #2
 800404c:	d901      	bls.n	8004052 <HAL_RCC_OscConfig+0x59a>
          {
            return HAL_TIMEOUT;
 800404e:	2303      	movs	r3, #3
 8004050:	e0b2      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 8004052:	4b38      	ldr	r3, [pc, #224]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004054:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004056:	2380      	movs	r3, #128	; 0x80
 8004058:	025b      	lsls	r3, r3, #9
 800405a:	4013      	ands	r3, r2
 800405c:	d1f0      	bne.n	8004040 <HAL_RCC_OscConfig+0x588>
 800405e:	e000      	b.n	8004062 <HAL_RCC_OscConfig+0x5aa>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_HSI48_ON))
 8004060:	46c0      	nop			; (mov r8, r8)
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004066:	2b00      	cmp	r3, #0
 8004068:	d100      	bne.n	800406c <HAL_RCC_OscConfig+0x5b4>
 800406a:	e0a4      	b.n	80041b6 <HAL_RCC_OscConfig+0x6fe>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800406c:	4b31      	ldr	r3, [pc, #196]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 800406e:	685b      	ldr	r3, [r3, #4]
 8004070:	220c      	movs	r2, #12
 8004072:	4013      	ands	r3, r2
 8004074:	2b08      	cmp	r3, #8
 8004076:	d100      	bne.n	800407a <HAL_RCC_OscConfig+0x5c2>
 8004078:	e078      	b.n	800416c <HAL_RCC_OscConfig+0x6b4>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800407e:	2b02      	cmp	r3, #2
 8004080:	d14c      	bne.n	800411c <HAL_RCC_OscConfig+0x664>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004082:	4b2c      	ldr	r3, [pc, #176]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004084:	681a      	ldr	r2, [r3, #0]
 8004086:	4b2b      	ldr	r3, [pc, #172]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004088:	492e      	ldr	r1, [pc, #184]	; (8004144 <HAL_RCC_OscConfig+0x68c>)
 800408a:	400a      	ands	r2, r1
 800408c:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800408e:	f7ff fab3 	bl	80035f8 <HAL_GetTick>
 8004092:	0003      	movs	r3, r0
 8004094:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004096:	e008      	b.n	80040aa <HAL_RCC_OscConfig+0x5f2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004098:	f7ff faae 	bl	80035f8 <HAL_GetTick>
 800409c:	0002      	movs	r2, r0
 800409e:	69bb      	ldr	r3, [r7, #24]
 80040a0:	1ad3      	subs	r3, r2, r3
 80040a2:	2b02      	cmp	r3, #2
 80040a4:	d901      	bls.n	80040aa <HAL_RCC_OscConfig+0x5f2>
          {
            return HAL_TIMEOUT;
 80040a6:	2303      	movs	r3, #3
 80040a8:	e086      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80040aa:	4b22      	ldr	r3, [pc, #136]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040ac:	681a      	ldr	r2, [r3, #0]
 80040ae:	2380      	movs	r3, #128	; 0x80
 80040b0:	049b      	lsls	r3, r3, #18
 80040b2:	4013      	ands	r3, r2
 80040b4:	d1f0      	bne.n	8004098 <HAL_RCC_OscConfig+0x5e0>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80040b6:	4b1f      	ldr	r3, [pc, #124]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040ba:	220f      	movs	r2, #15
 80040bc:	4393      	bics	r3, r2
 80040be:	0019      	movs	r1, r3
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80040c4:	4b1b      	ldr	r3, [pc, #108]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040c6:	430a      	orrs	r2, r1
 80040c8:	62da      	str	r2, [r3, #44]	; 0x2c
 80040ca:	4b1a      	ldr	r3, [pc, #104]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040cc:	685b      	ldr	r3, [r3, #4]
 80040ce:	4a1e      	ldr	r2, [pc, #120]	; (8004148 <HAL_RCC_OscConfig+0x690>)
 80040d0:	4013      	ands	r3, r2
 80040d2:	0019      	movs	r1, r3
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80040dc:	431a      	orrs	r2, r3
 80040de:	4b15      	ldr	r3, [pc, #84]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040e0:	430a      	orrs	r2, r1
 80040e2:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80040e4:	4b13      	ldr	r3, [pc, #76]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040e6:	681a      	ldr	r2, [r3, #0]
 80040e8:	4b12      	ldr	r3, [pc, #72]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 80040ea:	2180      	movs	r1, #128	; 0x80
 80040ec:	0449      	lsls	r1, r1, #17
 80040ee:	430a      	orrs	r2, r1
 80040f0:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80040f2:	f7ff fa81 	bl	80035f8 <HAL_GetTick>
 80040f6:	0003      	movs	r3, r0
 80040f8:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80040fa:	e008      	b.n	800410e <HAL_RCC_OscConfig+0x656>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80040fc:	f7ff fa7c 	bl	80035f8 <HAL_GetTick>
 8004100:	0002      	movs	r2, r0
 8004102:	69bb      	ldr	r3, [r7, #24]
 8004104:	1ad3      	subs	r3, r2, r3
 8004106:	2b02      	cmp	r3, #2
 8004108:	d901      	bls.n	800410e <HAL_RCC_OscConfig+0x656>
          {
            return HAL_TIMEOUT;
 800410a:	2303      	movs	r3, #3
 800410c:	e054      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800410e:	4b09      	ldr	r3, [pc, #36]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004110:	681a      	ldr	r2, [r3, #0]
 8004112:	2380      	movs	r3, #128	; 0x80
 8004114:	049b      	lsls	r3, r3, #18
 8004116:	4013      	ands	r3, r2
 8004118:	d0f0      	beq.n	80040fc <HAL_RCC_OscConfig+0x644>
 800411a:	e04c      	b.n	80041b6 <HAL_RCC_OscConfig+0x6fe>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800411c:	4b05      	ldr	r3, [pc, #20]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 800411e:	681a      	ldr	r2, [r3, #0]
 8004120:	4b04      	ldr	r3, [pc, #16]	; (8004134 <HAL_RCC_OscConfig+0x67c>)
 8004122:	4908      	ldr	r1, [pc, #32]	; (8004144 <HAL_RCC_OscConfig+0x68c>)
 8004124:	400a      	ands	r2, r1
 8004126:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004128:	f7ff fa66 	bl	80035f8 <HAL_GetTick>
 800412c:	0003      	movs	r3, r0
 800412e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004130:	e015      	b.n	800415e <HAL_RCC_OscConfig+0x6a6>
 8004132:	46c0      	nop			; (mov r8, r8)
 8004134:	40021000 	.word	0x40021000
 8004138:	00001388 	.word	0x00001388
 800413c:	efffffff 	.word	0xefffffff
 8004140:	fffeffff 	.word	0xfffeffff
 8004144:	feffffff 	.word	0xfeffffff
 8004148:	ffc27fff 	.word	0xffc27fff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800414c:	f7ff fa54 	bl	80035f8 <HAL_GetTick>
 8004150:	0002      	movs	r2, r0
 8004152:	69bb      	ldr	r3, [r7, #24]
 8004154:	1ad3      	subs	r3, r2, r3
 8004156:	2b02      	cmp	r3, #2
 8004158:	d901      	bls.n	800415e <HAL_RCC_OscConfig+0x6a6>
          {
            return HAL_TIMEOUT;
 800415a:	2303      	movs	r3, #3
 800415c:	e02c      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800415e:	4b18      	ldr	r3, [pc, #96]	; (80041c0 <HAL_RCC_OscConfig+0x708>)
 8004160:	681a      	ldr	r2, [r3, #0]
 8004162:	2380      	movs	r3, #128	; 0x80
 8004164:	049b      	lsls	r3, r3, #18
 8004166:	4013      	ands	r3, r2
 8004168:	d1f0      	bne.n	800414c <HAL_RCC_OscConfig+0x694>
 800416a:	e024      	b.n	80041b6 <HAL_RCC_OscConfig+0x6fe>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004170:	2b01      	cmp	r3, #1
 8004172:	d101      	bne.n	8004178 <HAL_RCC_OscConfig+0x6c0>
      {
        return HAL_ERROR;
 8004174:	2301      	movs	r3, #1
 8004176:	e01f      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8004178:	4b11      	ldr	r3, [pc, #68]	; (80041c0 <HAL_RCC_OscConfig+0x708>)
 800417a:	685b      	ldr	r3, [r3, #4]
 800417c:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 800417e:	4b10      	ldr	r3, [pc, #64]	; (80041c0 <HAL_RCC_OscConfig+0x708>)
 8004180:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004182:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004184:	697a      	ldr	r2, [r7, #20]
 8004186:	23c0      	movs	r3, #192	; 0xc0
 8004188:	025b      	lsls	r3, r3, #9
 800418a:	401a      	ands	r2, r3
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004190:	429a      	cmp	r2, r3
 8004192:	d10e      	bne.n	80041b2 <HAL_RCC_OscConfig+0x6fa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8004194:	693b      	ldr	r3, [r7, #16]
 8004196:	220f      	movs	r2, #15
 8004198:	401a      	ands	r2, r3
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800419e:	429a      	cmp	r2, r3
 80041a0:	d107      	bne.n	80041b2 <HAL_RCC_OscConfig+0x6fa>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 80041a2:	697a      	ldr	r2, [r7, #20]
 80041a4:	23f0      	movs	r3, #240	; 0xf0
 80041a6:	039b      	lsls	r3, r3, #14
 80041a8:	401a      	ands	r2, r3
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80041ae:	429a      	cmp	r2, r3
 80041b0:	d001      	beq.n	80041b6 <HAL_RCC_OscConfig+0x6fe>
        {
          return HAL_ERROR;
 80041b2:	2301      	movs	r3, #1
 80041b4:	e000      	b.n	80041b8 <HAL_RCC_OscConfig+0x700>
        }
      }
    }
  }

  return HAL_OK;
 80041b6:	2300      	movs	r3, #0
}
 80041b8:	0018      	movs	r0, r3
 80041ba:	46bd      	mov	sp, r7
 80041bc:	b008      	add	sp, #32
 80041be:	bd80      	pop	{r7, pc}
 80041c0:	40021000 	.word	0x40021000

080041c4 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80041c4:	b580      	push	{r7, lr}
 80041c6:	b084      	sub	sp, #16
 80041c8:	af00      	add	r7, sp, #0
 80041ca:	6078      	str	r0, [r7, #4]
 80041cc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	d101      	bne.n	80041d8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80041d4:	2301      	movs	r3, #1
 80041d6:	e0bf      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80041d8:	4b61      	ldr	r3, [pc, #388]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	2201      	movs	r2, #1
 80041de:	4013      	ands	r3, r2
 80041e0:	683a      	ldr	r2, [r7, #0]
 80041e2:	429a      	cmp	r2, r3
 80041e4:	d911      	bls.n	800420a <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80041e6:	4b5e      	ldr	r3, [pc, #376]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	2201      	movs	r2, #1
 80041ec:	4393      	bics	r3, r2
 80041ee:	0019      	movs	r1, r3
 80041f0:	4b5b      	ldr	r3, [pc, #364]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80041f2:	683a      	ldr	r2, [r7, #0]
 80041f4:	430a      	orrs	r2, r1
 80041f6:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80041f8:	4b59      	ldr	r3, [pc, #356]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	2201      	movs	r2, #1
 80041fe:	4013      	ands	r3, r2
 8004200:	683a      	ldr	r2, [r7, #0]
 8004202:	429a      	cmp	r2, r3
 8004204:	d001      	beq.n	800420a <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8004206:	2301      	movs	r3, #1
 8004208:	e0a6      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	2202      	movs	r2, #2
 8004210:	4013      	ands	r3, r2
 8004212:	d015      	beq.n	8004240 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	2204      	movs	r2, #4
 800421a:	4013      	ands	r3, r2
 800421c:	d006      	beq.n	800422c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 800421e:	4b51      	ldr	r3, [pc, #324]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004220:	685a      	ldr	r2, [r3, #4]
 8004222:	4b50      	ldr	r3, [pc, #320]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004224:	21e0      	movs	r1, #224	; 0xe0
 8004226:	00c9      	lsls	r1, r1, #3
 8004228:	430a      	orrs	r2, r1
 800422a:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800422c:	4b4d      	ldr	r3, [pc, #308]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 800422e:	685b      	ldr	r3, [r3, #4]
 8004230:	22f0      	movs	r2, #240	; 0xf0
 8004232:	4393      	bics	r3, r2
 8004234:	0019      	movs	r1, r3
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	689a      	ldr	r2, [r3, #8]
 800423a:	4b4a      	ldr	r3, [pc, #296]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 800423c:	430a      	orrs	r2, r1
 800423e:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	2201      	movs	r2, #1
 8004246:	4013      	ands	r3, r2
 8004248:	d04c      	beq.n	80042e4 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	685b      	ldr	r3, [r3, #4]
 800424e:	2b01      	cmp	r3, #1
 8004250:	d107      	bne.n	8004262 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004252:	4b44      	ldr	r3, [pc, #272]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004254:	681a      	ldr	r2, [r3, #0]
 8004256:	2380      	movs	r3, #128	; 0x80
 8004258:	029b      	lsls	r3, r3, #10
 800425a:	4013      	ands	r3, r2
 800425c:	d120      	bne.n	80042a0 <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 800425e:	2301      	movs	r3, #1
 8004260:	e07a      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	685b      	ldr	r3, [r3, #4]
 8004266:	2b02      	cmp	r3, #2
 8004268:	d107      	bne.n	800427a <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800426a:	4b3e      	ldr	r3, [pc, #248]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 800426c:	681a      	ldr	r2, [r3, #0]
 800426e:	2380      	movs	r3, #128	; 0x80
 8004270:	049b      	lsls	r3, r3, #18
 8004272:	4013      	ands	r3, r2
 8004274:	d114      	bne.n	80042a0 <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 8004276:	2301      	movs	r3, #1
 8004278:	e06e      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
      }
    }
#if defined(RCC_CFGR_SWS_HSI48)
    /* HSI48 is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	685b      	ldr	r3, [r3, #4]
 800427e:	2b03      	cmp	r3, #3
 8004280:	d107      	bne.n	8004292 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the HSI48 ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 8004282:	4b38      	ldr	r3, [pc, #224]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004284:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004286:	2380      	movs	r3, #128	; 0x80
 8004288:	025b      	lsls	r3, r3, #9
 800428a:	4013      	ands	r3, r2
 800428c:	d108      	bne.n	80042a0 <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 800428e:	2301      	movs	r3, #1
 8004290:	e062      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004292:	4b34      	ldr	r3, [pc, #208]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	2202      	movs	r2, #2
 8004298:	4013      	ands	r3, r2
 800429a:	d101      	bne.n	80042a0 <HAL_RCC_ClockConfig+0xdc>
      {
        return HAL_ERROR;
 800429c:	2301      	movs	r3, #1
 800429e:	e05b      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80042a0:	4b30      	ldr	r3, [pc, #192]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 80042a2:	685b      	ldr	r3, [r3, #4]
 80042a4:	2203      	movs	r2, #3
 80042a6:	4393      	bics	r3, r2
 80042a8:	0019      	movs	r1, r3
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	685a      	ldr	r2, [r3, #4]
 80042ae:	4b2d      	ldr	r3, [pc, #180]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 80042b0:	430a      	orrs	r2, r1
 80042b2:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80042b4:	f7ff f9a0 	bl	80035f8 <HAL_GetTick>
 80042b8:	0003      	movs	r3, r0
 80042ba:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80042bc:	e009      	b.n	80042d2 <HAL_RCC_ClockConfig+0x10e>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80042be:	f7ff f99b 	bl	80035f8 <HAL_GetTick>
 80042c2:	0002      	movs	r2, r0
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	1ad3      	subs	r3, r2, r3
 80042c8:	4a27      	ldr	r2, [pc, #156]	; (8004368 <HAL_RCC_ClockConfig+0x1a4>)
 80042ca:	4293      	cmp	r3, r2
 80042cc:	d901      	bls.n	80042d2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80042ce:	2303      	movs	r3, #3
 80042d0:	e042      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80042d2:	4b24      	ldr	r3, [pc, #144]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 80042d4:	685b      	ldr	r3, [r3, #4]
 80042d6:	220c      	movs	r2, #12
 80042d8:	401a      	ands	r2, r3
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	685b      	ldr	r3, [r3, #4]
 80042de:	009b      	lsls	r3, r3, #2
 80042e0:	429a      	cmp	r2, r3
 80042e2:	d1ec      	bne.n	80042be <HAL_RCC_ClockConfig+0xfa>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80042e4:	4b1e      	ldr	r3, [pc, #120]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	2201      	movs	r2, #1
 80042ea:	4013      	ands	r3, r2
 80042ec:	683a      	ldr	r2, [r7, #0]
 80042ee:	429a      	cmp	r2, r3
 80042f0:	d211      	bcs.n	8004316 <HAL_RCC_ClockConfig+0x152>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80042f2:	4b1b      	ldr	r3, [pc, #108]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	2201      	movs	r2, #1
 80042f8:	4393      	bics	r3, r2
 80042fa:	0019      	movs	r1, r3
 80042fc:	4b18      	ldr	r3, [pc, #96]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 80042fe:	683a      	ldr	r2, [r7, #0]
 8004300:	430a      	orrs	r2, r1
 8004302:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004304:	4b16      	ldr	r3, [pc, #88]	; (8004360 <HAL_RCC_ClockConfig+0x19c>)
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	2201      	movs	r2, #1
 800430a:	4013      	ands	r3, r2
 800430c:	683a      	ldr	r2, [r7, #0]
 800430e:	429a      	cmp	r2, r3
 8004310:	d001      	beq.n	8004316 <HAL_RCC_ClockConfig+0x152>
    {
      return HAL_ERROR;
 8004312:	2301      	movs	r3, #1
 8004314:	e020      	b.n	8004358 <HAL_RCC_ClockConfig+0x194>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	2204      	movs	r2, #4
 800431c:	4013      	ands	r3, r2
 800431e:	d009      	beq.n	8004334 <HAL_RCC_ClockConfig+0x170>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8004320:	4b10      	ldr	r3, [pc, #64]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004322:	685b      	ldr	r3, [r3, #4]
 8004324:	4a11      	ldr	r2, [pc, #68]	; (800436c <HAL_RCC_ClockConfig+0x1a8>)
 8004326:	4013      	ands	r3, r2
 8004328:	0019      	movs	r1, r3
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	68da      	ldr	r2, [r3, #12]
 800432e:	4b0d      	ldr	r3, [pc, #52]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 8004330:	430a      	orrs	r2, r1
 8004332:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8004334:	f000 f820 	bl	8004378 <HAL_RCC_GetSysClockFreq>
 8004338:	0001      	movs	r1, r0
 800433a:	4b0a      	ldr	r3, [pc, #40]	; (8004364 <HAL_RCC_ClockConfig+0x1a0>)
 800433c:	685b      	ldr	r3, [r3, #4]
 800433e:	091b      	lsrs	r3, r3, #4
 8004340:	220f      	movs	r2, #15
 8004342:	4013      	ands	r3, r2
 8004344:	4a0a      	ldr	r2, [pc, #40]	; (8004370 <HAL_RCC_ClockConfig+0x1ac>)
 8004346:	5cd3      	ldrb	r3, [r2, r3]
 8004348:	000a      	movs	r2, r1
 800434a:	40da      	lsrs	r2, r3
 800434c:	4b09      	ldr	r3, [pc, #36]	; (8004374 <HAL_RCC_ClockConfig+0x1b0>)
 800434e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8004350:	2000      	movs	r0, #0
 8004352:	f7ff f90b 	bl	800356c <HAL_InitTick>
  
  return HAL_OK;
 8004356:	2300      	movs	r3, #0
}
 8004358:	0018      	movs	r0, r3
 800435a:	46bd      	mov	sp, r7
 800435c:	b004      	add	sp, #16
 800435e:	bd80      	pop	{r7, pc}
 8004360:	40022000 	.word	0x40022000
 8004364:	40021000 	.word	0x40021000
 8004368:	00001388 	.word	0x00001388
 800436c:	fffff8ff 	.word	0xfffff8ff
 8004370:	080063c0 	.word	0x080063c0
 8004374:	20000040 	.word	0x20000040

08004378 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004378:	b590      	push	{r4, r7, lr}
 800437a:	b08f      	sub	sp, #60	; 0x3c
 800437c:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 800437e:	2314      	movs	r3, #20
 8004380:	18fb      	adds	r3, r7, r3
 8004382:	4a37      	ldr	r2, [pc, #220]	; (8004460 <HAL_RCC_GetSysClockFreq+0xe8>)
 8004384:	ca13      	ldmia	r2!, {r0, r1, r4}
 8004386:	c313      	stmia	r3!, {r0, r1, r4}
 8004388:	6812      	ldr	r2, [r2, #0]
 800438a:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 800438c:	1d3b      	adds	r3, r7, #4
 800438e:	4a35      	ldr	r2, [pc, #212]	; (8004464 <HAL_RCC_GetSysClockFreq+0xec>)
 8004390:	ca13      	ldmia	r2!, {r0, r1, r4}
 8004392:	c313      	stmia	r3!, {r0, r1, r4}
 8004394:	6812      	ldr	r2, [r2, #0]
 8004396:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8004398:	2300      	movs	r3, #0
 800439a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800439c:	2300      	movs	r3, #0
 800439e:	62bb      	str	r3, [r7, #40]	; 0x28
 80043a0:	2300      	movs	r3, #0
 80043a2:	637b      	str	r3, [r7, #52]	; 0x34
 80043a4:	2300      	movs	r3, #0
 80043a6:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 80043a8:	2300      	movs	r3, #0
 80043aa:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 80043ac:	4b2e      	ldr	r3, [pc, #184]	; (8004468 <HAL_RCC_GetSysClockFreq+0xf0>)
 80043ae:	685b      	ldr	r3, [r3, #4]
 80043b0:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80043b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043b4:	220c      	movs	r2, #12
 80043b6:	4013      	ands	r3, r2
 80043b8:	2b08      	cmp	r3, #8
 80043ba:	d006      	beq.n	80043ca <HAL_RCC_GetSysClockFreq+0x52>
 80043bc:	2b0c      	cmp	r3, #12
 80043be:	d043      	beq.n	8004448 <HAL_RCC_GetSysClockFreq+0xd0>
 80043c0:	2b04      	cmp	r3, #4
 80043c2:	d144      	bne.n	800444e <HAL_RCC_GetSysClockFreq+0xd6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80043c4:	4b29      	ldr	r3, [pc, #164]	; (800446c <HAL_RCC_GetSysClockFreq+0xf4>)
 80043c6:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80043c8:	e044      	b.n	8004454 <HAL_RCC_GetSysClockFreq+0xdc>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 80043ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043cc:	0c9b      	lsrs	r3, r3, #18
 80043ce:	220f      	movs	r2, #15
 80043d0:	4013      	ands	r3, r2
 80043d2:	2214      	movs	r2, #20
 80043d4:	18ba      	adds	r2, r7, r2
 80043d6:	5cd3      	ldrb	r3, [r2, r3]
 80043d8:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 80043da:	4b23      	ldr	r3, [pc, #140]	; (8004468 <HAL_RCC_GetSysClockFreq+0xf0>)
 80043dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043de:	220f      	movs	r2, #15
 80043e0:	4013      	ands	r3, r2
 80043e2:	1d3a      	adds	r2, r7, #4
 80043e4:	5cd3      	ldrb	r3, [r2, r3]
 80043e6:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 80043e8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80043ea:	23c0      	movs	r3, #192	; 0xc0
 80043ec:	025b      	lsls	r3, r3, #9
 80043ee:	401a      	ands	r2, r3
 80043f0:	2380      	movs	r3, #128	; 0x80
 80043f2:	025b      	lsls	r3, r3, #9
 80043f4:	429a      	cmp	r2, r3
 80043f6:	d109      	bne.n	800440c <HAL_RCC_GetSysClockFreq+0x94>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80043f8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80043fa:	481c      	ldr	r0, [pc, #112]	; (800446c <HAL_RCC_GetSysClockFreq+0xf4>)
 80043fc:	f7fb fe8e 	bl	800011c <__udivsi3>
 8004400:	0003      	movs	r3, r0
 8004402:	001a      	movs	r2, r3
 8004404:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004406:	4353      	muls	r3, r2
 8004408:	637b      	str	r3, [r7, #52]	; 0x34
 800440a:	e01a      	b.n	8004442 <HAL_RCC_GetSysClockFreq+0xca>
      }
#if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
      else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 800440c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800440e:	23c0      	movs	r3, #192	; 0xc0
 8004410:	025b      	lsls	r3, r3, #9
 8004412:	401a      	ands	r2, r3
 8004414:	23c0      	movs	r3, #192	; 0xc0
 8004416:	025b      	lsls	r3, r3, #9
 8004418:	429a      	cmp	r2, r3
 800441a:	d109      	bne.n	8004430 <HAL_RCC_GetSysClockFreq+0xb8>
      {
        /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI48_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 800441c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800441e:	4814      	ldr	r0, [pc, #80]	; (8004470 <HAL_RCC_GetSysClockFreq+0xf8>)
 8004420:	f7fb fe7c 	bl	800011c <__udivsi3>
 8004424:	0003      	movs	r3, r0
 8004426:	001a      	movs	r2, r3
 8004428:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800442a:	4353      	muls	r3, r2
 800442c:	637b      	str	r3, [r7, #52]	; 0x34
 800442e:	e008      	b.n	8004442 <HAL_RCC_GetSysClockFreq+0xca>
#endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
      else
      {
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8004430:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8004432:	4810      	ldr	r0, [pc, #64]	; (8004474 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004434:	f7fb fe72 	bl	800011c <__udivsi3>
 8004438:	0003      	movs	r3, r0
 800443a:	001a      	movs	r2, r3
 800443c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800443e:	4353      	muls	r3, r2
 8004440:	637b      	str	r3, [r7, #52]	; 0x34
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
#endif
      }
      sysclockfreq = pllclk;
 8004442:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004444:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8004446:	e005      	b.n	8004454 <HAL_RCC_GetSysClockFreq+0xdc>
    }
#if defined(RCC_CFGR_SWS_HSI48)
    case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
    {
      sysclockfreq = HSI48_VALUE;
 8004448:	4b09      	ldr	r3, [pc, #36]	; (8004470 <HAL_RCC_GetSysClockFreq+0xf8>)
 800444a:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800444c:	e002      	b.n	8004454 <HAL_RCC_GetSysClockFreq+0xdc>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 800444e:	4b09      	ldr	r3, [pc, #36]	; (8004474 <HAL_RCC_GetSysClockFreq+0xfc>)
 8004450:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8004452:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8004454:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8004456:	0018      	movs	r0, r3
 8004458:	46bd      	mov	sp, r7
 800445a:	b00f      	add	sp, #60	; 0x3c
 800445c:	bd90      	pop	{r4, r7, pc}
 800445e:	46c0      	nop			; (mov r8, r8)
 8004460:	080062e0 	.word	0x080062e0
 8004464:	080062f0 	.word	0x080062f0
 8004468:	40021000 	.word	0x40021000
 800446c:	00b71b00 	.word	0x00b71b00
 8004470:	02dc6c00 	.word	0x02dc6c00
 8004474:	007a1200 	.word	0x007a1200

08004478 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8004478:	b580      	push	{r7, lr}
 800447a:	b084      	sub	sp, #16
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	2b00      	cmp	r3, #0
 8004484:	d101      	bne.n	800448a <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8004486:	2301      	movs	r3, #1
 8004488:	e0a8      	b.n	80045dc <HAL_SPI_Init+0x164>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800448e:	2b00      	cmp	r3, #0
 8004490:	d109      	bne.n	80044a6 <HAL_SPI_Init+0x2e>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	685a      	ldr	r2, [r3, #4]
 8004496:	2382      	movs	r3, #130	; 0x82
 8004498:	005b      	lsls	r3, r3, #1
 800449a:	429a      	cmp	r2, r3
 800449c:	d009      	beq.n	80044b2 <HAL_SPI_Init+0x3a>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	2200      	movs	r2, #0
 80044a2:	61da      	str	r2, [r3, #28]
 80044a4:	e005      	b.n	80044b2 <HAL_SPI_Init+0x3a>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	2200      	movs	r2, #0
 80044aa:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	2200      	movs	r2, #0
 80044b0:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	2200      	movs	r2, #0
 80044b6:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	225d      	movs	r2, #93	; 0x5d
 80044bc:	5c9b      	ldrb	r3, [r3, r2]
 80044be:	b2db      	uxtb	r3, r3
 80044c0:	2b00      	cmp	r3, #0
 80044c2:	d107      	bne.n	80044d4 <HAL_SPI_Init+0x5c>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	225c      	movs	r2, #92	; 0x5c
 80044c8:	2100      	movs	r1, #0
 80044ca:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	0018      	movs	r0, r3
 80044d0:	f7fe ff8e 	bl	80033f0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	225d      	movs	r2, #93	; 0x5d
 80044d8:	2102      	movs	r1, #2
 80044da:	5499      	strb	r1, [r3, r2]

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	681a      	ldr	r2, [r3, #0]
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	2140      	movs	r1, #64	; 0x40
 80044e8:	438a      	bics	r2, r1
 80044ea:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	68da      	ldr	r2, [r3, #12]
 80044f0:	23e0      	movs	r3, #224	; 0xe0
 80044f2:	00db      	lsls	r3, r3, #3
 80044f4:	429a      	cmp	r2, r3
 80044f6:	d902      	bls.n	80044fe <HAL_SPI_Init+0x86>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80044f8:	2300      	movs	r3, #0
 80044fa:	60fb      	str	r3, [r7, #12]
 80044fc:	e002      	b.n	8004504 <HAL_SPI_Init+0x8c>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 80044fe:	2380      	movs	r3, #128	; 0x80
 8004500:	015b      	lsls	r3, r3, #5
 8004502:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	68da      	ldr	r2, [r3, #12]
 8004508:	23f0      	movs	r3, #240	; 0xf0
 800450a:	011b      	lsls	r3, r3, #4
 800450c:	429a      	cmp	r2, r3
 800450e:	d008      	beq.n	8004522 <HAL_SPI_Init+0xaa>
 8004510:	687b      	ldr	r3, [r7, #4]
 8004512:	68da      	ldr	r2, [r3, #12]
 8004514:	23e0      	movs	r3, #224	; 0xe0
 8004516:	00db      	lsls	r3, r3, #3
 8004518:	429a      	cmp	r2, r3
 800451a:	d002      	beq.n	8004522 <HAL_SPI_Init+0xaa>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	2200      	movs	r2, #0
 8004520:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	685a      	ldr	r2, [r3, #4]
 8004526:	2382      	movs	r3, #130	; 0x82
 8004528:	005b      	lsls	r3, r3, #1
 800452a:	401a      	ands	r2, r3
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	6899      	ldr	r1, [r3, #8]
 8004530:	2384      	movs	r3, #132	; 0x84
 8004532:	021b      	lsls	r3, r3, #8
 8004534:	400b      	ands	r3, r1
 8004536:	431a      	orrs	r2, r3
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	691b      	ldr	r3, [r3, #16]
 800453c:	2102      	movs	r1, #2
 800453e:	400b      	ands	r3, r1
 8004540:	431a      	orrs	r2, r3
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	695b      	ldr	r3, [r3, #20]
 8004546:	2101      	movs	r1, #1
 8004548:	400b      	ands	r3, r1
 800454a:	431a      	orrs	r2, r3
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	6999      	ldr	r1, [r3, #24]
 8004550:	2380      	movs	r3, #128	; 0x80
 8004552:	009b      	lsls	r3, r3, #2
 8004554:	400b      	ands	r3, r1
 8004556:	431a      	orrs	r2, r3
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	69db      	ldr	r3, [r3, #28]
 800455c:	2138      	movs	r1, #56	; 0x38
 800455e:	400b      	ands	r3, r1
 8004560:	431a      	orrs	r2, r3
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	6a1b      	ldr	r3, [r3, #32]
 8004566:	2180      	movs	r1, #128	; 0x80
 8004568:	400b      	ands	r3, r1
 800456a:	431a      	orrs	r2, r3
 800456c:	0011      	movs	r1, r2
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004572:	2380      	movs	r3, #128	; 0x80
 8004574:	019b      	lsls	r3, r3, #6
 8004576:	401a      	ands	r2, r3
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	430a      	orrs	r2, r1
 800457e:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	699b      	ldr	r3, [r3, #24]
 8004584:	0c1b      	lsrs	r3, r3, #16
 8004586:	2204      	movs	r2, #4
 8004588:	401a      	ands	r2, r3
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800458e:	2110      	movs	r1, #16
 8004590:	400b      	ands	r3, r1
 8004592:	431a      	orrs	r2, r3
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004598:	2108      	movs	r1, #8
 800459a:	400b      	ands	r3, r1
 800459c:	431a      	orrs	r2, r3
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	68d9      	ldr	r1, [r3, #12]
 80045a2:	23f0      	movs	r3, #240	; 0xf0
 80045a4:	011b      	lsls	r3, r3, #4
 80045a6:	400b      	ands	r3, r1
 80045a8:	431a      	orrs	r2, r3
 80045aa:	0011      	movs	r1, r2
 80045ac:	68fa      	ldr	r2, [r7, #12]
 80045ae:	2380      	movs	r3, #128	; 0x80
 80045b0:	015b      	lsls	r3, r3, #5
 80045b2:	401a      	ands	r2, r3
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	430a      	orrs	r2, r1
 80045ba:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	69da      	ldr	r2, [r3, #28]
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	4907      	ldr	r1, [pc, #28]	; (80045e4 <HAL_SPI_Init+0x16c>)
 80045c8:	400a      	ands	r2, r1
 80045ca:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	2200      	movs	r2, #0
 80045d0:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	225d      	movs	r2, #93	; 0x5d
 80045d6:	2101      	movs	r1, #1
 80045d8:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80045da:	2300      	movs	r3, #0
}
 80045dc:	0018      	movs	r0, r3
 80045de:	46bd      	mov	sp, r7
 80045e0:	b004      	add	sp, #16
 80045e2:	bd80      	pop	{r7, pc}
 80045e4:	fffff7ff 	.word	0xfffff7ff

080045e8 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80045e8:	b580      	push	{r7, lr}
 80045ea:	b088      	sub	sp, #32
 80045ec:	af00      	add	r7, sp, #0
 80045ee:	60f8      	str	r0, [r7, #12]
 80045f0:	60b9      	str	r1, [r7, #8]
 80045f2:	603b      	str	r3, [r7, #0]
 80045f4:	1dbb      	adds	r3, r7, #6
 80045f6:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 80045f8:	231f      	movs	r3, #31
 80045fa:	18fb      	adds	r3, r7, r3
 80045fc:	2200      	movs	r2, #0
 80045fe:	701a      	strb	r2, [r3, #0]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8004600:	68fb      	ldr	r3, [r7, #12]
 8004602:	225c      	movs	r2, #92	; 0x5c
 8004604:	5c9b      	ldrb	r3, [r3, r2]
 8004606:	2b01      	cmp	r3, #1
 8004608:	d101      	bne.n	800460e <HAL_SPI_Transmit+0x26>
 800460a:	2302      	movs	r3, #2
 800460c:	e140      	b.n	8004890 <HAL_SPI_Transmit+0x2a8>
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	225c      	movs	r2, #92	; 0x5c
 8004612:	2101      	movs	r1, #1
 8004614:	5499      	strb	r1, [r3, r2]

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8004616:	f7fe ffef 	bl	80035f8 <HAL_GetTick>
 800461a:	0003      	movs	r3, r0
 800461c:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 800461e:	2316      	movs	r3, #22
 8004620:	18fb      	adds	r3, r7, r3
 8004622:	1dba      	adds	r2, r7, #6
 8004624:	8812      	ldrh	r2, [r2, #0]
 8004626:	801a      	strh	r2, [r3, #0]

  if (hspi->State != HAL_SPI_STATE_READY)
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	225d      	movs	r2, #93	; 0x5d
 800462c:	5c9b      	ldrb	r3, [r3, r2]
 800462e:	b2db      	uxtb	r3, r3
 8004630:	2b01      	cmp	r3, #1
 8004632:	d004      	beq.n	800463e <HAL_SPI_Transmit+0x56>
  {
    errorcode = HAL_BUSY;
 8004634:	231f      	movs	r3, #31
 8004636:	18fb      	adds	r3, r7, r3
 8004638:	2202      	movs	r2, #2
 800463a:	701a      	strb	r2, [r3, #0]
    goto error;
 800463c:	e11d      	b.n	800487a <HAL_SPI_Transmit+0x292>
  }

  if ((pData == NULL) || (Size == 0U))
 800463e:	68bb      	ldr	r3, [r7, #8]
 8004640:	2b00      	cmp	r3, #0
 8004642:	d003      	beq.n	800464c <HAL_SPI_Transmit+0x64>
 8004644:	1dbb      	adds	r3, r7, #6
 8004646:	881b      	ldrh	r3, [r3, #0]
 8004648:	2b00      	cmp	r3, #0
 800464a:	d104      	bne.n	8004656 <HAL_SPI_Transmit+0x6e>
  {
    errorcode = HAL_ERROR;
 800464c:	231f      	movs	r3, #31
 800464e:	18fb      	adds	r3, r7, r3
 8004650:	2201      	movs	r2, #1
 8004652:	701a      	strb	r2, [r3, #0]
    goto error;
 8004654:	e111      	b.n	800487a <HAL_SPI_Transmit+0x292>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	225d      	movs	r2, #93	; 0x5d
 800465a:	2103      	movs	r1, #3
 800465c:	5499      	strb	r1, [r3, r2]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	2200      	movs	r2, #0
 8004662:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	68ba      	ldr	r2, [r7, #8]
 8004668:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	1dba      	adds	r2, r7, #6
 800466e:	8812      	ldrh	r2, [r2, #0]
 8004670:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 8004672:	68fb      	ldr	r3, [r7, #12]
 8004674:	1dba      	adds	r2, r7, #6
 8004676:	8812      	ldrh	r2, [r2, #0]
 8004678:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	2200      	movs	r2, #0
 800467e:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	2244      	movs	r2, #68	; 0x44
 8004684:	2100      	movs	r1, #0
 8004686:	5299      	strh	r1, [r3, r2]
  hspi->RxXferCount = 0U;
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	2246      	movs	r2, #70	; 0x46
 800468c:	2100      	movs	r1, #0
 800468e:	5299      	strh	r1, [r3, r2]
  hspi->TxISR       = NULL;
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	2200      	movs	r2, #0
 8004694:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	2200      	movs	r2, #0
 800469a:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	689a      	ldr	r2, [r3, #8]
 80046a0:	2380      	movs	r3, #128	; 0x80
 80046a2:	021b      	lsls	r3, r3, #8
 80046a4:	429a      	cmp	r2, r3
 80046a6:	d110      	bne.n	80046ca <HAL_SPI_Transmit+0xe2>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	681a      	ldr	r2, [r3, #0]
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	2140      	movs	r1, #64	; 0x40
 80046b4:	438a      	bics	r2, r1
 80046b6:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	681a      	ldr	r2, [r3, #0]
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	2180      	movs	r1, #128	; 0x80
 80046c4:	01c9      	lsls	r1, r1, #7
 80046c6:	430a      	orrs	r2, r1
 80046c8:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80046ca:	68fb      	ldr	r3, [r7, #12]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	681b      	ldr	r3, [r3, #0]
 80046d0:	2240      	movs	r2, #64	; 0x40
 80046d2:	4013      	ands	r3, r2
 80046d4:	2b40      	cmp	r3, #64	; 0x40
 80046d6:	d007      	beq.n	80046e8 <HAL_SPI_Transmit+0x100>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	681a      	ldr	r2, [r3, #0]
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	2140      	movs	r1, #64	; 0x40
 80046e4:	430a      	orrs	r2, r1
 80046e6:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80046e8:	68fb      	ldr	r3, [r7, #12]
 80046ea:	68da      	ldr	r2, [r3, #12]
 80046ec:	23e0      	movs	r3, #224	; 0xe0
 80046ee:	00db      	lsls	r3, r3, #3
 80046f0:	429a      	cmp	r2, r3
 80046f2:	d94e      	bls.n	8004792 <HAL_SPI_Transmit+0x1aa>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80046f4:	68fb      	ldr	r3, [r7, #12]
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d004      	beq.n	8004706 <HAL_SPI_Transmit+0x11e>
 80046fc:	2316      	movs	r3, #22
 80046fe:	18fb      	adds	r3, r7, r3
 8004700:	881b      	ldrh	r3, [r3, #0]
 8004702:	2b01      	cmp	r3, #1
 8004704:	d13f      	bne.n	8004786 <HAL_SPI_Transmit+0x19e>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800470a:	881a      	ldrh	r2, [r3, #0]
 800470c:	68fb      	ldr	r3, [r7, #12]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004716:	1c9a      	adds	r2, r3, #2
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004720:	b29b      	uxth	r3, r3
 8004722:	3b01      	subs	r3, #1
 8004724:	b29a      	uxth	r2, r3
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 800472a:	e02c      	b.n	8004786 <HAL_SPI_Transmit+0x19e>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	689b      	ldr	r3, [r3, #8]
 8004732:	2202      	movs	r2, #2
 8004734:	4013      	ands	r3, r2
 8004736:	2b02      	cmp	r3, #2
 8004738:	d112      	bne.n	8004760 <HAL_SPI_Transmit+0x178>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800473e:	881a      	ldrh	r2, [r3, #0]
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800474a:	1c9a      	adds	r2, r3, #2
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8004750:	68fb      	ldr	r3, [r7, #12]
 8004752:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8004754:	b29b      	uxth	r3, r3
 8004756:	3b01      	subs	r3, #1
 8004758:	b29a      	uxth	r2, r3
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800475e:	e012      	b.n	8004786 <HAL_SPI_Transmit+0x19e>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004760:	f7fe ff4a 	bl	80035f8 <HAL_GetTick>
 8004764:	0002      	movs	r2, r0
 8004766:	69bb      	ldr	r3, [r7, #24]
 8004768:	1ad3      	subs	r3, r2, r3
 800476a:	683a      	ldr	r2, [r7, #0]
 800476c:	429a      	cmp	r2, r3
 800476e:	d802      	bhi.n	8004776 <HAL_SPI_Transmit+0x18e>
 8004770:	683b      	ldr	r3, [r7, #0]
 8004772:	3301      	adds	r3, #1
 8004774:	d102      	bne.n	800477c <HAL_SPI_Transmit+0x194>
 8004776:	683b      	ldr	r3, [r7, #0]
 8004778:	2b00      	cmp	r3, #0
 800477a:	d104      	bne.n	8004786 <HAL_SPI_Transmit+0x19e>
        {
          errorcode = HAL_TIMEOUT;
 800477c:	231f      	movs	r3, #31
 800477e:	18fb      	adds	r3, r7, r3
 8004780:	2203      	movs	r2, #3
 8004782:	701a      	strb	r2, [r3, #0]
          goto error;
 8004784:	e079      	b.n	800487a <HAL_SPI_Transmit+0x292>
    while (hspi->TxXferCount > 0U)
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800478a:	b29b      	uxth	r3, r3
 800478c:	2b00      	cmp	r3, #0
 800478e:	d1cd      	bne.n	800472c <HAL_SPI_Transmit+0x144>
 8004790:	e04f      	b.n	8004832 <HAL_SPI_Transmit+0x24a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	685b      	ldr	r3, [r3, #4]
 8004796:	2b00      	cmp	r3, #0
 8004798:	d004      	beq.n	80047a4 <HAL_SPI_Transmit+0x1bc>
 800479a:	2316      	movs	r3, #22
 800479c:	18fb      	adds	r3, r7, r3
 800479e:	881b      	ldrh	r3, [r3, #0]
 80047a0:	2b01      	cmp	r3, #1
 80047a2:	d141      	bne.n	8004828 <HAL_SPI_Transmit+0x240>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80047a8:	68fb      	ldr	r3, [r7, #12]
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	330c      	adds	r3, #12
 80047ae:	7812      	ldrb	r2, [r2, #0]
 80047b0:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80047b6:	1c5a      	adds	r2, r3, #1
 80047b8:	68fb      	ldr	r3, [r7, #12]
 80047ba:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80047c0:	b29b      	uxth	r3, r3
 80047c2:	3b01      	subs	r3, #1
 80047c4:	b29a      	uxth	r2, r3
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    while (hspi->TxXferCount > 0U)
 80047ca:	e02d      	b.n	8004828 <HAL_SPI_Transmit+0x240>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	689b      	ldr	r3, [r3, #8]
 80047d2:	2202      	movs	r2, #2
 80047d4:	4013      	ands	r3, r2
 80047d6:	2b02      	cmp	r3, #2
 80047d8:	d113      	bne.n	8004802 <HAL_SPI_Transmit+0x21a>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80047da:	68fb      	ldr	r3, [r7, #12]
 80047dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	330c      	adds	r3, #12
 80047e4:	7812      	ldrb	r2, [r2, #0]
 80047e6:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80047ec:	1c5a      	adds	r2, r3, #1
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80047f6:	b29b      	uxth	r3, r3
 80047f8:	3b01      	subs	r3, #1
 80047fa:	b29a      	uxth	r2, r3
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004800:	e012      	b.n	8004828 <HAL_SPI_Transmit+0x240>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004802:	f7fe fef9 	bl	80035f8 <HAL_GetTick>
 8004806:	0002      	movs	r2, r0
 8004808:	69bb      	ldr	r3, [r7, #24]
 800480a:	1ad3      	subs	r3, r2, r3
 800480c:	683a      	ldr	r2, [r7, #0]
 800480e:	429a      	cmp	r2, r3
 8004810:	d802      	bhi.n	8004818 <HAL_SPI_Transmit+0x230>
 8004812:	683b      	ldr	r3, [r7, #0]
 8004814:	3301      	adds	r3, #1
 8004816:	d102      	bne.n	800481e <HAL_SPI_Transmit+0x236>
 8004818:	683b      	ldr	r3, [r7, #0]
 800481a:	2b00      	cmp	r3, #0
 800481c:	d104      	bne.n	8004828 <HAL_SPI_Transmit+0x240>
        {
          errorcode = HAL_TIMEOUT;
 800481e:	231f      	movs	r3, #31
 8004820:	18fb      	adds	r3, r7, r3
 8004822:	2203      	movs	r2, #3
 8004824:	701a      	strb	r2, [r3, #0]
          goto error;
 8004826:	e028      	b.n	800487a <HAL_SPI_Transmit+0x292>
    while (hspi->TxXferCount > 0U)
 8004828:	68fb      	ldr	r3, [r7, #12]
 800482a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800482c:	b29b      	uxth	r3, r3
 800482e:	2b00      	cmp	r3, #0
 8004830:	d1cc      	bne.n	80047cc <HAL_SPI_Transmit+0x1e4>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8004832:	69ba      	ldr	r2, [r7, #24]
 8004834:	6839      	ldr	r1, [r7, #0]
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	0018      	movs	r0, r3
 800483a:	f000 f951 	bl	8004ae0 <SPI_EndRxTxTransaction>
 800483e:	1e03      	subs	r3, r0, #0
 8004840:	d002      	beq.n	8004848 <HAL_SPI_Transmit+0x260>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8004842:	68fb      	ldr	r3, [r7, #12]
 8004844:	2220      	movs	r2, #32
 8004846:	661a      	str	r2, [r3, #96]	; 0x60
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8004848:	68fb      	ldr	r3, [r7, #12]
 800484a:	689b      	ldr	r3, [r3, #8]
 800484c:	2b00      	cmp	r3, #0
 800484e:	d10a      	bne.n	8004866 <HAL_SPI_Transmit+0x27e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8004850:	2300      	movs	r3, #0
 8004852:	613b      	str	r3, [r7, #16]
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	68db      	ldr	r3, [r3, #12]
 800485a:	613b      	str	r3, [r7, #16]
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	689b      	ldr	r3, [r3, #8]
 8004862:	613b      	str	r3, [r7, #16]
 8004864:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800486a:	2b00      	cmp	r3, #0
 800486c:	d004      	beq.n	8004878 <HAL_SPI_Transmit+0x290>
  {
    errorcode = HAL_ERROR;
 800486e:	231f      	movs	r3, #31
 8004870:	18fb      	adds	r3, r7, r3
 8004872:	2201      	movs	r2, #1
 8004874:	701a      	strb	r2, [r3, #0]
 8004876:	e000      	b.n	800487a <HAL_SPI_Transmit+0x292>
  }

error:
 8004878:	46c0      	nop			; (mov r8, r8)
  hspi->State = HAL_SPI_STATE_READY;
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	225d      	movs	r2, #93	; 0x5d
 800487e:	2101      	movs	r1, #1
 8004880:	5499      	strb	r1, [r3, r2]
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	225c      	movs	r2, #92	; 0x5c
 8004886:	2100      	movs	r1, #0
 8004888:	5499      	strb	r1, [r3, r2]
  return errorcode;
 800488a:	231f      	movs	r3, #31
 800488c:	18fb      	adds	r3, r7, r3
 800488e:	781b      	ldrb	r3, [r3, #0]
}
 8004890:	0018      	movs	r0, r3
 8004892:	46bd      	mov	sp, r7
 8004894:	b008      	add	sp, #32
 8004896:	bd80      	pop	{r7, pc}

08004898 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8004898:	b580      	push	{r7, lr}
 800489a:	b088      	sub	sp, #32
 800489c:	af00      	add	r7, sp, #0
 800489e:	60f8      	str	r0, [r7, #12]
 80048a0:	60b9      	str	r1, [r7, #8]
 80048a2:	603b      	str	r3, [r7, #0]
 80048a4:	1dfb      	adds	r3, r7, #7
 80048a6:	701a      	strb	r2, [r3, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80048a8:	f7fe fea6 	bl	80035f8 <HAL_GetTick>
 80048ac:	0002      	movs	r2, r0
 80048ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048b0:	1a9b      	subs	r3, r3, r2
 80048b2:	683a      	ldr	r2, [r7, #0]
 80048b4:	18d3      	adds	r3, r2, r3
 80048b6:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 80048b8:	f7fe fe9e 	bl	80035f8 <HAL_GetTick>
 80048bc:	0003      	movs	r3, r0
 80048be:	61bb      	str	r3, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80048c0:	4b3a      	ldr	r3, [pc, #232]	; (80049ac <SPI_WaitFlagStateUntilTimeout+0x114>)
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	015b      	lsls	r3, r3, #5
 80048c6:	0d1b      	lsrs	r3, r3, #20
 80048c8:	69fa      	ldr	r2, [r7, #28]
 80048ca:	4353      	muls	r3, r2
 80048cc:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80048ce:	e058      	b.n	8004982 <SPI_WaitFlagStateUntilTimeout+0xea>
  {
    if (Timeout != HAL_MAX_DELAY)
 80048d0:	683b      	ldr	r3, [r7, #0]
 80048d2:	3301      	adds	r3, #1
 80048d4:	d055      	beq.n	8004982 <SPI_WaitFlagStateUntilTimeout+0xea>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80048d6:	f7fe fe8f 	bl	80035f8 <HAL_GetTick>
 80048da:	0002      	movs	r2, r0
 80048dc:	69bb      	ldr	r3, [r7, #24]
 80048de:	1ad3      	subs	r3, r2, r3
 80048e0:	69fa      	ldr	r2, [r7, #28]
 80048e2:	429a      	cmp	r2, r3
 80048e4:	d902      	bls.n	80048ec <SPI_WaitFlagStateUntilTimeout+0x54>
 80048e6:	69fb      	ldr	r3, [r7, #28]
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d142      	bne.n	8004972 <SPI_WaitFlagStateUntilTimeout+0xda>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	685a      	ldr	r2, [r3, #4]
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	21e0      	movs	r1, #224	; 0xe0
 80048f8:	438a      	bics	r2, r1
 80048fa:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	685a      	ldr	r2, [r3, #4]
 8004900:	2382      	movs	r3, #130	; 0x82
 8004902:	005b      	lsls	r3, r3, #1
 8004904:	429a      	cmp	r2, r3
 8004906:	d113      	bne.n	8004930 <SPI_WaitFlagStateUntilTimeout+0x98>
 8004908:	68fb      	ldr	r3, [r7, #12]
 800490a:	689a      	ldr	r2, [r3, #8]
 800490c:	2380      	movs	r3, #128	; 0x80
 800490e:	021b      	lsls	r3, r3, #8
 8004910:	429a      	cmp	r2, r3
 8004912:	d005      	beq.n	8004920 <SPI_WaitFlagStateUntilTimeout+0x88>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	689a      	ldr	r2, [r3, #8]
 8004918:	2380      	movs	r3, #128	; 0x80
 800491a:	00db      	lsls	r3, r3, #3
 800491c:	429a      	cmp	r2, r3
 800491e:	d107      	bne.n	8004930 <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8004920:	68fb      	ldr	r3, [r7, #12]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	681a      	ldr	r2, [r3, #0]
 8004926:	68fb      	ldr	r3, [r7, #12]
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	2140      	movs	r1, #64	; 0x40
 800492c:	438a      	bics	r2, r1
 800492e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8004930:	68fb      	ldr	r3, [r7, #12]
 8004932:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004934:	2380      	movs	r3, #128	; 0x80
 8004936:	019b      	lsls	r3, r3, #6
 8004938:	429a      	cmp	r2, r3
 800493a:	d110      	bne.n	800495e <SPI_WaitFlagStateUntilTimeout+0xc6>
        {
          SPI_RESET_CRC(hspi);
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	681a      	ldr	r2, [r3, #0]
 8004942:	68fb      	ldr	r3, [r7, #12]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	491a      	ldr	r1, [pc, #104]	; (80049b0 <SPI_WaitFlagStateUntilTimeout+0x118>)
 8004948:	400a      	ands	r2, r1
 800494a:	601a      	str	r2, [r3, #0]
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	681a      	ldr	r2, [r3, #0]
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	2180      	movs	r1, #128	; 0x80
 8004958:	0189      	lsls	r1, r1, #6
 800495a:	430a      	orrs	r2, r1
 800495c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800495e:	68fb      	ldr	r3, [r7, #12]
 8004960:	225d      	movs	r2, #93	; 0x5d
 8004962:	2101      	movs	r1, #1
 8004964:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	225c      	movs	r2, #92	; 0x5c
 800496a:	2100      	movs	r1, #0
 800496c:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 800496e:	2303      	movs	r3, #3
 8004970:	e017      	b.n	80049a2 <SPI_WaitFlagStateUntilTimeout+0x10a>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if(count == 0U)
 8004972:	697b      	ldr	r3, [r7, #20]
 8004974:	2b00      	cmp	r3, #0
 8004976:	d101      	bne.n	800497c <SPI_WaitFlagStateUntilTimeout+0xe4>
      {
        tmp_timeout = 0U;
 8004978:	2300      	movs	r3, #0
 800497a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 800497c:	697b      	ldr	r3, [r7, #20]
 800497e:	3b01      	subs	r3, #1
 8004980:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	689b      	ldr	r3, [r3, #8]
 8004988:	68ba      	ldr	r2, [r7, #8]
 800498a:	4013      	ands	r3, r2
 800498c:	68ba      	ldr	r2, [r7, #8]
 800498e:	1ad3      	subs	r3, r2, r3
 8004990:	425a      	negs	r2, r3
 8004992:	4153      	adcs	r3, r2
 8004994:	b2db      	uxtb	r3, r3
 8004996:	001a      	movs	r2, r3
 8004998:	1dfb      	adds	r3, r7, #7
 800499a:	781b      	ldrb	r3, [r3, #0]
 800499c:	429a      	cmp	r2, r3
 800499e:	d197      	bne.n	80048d0 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 80049a0:	2300      	movs	r3, #0
}
 80049a2:	0018      	movs	r0, r3
 80049a4:	46bd      	mov	sp, r7
 80049a6:	b008      	add	sp, #32
 80049a8:	bd80      	pop	{r7, pc}
 80049aa:	46c0      	nop			; (mov r8, r8)
 80049ac:	20000040 	.word	0x20000040
 80049b0:	ffffdfff 	.word	0xffffdfff

080049b4 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80049b4:	b580      	push	{r7, lr}
 80049b6:	b088      	sub	sp, #32
 80049b8:	af00      	add	r7, sp, #0
 80049ba:	60f8      	str	r0, [r7, #12]
 80049bc:	60b9      	str	r1, [r7, #8]
 80049be:	607a      	str	r2, [r7, #4]
 80049c0:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 80049c2:	f7fe fe19 	bl	80035f8 <HAL_GetTick>
 80049c6:	0002      	movs	r2, r0
 80049c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80049ca:	1a9b      	subs	r3, r3, r2
 80049cc:	683a      	ldr	r2, [r7, #0]
 80049ce:	18d3      	adds	r3, r2, r3
 80049d0:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 80049d2:	f7fe fe11 	bl	80035f8 <HAL_GetTick>
 80049d6:	0003      	movs	r3, r0
 80049d8:	61bb      	str	r3, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 80049da:	4b3f      	ldr	r3, [pc, #252]	; (8004ad8 <SPI_WaitFifoStateUntilTimeout+0x124>)
 80049dc:	681a      	ldr	r2, [r3, #0]
 80049de:	0013      	movs	r3, r2
 80049e0:	009b      	lsls	r3, r3, #2
 80049e2:	189b      	adds	r3, r3, r2
 80049e4:	00da      	lsls	r2, r3, #3
 80049e6:	1ad3      	subs	r3, r2, r3
 80049e8:	0d1b      	lsrs	r3, r3, #20
 80049ea:	69fa      	ldr	r2, [r7, #28]
 80049ec:	4353      	muls	r3, r2
 80049ee:	617b      	str	r3, [r7, #20]

  while ((hspi->Instance->SR & Fifo) != State)
 80049f0:	e064      	b.n	8004abc <SPI_WaitFifoStateUntilTimeout+0x108>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 80049f2:	68ba      	ldr	r2, [r7, #8]
 80049f4:	23c0      	movs	r3, #192	; 0xc0
 80049f6:	00db      	lsls	r3, r3, #3
 80049f8:	429a      	cmp	r2, r3
 80049fa:	d106      	bne.n	8004a0a <SPI_WaitFifoStateUntilTimeout+0x56>
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d103      	bne.n	8004a0a <SPI_WaitFifoStateUntilTimeout+0x56>
    {
      /* Read 8bit CRC to flush Data Register */
      READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	681b      	ldr	r3, [r3, #0]
 8004a06:	330c      	adds	r3, #12
 8004a08:	781b      	ldrb	r3, [r3, #0]
    }

    if (Timeout != HAL_MAX_DELAY)
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	3301      	adds	r3, #1
 8004a0e:	d055      	beq.n	8004abc <SPI_WaitFifoStateUntilTimeout+0x108>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8004a10:	f7fe fdf2 	bl	80035f8 <HAL_GetTick>
 8004a14:	0002      	movs	r2, r0
 8004a16:	69bb      	ldr	r3, [r7, #24]
 8004a18:	1ad3      	subs	r3, r2, r3
 8004a1a:	69fa      	ldr	r2, [r7, #28]
 8004a1c:	429a      	cmp	r2, r3
 8004a1e:	d902      	bls.n	8004a26 <SPI_WaitFifoStateUntilTimeout+0x72>
 8004a20:	69fb      	ldr	r3, [r7, #28]
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d142      	bne.n	8004aac <SPI_WaitFifoStateUntilTimeout+0xf8>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8004a26:	68fb      	ldr	r3, [r7, #12]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	685a      	ldr	r2, [r3, #4]
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	21e0      	movs	r1, #224	; 0xe0
 8004a32:	438a      	bics	r2, r1
 8004a34:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	685a      	ldr	r2, [r3, #4]
 8004a3a:	2382      	movs	r3, #130	; 0x82
 8004a3c:	005b      	lsls	r3, r3, #1
 8004a3e:	429a      	cmp	r2, r3
 8004a40:	d113      	bne.n	8004a6a <SPI_WaitFifoStateUntilTimeout+0xb6>
 8004a42:	68fb      	ldr	r3, [r7, #12]
 8004a44:	689a      	ldr	r2, [r3, #8]
 8004a46:	2380      	movs	r3, #128	; 0x80
 8004a48:	021b      	lsls	r3, r3, #8
 8004a4a:	429a      	cmp	r2, r3
 8004a4c:	d005      	beq.n	8004a5a <SPI_WaitFifoStateUntilTimeout+0xa6>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	689a      	ldr	r2, [r3, #8]
 8004a52:	2380      	movs	r3, #128	; 0x80
 8004a54:	00db      	lsls	r3, r3, #3
 8004a56:	429a      	cmp	r2, r3
 8004a58:	d107      	bne.n	8004a6a <SPI_WaitFifoStateUntilTimeout+0xb6>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	681b      	ldr	r3, [r3, #0]
 8004a5e:	681a      	ldr	r2, [r3, #0]
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	2140      	movs	r1, #64	; 0x40
 8004a66:	438a      	bics	r2, r1
 8004a68:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004a6e:	2380      	movs	r3, #128	; 0x80
 8004a70:	019b      	lsls	r3, r3, #6
 8004a72:	429a      	cmp	r2, r3
 8004a74:	d110      	bne.n	8004a98 <SPI_WaitFifoStateUntilTimeout+0xe4>
        {
          SPI_RESET_CRC(hspi);
 8004a76:	68fb      	ldr	r3, [r7, #12]
 8004a78:	681b      	ldr	r3, [r3, #0]
 8004a7a:	681a      	ldr	r2, [r3, #0]
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	4916      	ldr	r1, [pc, #88]	; (8004adc <SPI_WaitFifoStateUntilTimeout+0x128>)
 8004a82:	400a      	ands	r2, r1
 8004a84:	601a      	str	r2, [r3, #0]
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	681a      	ldr	r2, [r3, #0]
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	2180      	movs	r1, #128	; 0x80
 8004a92:	0189      	lsls	r1, r1, #6
 8004a94:	430a      	orrs	r2, r1
 8004a96:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8004a98:	68fb      	ldr	r3, [r7, #12]
 8004a9a:	225d      	movs	r2, #93	; 0x5d
 8004a9c:	2101      	movs	r1, #1
 8004a9e:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	225c      	movs	r2, #92	; 0x5c
 8004aa4:	2100      	movs	r1, #0
 8004aa6:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8004aa8:	2303      	movs	r3, #3
 8004aaa:	e010      	b.n	8004ace <SPI_WaitFifoStateUntilTimeout+0x11a>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if(count == 0U)
 8004aac:	697b      	ldr	r3, [r7, #20]
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d101      	bne.n	8004ab6 <SPI_WaitFifoStateUntilTimeout+0x102>
      {
        tmp_timeout = 0U;
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	61fb      	str	r3, [r7, #28]
      }      
      count--;
 8004ab6:	697b      	ldr	r3, [r7, #20]
 8004ab8:	3b01      	subs	r3, #1
 8004aba:	617b      	str	r3, [r7, #20]
  while ((hspi->Instance->SR & Fifo) != State)
 8004abc:	68fb      	ldr	r3, [r7, #12]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	689b      	ldr	r3, [r3, #8]
 8004ac2:	68ba      	ldr	r2, [r7, #8]
 8004ac4:	4013      	ands	r3, r2
 8004ac6:	687a      	ldr	r2, [r7, #4]
 8004ac8:	429a      	cmp	r2, r3
 8004aca:	d192      	bne.n	80049f2 <SPI_WaitFifoStateUntilTimeout+0x3e>
    }
  }

  return HAL_OK;
 8004acc:	2300      	movs	r3, #0
}
 8004ace:	0018      	movs	r0, r3
 8004ad0:	46bd      	mov	sp, r7
 8004ad2:	b008      	add	sp, #32
 8004ad4:	bd80      	pop	{r7, pc}
 8004ad6:	46c0      	nop			; (mov r8, r8)
 8004ad8:	20000040 	.word	0x20000040
 8004adc:	ffffdfff 	.word	0xffffdfff

08004ae0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8004ae0:	b580      	push	{r7, lr}
 8004ae2:	b086      	sub	sp, #24
 8004ae4:	af02      	add	r7, sp, #8
 8004ae6:	60f8      	str	r0, [r7, #12]
 8004ae8:	60b9      	str	r1, [r7, #8]
 8004aea:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8004aec:	68ba      	ldr	r2, [r7, #8]
 8004aee:	23c0      	movs	r3, #192	; 0xc0
 8004af0:	0159      	lsls	r1, r3, #5
 8004af2:	68f8      	ldr	r0, [r7, #12]
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	9300      	str	r3, [sp, #0]
 8004af8:	0013      	movs	r3, r2
 8004afa:	2200      	movs	r2, #0
 8004afc:	f7ff ff5a 	bl	80049b4 <SPI_WaitFifoStateUntilTimeout>
 8004b00:	1e03      	subs	r3, r0, #0
 8004b02:	d007      	beq.n	8004b14 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004b08:	2220      	movs	r2, #32
 8004b0a:	431a      	orrs	r2, r3
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8004b10:	2303      	movs	r3, #3
 8004b12:	e027      	b.n	8004b64 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8004b14:	68ba      	ldr	r2, [r7, #8]
 8004b16:	68f8      	ldr	r0, [r7, #12]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	9300      	str	r3, [sp, #0]
 8004b1c:	0013      	movs	r3, r2
 8004b1e:	2200      	movs	r2, #0
 8004b20:	2180      	movs	r1, #128	; 0x80
 8004b22:	f7ff feb9 	bl	8004898 <SPI_WaitFlagStateUntilTimeout>
 8004b26:	1e03      	subs	r3, r0, #0
 8004b28:	d007      	beq.n	8004b3a <SPI_EndRxTxTransaction+0x5a>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004b2e:	2220      	movs	r2, #32
 8004b30:	431a      	orrs	r2, r3
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8004b36:	2303      	movs	r3, #3
 8004b38:	e014      	b.n	8004b64 <SPI_EndRxTxTransaction+0x84>
  }

  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8004b3a:	68ba      	ldr	r2, [r7, #8]
 8004b3c:	23c0      	movs	r3, #192	; 0xc0
 8004b3e:	00d9      	lsls	r1, r3, #3
 8004b40:	68f8      	ldr	r0, [r7, #12]
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	9300      	str	r3, [sp, #0]
 8004b46:	0013      	movs	r3, r2
 8004b48:	2200      	movs	r2, #0
 8004b4a:	f7ff ff33 	bl	80049b4 <SPI_WaitFifoStateUntilTimeout>
 8004b4e:	1e03      	subs	r3, r0, #0
 8004b50:	d007      	beq.n	8004b62 <SPI_EndRxTxTransaction+0x82>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004b56:	2220      	movs	r2, #32
 8004b58:	431a      	orrs	r2, r3
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 8004b5e:	2303      	movs	r3, #3
 8004b60:	e000      	b.n	8004b64 <SPI_EndRxTxTransaction+0x84>
  }

  return HAL_OK;
 8004b62:	2300      	movs	r3, #0
}
 8004b64:	0018      	movs	r0, r3
 8004b66:	46bd      	mov	sp, r7
 8004b68:	b004      	add	sp, #16
 8004b6a:	bd80      	pop	{r7, pc}

08004b6c <cos>:
 8004b6c:	b530      	push	{r4, r5, lr}
 8004b6e:	4a1e      	ldr	r2, [pc, #120]	; (8004be8 <cos+0x7c>)
 8004b70:	004b      	lsls	r3, r1, #1
 8004b72:	b087      	sub	sp, #28
 8004b74:	085b      	lsrs	r3, r3, #1
 8004b76:	4293      	cmp	r3, r2
 8004b78:	dc04      	bgt.n	8004b84 <cos+0x18>
 8004b7a:	2200      	movs	r2, #0
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	f000 fc27 	bl	80053d0 <__kernel_cos>
 8004b82:	e006      	b.n	8004b92 <cos+0x26>
 8004b84:	4a19      	ldr	r2, [pc, #100]	; (8004bec <cos+0x80>)
 8004b86:	4293      	cmp	r3, r2
 8004b88:	dd05      	ble.n	8004b96 <cos+0x2a>
 8004b8a:	0002      	movs	r2, r0
 8004b8c:	000b      	movs	r3, r1
 8004b8e:	f7fd fbd9 	bl	8002344 <__aeabi_dsub>
 8004b92:	b007      	add	sp, #28
 8004b94:	bd30      	pop	{r4, r5, pc}
 8004b96:	aa02      	add	r2, sp, #8
 8004b98:	f000 f980 	bl	8004e9c <__ieee754_rem_pio2>
 8004b9c:	9c04      	ldr	r4, [sp, #16]
 8004b9e:	9d05      	ldr	r5, [sp, #20]
 8004ba0:	2303      	movs	r3, #3
 8004ba2:	4003      	ands	r3, r0
 8004ba4:	2b01      	cmp	r3, #1
 8004ba6:	d008      	beq.n	8004bba <cos+0x4e>
 8004ba8:	9802      	ldr	r0, [sp, #8]
 8004baa:	9903      	ldr	r1, [sp, #12]
 8004bac:	2b02      	cmp	r3, #2
 8004bae:	d00f      	beq.n	8004bd0 <cos+0x64>
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d112      	bne.n	8004bda <cos+0x6e>
 8004bb4:	0022      	movs	r2, r4
 8004bb6:	002b      	movs	r3, r5
 8004bb8:	e7e1      	b.n	8004b7e <cos+0x12>
 8004bba:	9300      	str	r3, [sp, #0]
 8004bbc:	0022      	movs	r2, r4
 8004bbe:	9802      	ldr	r0, [sp, #8]
 8004bc0:	9903      	ldr	r1, [sp, #12]
 8004bc2:	002b      	movs	r3, r5
 8004bc4:	f001 f82c 	bl	8005c20 <__kernel_sin>
 8004bc8:	2380      	movs	r3, #128	; 0x80
 8004bca:	061b      	lsls	r3, r3, #24
 8004bcc:	18c9      	adds	r1, r1, r3
 8004bce:	e7e0      	b.n	8004b92 <cos+0x26>
 8004bd0:	0022      	movs	r2, r4
 8004bd2:	002b      	movs	r3, r5
 8004bd4:	f000 fbfc 	bl	80053d0 <__kernel_cos>
 8004bd8:	e7f6      	b.n	8004bc8 <cos+0x5c>
 8004bda:	2301      	movs	r3, #1
 8004bdc:	0022      	movs	r2, r4
 8004bde:	9300      	str	r3, [sp, #0]
 8004be0:	002b      	movs	r3, r5
 8004be2:	f001 f81d 	bl	8005c20 <__kernel_sin>
 8004be6:	e7d4      	b.n	8004b92 <cos+0x26>
 8004be8:	3fe921fb 	.word	0x3fe921fb
 8004bec:	7fefffff 	.word	0x7fefffff

08004bf0 <sin>:
 8004bf0:	b530      	push	{r4, r5, lr}
 8004bf2:	4a20      	ldr	r2, [pc, #128]	; (8004c74 <sin+0x84>)
 8004bf4:	004b      	lsls	r3, r1, #1
 8004bf6:	b087      	sub	sp, #28
 8004bf8:	085b      	lsrs	r3, r3, #1
 8004bfa:	4293      	cmp	r3, r2
 8004bfc:	dc06      	bgt.n	8004c0c <sin+0x1c>
 8004bfe:	2300      	movs	r3, #0
 8004c00:	2200      	movs	r2, #0
 8004c02:	9300      	str	r3, [sp, #0]
 8004c04:	2300      	movs	r3, #0
 8004c06:	f001 f80b 	bl	8005c20 <__kernel_sin>
 8004c0a:	e006      	b.n	8004c1a <sin+0x2a>
 8004c0c:	4a1a      	ldr	r2, [pc, #104]	; (8004c78 <sin+0x88>)
 8004c0e:	4293      	cmp	r3, r2
 8004c10:	dd05      	ble.n	8004c1e <sin+0x2e>
 8004c12:	0002      	movs	r2, r0
 8004c14:	000b      	movs	r3, r1
 8004c16:	f7fd fb95 	bl	8002344 <__aeabi_dsub>
 8004c1a:	b007      	add	sp, #28
 8004c1c:	bd30      	pop	{r4, r5, pc}
 8004c1e:	aa02      	add	r2, sp, #8
 8004c20:	f000 f93c 	bl	8004e9c <__ieee754_rem_pio2>
 8004c24:	9c04      	ldr	r4, [sp, #16]
 8004c26:	9d05      	ldr	r5, [sp, #20]
 8004c28:	2303      	movs	r3, #3
 8004c2a:	4003      	ands	r3, r0
 8004c2c:	2b01      	cmp	r3, #1
 8004c2e:	d00a      	beq.n	8004c46 <sin+0x56>
 8004c30:	9802      	ldr	r0, [sp, #8]
 8004c32:	9903      	ldr	r1, [sp, #12]
 8004c34:	2b02      	cmp	r3, #2
 8004c36:	d00d      	beq.n	8004c54 <sin+0x64>
 8004c38:	2b00      	cmp	r3, #0
 8004c3a:	d115      	bne.n	8004c68 <sin+0x78>
 8004c3c:	3301      	adds	r3, #1
 8004c3e:	9300      	str	r3, [sp, #0]
 8004c40:	0022      	movs	r2, r4
 8004c42:	002b      	movs	r3, r5
 8004c44:	e7df      	b.n	8004c06 <sin+0x16>
 8004c46:	0022      	movs	r2, r4
 8004c48:	9802      	ldr	r0, [sp, #8]
 8004c4a:	9903      	ldr	r1, [sp, #12]
 8004c4c:	002b      	movs	r3, r5
 8004c4e:	f000 fbbf 	bl	80053d0 <__kernel_cos>
 8004c52:	e7e2      	b.n	8004c1a <sin+0x2a>
 8004c54:	2301      	movs	r3, #1
 8004c56:	0022      	movs	r2, r4
 8004c58:	9300      	str	r3, [sp, #0]
 8004c5a:	002b      	movs	r3, r5
 8004c5c:	f000 ffe0 	bl	8005c20 <__kernel_sin>
 8004c60:	2380      	movs	r3, #128	; 0x80
 8004c62:	061b      	lsls	r3, r3, #24
 8004c64:	18c9      	adds	r1, r1, r3
 8004c66:	e7d8      	b.n	8004c1a <sin+0x2a>
 8004c68:	0022      	movs	r2, r4
 8004c6a:	002b      	movs	r3, r5
 8004c6c:	f000 fbb0 	bl	80053d0 <__kernel_cos>
 8004c70:	e7f6      	b.n	8004c60 <sin+0x70>
 8004c72:	46c0      	nop			; (mov r8, r8)
 8004c74:	3fe921fb 	.word	0x3fe921fb
 8004c78:	7fefffff 	.word	0x7fefffff

08004c7c <atan2>:
 8004c7c:	b510      	push	{r4, lr}
 8004c7e:	f000 f85b 	bl	8004d38 <__ieee754_atan2>
 8004c82:	bd10      	pop	{r4, pc}

08004c84 <sqrt>:
 8004c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c86:	b08f      	sub	sp, #60	; 0x3c
 8004c88:	0004      	movs	r4, r0
 8004c8a:	000d      	movs	r5, r1
 8004c8c:	f000 faee 	bl	800526c <__ieee754_sqrt>
 8004c90:	4b27      	ldr	r3, [pc, #156]	; (8004d30 <sqrt+0xac>)
 8004c92:	9000      	str	r0, [sp, #0]
 8004c94:	9101      	str	r1, [sp, #4]
 8004c96:	781b      	ldrb	r3, [r3, #0]
 8004c98:	b25b      	sxtb	r3, r3
 8004c9a:	9302      	str	r3, [sp, #8]
 8004c9c:	3301      	adds	r3, #1
 8004c9e:	d033      	beq.n	8004d08 <sqrt+0x84>
 8004ca0:	0022      	movs	r2, r4
 8004ca2:	002b      	movs	r3, r5
 8004ca4:	0020      	movs	r0, r4
 8004ca6:	0029      	movs	r1, r5
 8004ca8:	f7fd fe94 	bl	80029d4 <__aeabi_dcmpun>
 8004cac:	9003      	str	r0, [sp, #12]
 8004cae:	2800      	cmp	r0, #0
 8004cb0:	d12a      	bne.n	8004d08 <sqrt+0x84>
 8004cb2:	2600      	movs	r6, #0
 8004cb4:	2700      	movs	r7, #0
 8004cb6:	0032      	movs	r2, r6
 8004cb8:	003b      	movs	r3, r7
 8004cba:	0020      	movs	r0, r4
 8004cbc:	0029      	movs	r1, r5
 8004cbe:	f7fb fbb9 	bl	8000434 <__aeabi_dcmplt>
 8004cc2:	2800      	cmp	r0, #0
 8004cc4:	d020      	beq.n	8004d08 <sqrt+0x84>
 8004cc6:	2301      	movs	r3, #1
 8004cc8:	9304      	str	r3, [sp, #16]
 8004cca:	4b1a      	ldr	r3, [pc, #104]	; (8004d34 <sqrt+0xb0>)
 8004ccc:	9408      	str	r4, [sp, #32]
 8004cce:	9509      	str	r5, [sp, #36]	; 0x24
 8004cd0:	9305      	str	r3, [sp, #20]
 8004cd2:	9b03      	ldr	r3, [sp, #12]
 8004cd4:	9406      	str	r4, [sp, #24]
 8004cd6:	9507      	str	r5, [sp, #28]
 8004cd8:	930c      	str	r3, [sp, #48]	; 0x30
 8004cda:	9b02      	ldr	r3, [sp, #8]
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d117      	bne.n	8004d10 <sqrt+0x8c>
 8004ce0:	960a      	str	r6, [sp, #40]	; 0x28
 8004ce2:	970b      	str	r7, [sp, #44]	; 0x2c
 8004ce4:	a804      	add	r0, sp, #16
 8004ce6:	f001 fa4f 	bl	8006188 <matherr>
 8004cea:	2800      	cmp	r0, #0
 8004cec:	d01b      	beq.n	8004d26 <sqrt+0xa2>
 8004cee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004cf0:	9302      	str	r3, [sp, #8]
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d004      	beq.n	8004d00 <sqrt+0x7c>
 8004cf6:	f001 fab5 	bl	8006264 <__errno>
 8004cfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004cfc:	9302      	str	r3, [sp, #8]
 8004cfe:	6003      	str	r3, [r0, #0]
 8004d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d02:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004d04:	9300      	str	r3, [sp, #0]
 8004d06:	9401      	str	r4, [sp, #4]
 8004d08:	9800      	ldr	r0, [sp, #0]
 8004d0a:	9901      	ldr	r1, [sp, #4]
 8004d0c:	b00f      	add	sp, #60	; 0x3c
 8004d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d10:	003b      	movs	r3, r7
 8004d12:	0032      	movs	r2, r6
 8004d14:	0030      	movs	r0, r6
 8004d16:	0039      	movs	r1, r7
 8004d18:	f7fc fc98 	bl	800164c <__aeabi_ddiv>
 8004d1c:	9b02      	ldr	r3, [sp, #8]
 8004d1e:	900a      	str	r0, [sp, #40]	; 0x28
 8004d20:	910b      	str	r1, [sp, #44]	; 0x2c
 8004d22:	2b02      	cmp	r3, #2
 8004d24:	d1de      	bne.n	8004ce4 <sqrt+0x60>
 8004d26:	f001 fa9d 	bl	8006264 <__errno>
 8004d2a:	2321      	movs	r3, #33	; 0x21
 8004d2c:	6003      	str	r3, [r0, #0]
 8004d2e:	e7de      	b.n	8004cee <sqrt+0x6a>
 8004d30:	20000049 	.word	0x20000049
 8004d34:	080063d0 	.word	0x080063d0

08004d38 <__ieee754_atan2>:
 8004d38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004d3a:	4254      	negs	r4, r2
 8004d3c:	005e      	lsls	r6, r3, #1
 8004d3e:	4314      	orrs	r4, r2
 8004d40:	4f48      	ldr	r7, [pc, #288]	; (8004e64 <__ieee754_atan2+0x12c>)
 8004d42:	0876      	lsrs	r6, r6, #1
 8004d44:	0fe4      	lsrs	r4, r4, #31
 8004d46:	9300      	str	r3, [sp, #0]
 8004d48:	4334      	orrs	r4, r6
 8004d4a:	42bc      	cmp	r4, r7
 8004d4c:	d809      	bhi.n	8004d62 <__ieee754_atan2+0x2a>
 8004d4e:	4244      	negs	r4, r0
 8004d50:	004d      	lsls	r5, r1, #1
 8004d52:	4304      	orrs	r4, r0
 8004d54:	086d      	lsrs	r5, r5, #1
 8004d56:	0fe4      	lsrs	r4, r4, #31
 8004d58:	9100      	str	r1, [sp, #0]
 8004d5a:	9001      	str	r0, [sp, #4]
 8004d5c:	432c      	orrs	r4, r5
 8004d5e:	42bc      	cmp	r4, r7
 8004d60:	d903      	bls.n	8004d6a <__ieee754_atan2+0x32>
 8004d62:	f7fc f957 	bl	8001014 <__aeabi_dadd>
 8004d66:	b003      	add	sp, #12
 8004d68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d6a:	4c3f      	ldr	r4, [pc, #252]	; (8004e68 <__ieee754_atan2+0x130>)
 8004d6c:	191c      	adds	r4, r3, r4
 8004d6e:	4314      	orrs	r4, r2
 8004d70:	d102      	bne.n	8004d78 <__ieee754_atan2+0x40>
 8004d72:	f001 f803 	bl	8005d7c <atan>
 8004d76:	e7f6      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004d78:	179c      	asrs	r4, r3, #30
 8004d7a:	46a4      	mov	ip, r4
 8004d7c:	2402      	movs	r4, #2
 8004d7e:	4667      	mov	r7, ip
 8004d80:	403c      	ands	r4, r7
 8004d82:	9f00      	ldr	r7, [sp, #0]
 8004d84:	0fff      	lsrs	r7, r7, #31
 8004d86:	433c      	orrs	r4, r7
 8004d88:	9f01      	ldr	r7, [sp, #4]
 8004d8a:	432f      	orrs	r7, r5
 8004d8c:	d106      	bne.n	8004d9c <__ieee754_atan2+0x64>
 8004d8e:	2c02      	cmp	r4, #2
 8004d90:	d062      	beq.n	8004e58 <__ieee754_atan2+0x120>
 8004d92:	2c03      	cmp	r4, #3
 8004d94:	d1e7      	bne.n	8004d66 <__ieee754_atan2+0x2e>
 8004d96:	4835      	ldr	r0, [pc, #212]	; (8004e6c <__ieee754_atan2+0x134>)
 8004d98:	4935      	ldr	r1, [pc, #212]	; (8004e70 <__ieee754_atan2+0x138>)
 8004d9a:	e7e4      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004d9c:	0037      	movs	r7, r6
 8004d9e:	4317      	orrs	r7, r2
 8004da0:	d105      	bne.n	8004dae <__ieee754_atan2+0x76>
 8004da2:	9b00      	ldr	r3, [sp, #0]
 8004da4:	4831      	ldr	r0, [pc, #196]	; (8004e6c <__ieee754_atan2+0x134>)
 8004da6:	2b00      	cmp	r3, #0
 8004da8:	da59      	bge.n	8004e5e <__ieee754_atan2+0x126>
 8004daa:	4932      	ldr	r1, [pc, #200]	; (8004e74 <__ieee754_atan2+0x13c>)
 8004dac:	e7db      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004dae:	4f2d      	ldr	r7, [pc, #180]	; (8004e64 <__ieee754_atan2+0x12c>)
 8004db0:	42be      	cmp	r6, r7
 8004db2:	d11b      	bne.n	8004dec <__ieee754_atan2+0xb4>
 8004db4:	42b5      	cmp	r5, r6
 8004db6:	d10e      	bne.n	8004dd6 <__ieee754_atan2+0x9e>
 8004db8:	2c02      	cmp	r4, #2
 8004dba:	d006      	beq.n	8004dca <__ieee754_atan2+0x92>
 8004dbc:	2c03      	cmp	r4, #3
 8004dbe:	d007      	beq.n	8004dd0 <__ieee754_atan2+0x98>
 8004dc0:	482a      	ldr	r0, [pc, #168]	; (8004e6c <__ieee754_atan2+0x134>)
 8004dc2:	2c01      	cmp	r4, #1
 8004dc4:	d146      	bne.n	8004e54 <__ieee754_atan2+0x11c>
 8004dc6:	492c      	ldr	r1, [pc, #176]	; (8004e78 <__ieee754_atan2+0x140>)
 8004dc8:	e7cd      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004dca:	482c      	ldr	r0, [pc, #176]	; (8004e7c <__ieee754_atan2+0x144>)
 8004dcc:	492c      	ldr	r1, [pc, #176]	; (8004e80 <__ieee754_atan2+0x148>)
 8004dce:	e7ca      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004dd0:	482a      	ldr	r0, [pc, #168]	; (8004e7c <__ieee754_atan2+0x144>)
 8004dd2:	492c      	ldr	r1, [pc, #176]	; (8004e84 <__ieee754_atan2+0x14c>)
 8004dd4:	e7c7      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004dd6:	2c02      	cmp	r4, #2
 8004dd8:	d03e      	beq.n	8004e58 <__ieee754_atan2+0x120>
 8004dda:	2c03      	cmp	r4, #3
 8004ddc:	d0db      	beq.n	8004d96 <__ieee754_atan2+0x5e>
 8004dde:	2000      	movs	r0, #0
 8004de0:	2100      	movs	r1, #0
 8004de2:	2c01      	cmp	r4, #1
 8004de4:	d1bf      	bne.n	8004d66 <__ieee754_atan2+0x2e>
 8004de6:	2180      	movs	r1, #128	; 0x80
 8004de8:	0609      	lsls	r1, r1, #24
 8004dea:	e7bc      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004dec:	4f1d      	ldr	r7, [pc, #116]	; (8004e64 <__ieee754_atan2+0x12c>)
 8004dee:	42bd      	cmp	r5, r7
 8004df0:	d0d7      	beq.n	8004da2 <__ieee754_atan2+0x6a>
 8004df2:	1bad      	subs	r5, r5, r6
 8004df4:	152d      	asrs	r5, r5, #20
 8004df6:	2d3c      	cmp	r5, #60	; 0x3c
 8004df8:	dc16      	bgt.n	8004e28 <__ieee754_atan2+0xf0>
 8004dfa:	2b00      	cmp	r3, #0
 8004dfc:	da01      	bge.n	8004e02 <__ieee754_atan2+0xca>
 8004dfe:	353c      	adds	r5, #60	; 0x3c
 8004e00:	db15      	blt.n	8004e2e <__ieee754_atan2+0xf6>
 8004e02:	f7fc fc23 	bl	800164c <__aeabi_ddiv>
 8004e06:	f001 f939 	bl	800607c <fabs>
 8004e0a:	f000 ffb7 	bl	8005d7c <atan>
 8004e0e:	2c01      	cmp	r4, #1
 8004e10:	d010      	beq.n	8004e34 <__ieee754_atan2+0xfc>
 8004e12:	2c02      	cmp	r4, #2
 8004e14:	d013      	beq.n	8004e3e <__ieee754_atan2+0x106>
 8004e16:	2c00      	cmp	r4, #0
 8004e18:	d0a5      	beq.n	8004d66 <__ieee754_atan2+0x2e>
 8004e1a:	4a1b      	ldr	r2, [pc, #108]	; (8004e88 <__ieee754_atan2+0x150>)
 8004e1c:	4b1b      	ldr	r3, [pc, #108]	; (8004e8c <__ieee754_atan2+0x154>)
 8004e1e:	f7fd fa91 	bl	8002344 <__aeabi_dsub>
 8004e22:	4a12      	ldr	r2, [pc, #72]	; (8004e6c <__ieee754_atan2+0x134>)
 8004e24:	4b1a      	ldr	r3, [pc, #104]	; (8004e90 <__ieee754_atan2+0x158>)
 8004e26:	e012      	b.n	8004e4e <__ieee754_atan2+0x116>
 8004e28:	4810      	ldr	r0, [pc, #64]	; (8004e6c <__ieee754_atan2+0x134>)
 8004e2a:	491a      	ldr	r1, [pc, #104]	; (8004e94 <__ieee754_atan2+0x15c>)
 8004e2c:	e7ef      	b.n	8004e0e <__ieee754_atan2+0xd6>
 8004e2e:	2000      	movs	r0, #0
 8004e30:	2100      	movs	r1, #0
 8004e32:	e7ec      	b.n	8004e0e <__ieee754_atan2+0xd6>
 8004e34:	2480      	movs	r4, #128	; 0x80
 8004e36:	0624      	lsls	r4, r4, #24
 8004e38:	190b      	adds	r3, r1, r4
 8004e3a:	0019      	movs	r1, r3
 8004e3c:	e793      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004e3e:	4a12      	ldr	r2, [pc, #72]	; (8004e88 <__ieee754_atan2+0x150>)
 8004e40:	4b12      	ldr	r3, [pc, #72]	; (8004e8c <__ieee754_atan2+0x154>)
 8004e42:	f7fd fa7f 	bl	8002344 <__aeabi_dsub>
 8004e46:	0002      	movs	r2, r0
 8004e48:	000b      	movs	r3, r1
 8004e4a:	4808      	ldr	r0, [pc, #32]	; (8004e6c <__ieee754_atan2+0x134>)
 8004e4c:	4910      	ldr	r1, [pc, #64]	; (8004e90 <__ieee754_atan2+0x158>)
 8004e4e:	f7fd fa79 	bl	8002344 <__aeabi_dsub>
 8004e52:	e788      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004e54:	4910      	ldr	r1, [pc, #64]	; (8004e98 <__ieee754_atan2+0x160>)
 8004e56:	e786      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004e58:	4804      	ldr	r0, [pc, #16]	; (8004e6c <__ieee754_atan2+0x134>)
 8004e5a:	490d      	ldr	r1, [pc, #52]	; (8004e90 <__ieee754_atan2+0x158>)
 8004e5c:	e783      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004e5e:	490d      	ldr	r1, [pc, #52]	; (8004e94 <__ieee754_atan2+0x15c>)
 8004e60:	e781      	b.n	8004d66 <__ieee754_atan2+0x2e>
 8004e62:	46c0      	nop			; (mov r8, r8)
 8004e64:	7ff00000 	.word	0x7ff00000
 8004e68:	c0100000 	.word	0xc0100000
 8004e6c:	54442d18 	.word	0x54442d18
 8004e70:	c00921fb 	.word	0xc00921fb
 8004e74:	bff921fb 	.word	0xbff921fb
 8004e78:	bfe921fb 	.word	0xbfe921fb
 8004e7c:	7f3321d2 	.word	0x7f3321d2
 8004e80:	4002d97c 	.word	0x4002d97c
 8004e84:	c002d97c 	.word	0xc002d97c
 8004e88:	33145c07 	.word	0x33145c07
 8004e8c:	3ca1a626 	.word	0x3ca1a626
 8004e90:	400921fb 	.word	0x400921fb
 8004e94:	3ff921fb 	.word	0x3ff921fb
 8004e98:	3fe921fb 	.word	0x3fe921fb

08004e9c <__ieee754_rem_pio2>:
 8004e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e9e:	004b      	lsls	r3, r1, #1
 8004ea0:	b091      	sub	sp, #68	; 0x44
 8004ea2:	085b      	lsrs	r3, r3, #1
 8004ea4:	9302      	str	r3, [sp, #8]
 8004ea6:	0017      	movs	r7, r2
 8004ea8:	4bb3      	ldr	r3, [pc, #716]	; (8005178 <__ieee754_rem_pio2+0x2dc>)
 8004eaa:	9a02      	ldr	r2, [sp, #8]
 8004eac:	0004      	movs	r4, r0
 8004eae:	9109      	str	r1, [sp, #36]	; 0x24
 8004eb0:	429a      	cmp	r2, r3
 8004eb2:	dc09      	bgt.n	8004ec8 <__ieee754_rem_pio2+0x2c>
 8004eb4:	0002      	movs	r2, r0
 8004eb6:	000b      	movs	r3, r1
 8004eb8:	603a      	str	r2, [r7, #0]
 8004eba:	607b      	str	r3, [r7, #4]
 8004ebc:	2200      	movs	r2, #0
 8004ebe:	2300      	movs	r3, #0
 8004ec0:	60ba      	str	r2, [r7, #8]
 8004ec2:	60fb      	str	r3, [r7, #12]
 8004ec4:	2600      	movs	r6, #0
 8004ec6:	e024      	b.n	8004f12 <__ieee754_rem_pio2+0x76>
 8004ec8:	4bac      	ldr	r3, [pc, #688]	; (800517c <__ieee754_rem_pio2+0x2e0>)
 8004eca:	9a02      	ldr	r2, [sp, #8]
 8004ecc:	429a      	cmp	r2, r3
 8004ece:	dd00      	ble.n	8004ed2 <__ieee754_rem_pio2+0x36>
 8004ed0:	e06d      	b.n	8004fae <__ieee754_rem_pio2+0x112>
 8004ed2:	4aab      	ldr	r2, [pc, #684]	; (8005180 <__ieee754_rem_pio2+0x2e4>)
 8004ed4:	2900      	cmp	r1, #0
 8004ed6:	dd35      	ble.n	8004f44 <__ieee754_rem_pio2+0xa8>
 8004ed8:	4baa      	ldr	r3, [pc, #680]	; (8005184 <__ieee754_rem_pio2+0x2e8>)
 8004eda:	f7fd fa33 	bl	8002344 <__aeabi_dsub>
 8004ede:	9b02      	ldr	r3, [sp, #8]
 8004ee0:	0004      	movs	r4, r0
 8004ee2:	001a      	movs	r2, r3
 8004ee4:	4ba7      	ldr	r3, [pc, #668]	; (8005184 <__ieee754_rem_pio2+0x2e8>)
 8004ee6:	000d      	movs	r5, r1
 8004ee8:	429a      	cmp	r2, r3
 8004eea:	d015      	beq.n	8004f18 <__ieee754_rem_pio2+0x7c>
 8004eec:	4aa6      	ldr	r2, [pc, #664]	; (8005188 <__ieee754_rem_pio2+0x2ec>)
 8004eee:	4ba7      	ldr	r3, [pc, #668]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004ef0:	f7fd fa28 	bl	8002344 <__aeabi_dsub>
 8004ef4:	0002      	movs	r2, r0
 8004ef6:	000b      	movs	r3, r1
 8004ef8:	0020      	movs	r0, r4
 8004efa:	603a      	str	r2, [r7, #0]
 8004efc:	607b      	str	r3, [r7, #4]
 8004efe:	0029      	movs	r1, r5
 8004f00:	f7fd fa20 	bl	8002344 <__aeabi_dsub>
 8004f04:	4aa0      	ldr	r2, [pc, #640]	; (8005188 <__ieee754_rem_pio2+0x2ec>)
 8004f06:	4ba1      	ldr	r3, [pc, #644]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004f08:	f7fd fa1c 	bl	8002344 <__aeabi_dsub>
 8004f0c:	2601      	movs	r6, #1
 8004f0e:	60b8      	str	r0, [r7, #8]
 8004f10:	60f9      	str	r1, [r7, #12]
 8004f12:	0030      	movs	r0, r6
 8004f14:	b011      	add	sp, #68	; 0x44
 8004f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f18:	22d3      	movs	r2, #211	; 0xd3
 8004f1a:	4b9c      	ldr	r3, [pc, #624]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004f1c:	0552      	lsls	r2, r2, #21
 8004f1e:	f7fd fa11 	bl	8002344 <__aeabi_dsub>
 8004f22:	4a9b      	ldr	r2, [pc, #620]	; (8005190 <__ieee754_rem_pio2+0x2f4>)
 8004f24:	4b9b      	ldr	r3, [pc, #620]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 8004f26:	0004      	movs	r4, r0
 8004f28:	000d      	movs	r5, r1
 8004f2a:	f7fd fa0b 	bl	8002344 <__aeabi_dsub>
 8004f2e:	0002      	movs	r2, r0
 8004f30:	000b      	movs	r3, r1
 8004f32:	0020      	movs	r0, r4
 8004f34:	603a      	str	r2, [r7, #0]
 8004f36:	607b      	str	r3, [r7, #4]
 8004f38:	0029      	movs	r1, r5
 8004f3a:	f7fd fa03 	bl	8002344 <__aeabi_dsub>
 8004f3e:	4a94      	ldr	r2, [pc, #592]	; (8005190 <__ieee754_rem_pio2+0x2f4>)
 8004f40:	4b94      	ldr	r3, [pc, #592]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 8004f42:	e7e1      	b.n	8004f08 <__ieee754_rem_pio2+0x6c>
 8004f44:	4b8f      	ldr	r3, [pc, #572]	; (8005184 <__ieee754_rem_pio2+0x2e8>)
 8004f46:	f7fc f865 	bl	8001014 <__aeabi_dadd>
 8004f4a:	9b02      	ldr	r3, [sp, #8]
 8004f4c:	0004      	movs	r4, r0
 8004f4e:	001a      	movs	r2, r3
 8004f50:	4b8c      	ldr	r3, [pc, #560]	; (8005184 <__ieee754_rem_pio2+0x2e8>)
 8004f52:	000d      	movs	r5, r1
 8004f54:	429a      	cmp	r2, r3
 8004f56:	d014      	beq.n	8004f82 <__ieee754_rem_pio2+0xe6>
 8004f58:	4a8b      	ldr	r2, [pc, #556]	; (8005188 <__ieee754_rem_pio2+0x2ec>)
 8004f5a:	4b8c      	ldr	r3, [pc, #560]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004f5c:	f7fc f85a 	bl	8001014 <__aeabi_dadd>
 8004f60:	0002      	movs	r2, r0
 8004f62:	000b      	movs	r3, r1
 8004f64:	0020      	movs	r0, r4
 8004f66:	603a      	str	r2, [r7, #0]
 8004f68:	607b      	str	r3, [r7, #4]
 8004f6a:	0029      	movs	r1, r5
 8004f6c:	f7fd f9ea 	bl	8002344 <__aeabi_dsub>
 8004f70:	4a85      	ldr	r2, [pc, #532]	; (8005188 <__ieee754_rem_pio2+0x2ec>)
 8004f72:	4b86      	ldr	r3, [pc, #536]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004f74:	f7fc f84e 	bl	8001014 <__aeabi_dadd>
 8004f78:	2601      	movs	r6, #1
 8004f7a:	60b8      	str	r0, [r7, #8]
 8004f7c:	60f9      	str	r1, [r7, #12]
 8004f7e:	4276      	negs	r6, r6
 8004f80:	e7c7      	b.n	8004f12 <__ieee754_rem_pio2+0x76>
 8004f82:	22d3      	movs	r2, #211	; 0xd3
 8004f84:	4b81      	ldr	r3, [pc, #516]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004f86:	0552      	lsls	r2, r2, #21
 8004f88:	f7fc f844 	bl	8001014 <__aeabi_dadd>
 8004f8c:	4a80      	ldr	r2, [pc, #512]	; (8005190 <__ieee754_rem_pio2+0x2f4>)
 8004f8e:	4b81      	ldr	r3, [pc, #516]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 8004f90:	0004      	movs	r4, r0
 8004f92:	000d      	movs	r5, r1
 8004f94:	f7fc f83e 	bl	8001014 <__aeabi_dadd>
 8004f98:	0002      	movs	r2, r0
 8004f9a:	000b      	movs	r3, r1
 8004f9c:	0020      	movs	r0, r4
 8004f9e:	603a      	str	r2, [r7, #0]
 8004fa0:	607b      	str	r3, [r7, #4]
 8004fa2:	0029      	movs	r1, r5
 8004fa4:	f7fd f9ce 	bl	8002344 <__aeabi_dsub>
 8004fa8:	4a79      	ldr	r2, [pc, #484]	; (8005190 <__ieee754_rem_pio2+0x2f4>)
 8004faa:	4b7a      	ldr	r3, [pc, #488]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 8004fac:	e7e2      	b.n	8004f74 <__ieee754_rem_pio2+0xd8>
 8004fae:	4b7a      	ldr	r3, [pc, #488]	; (8005198 <__ieee754_rem_pio2+0x2fc>)
 8004fb0:	9a02      	ldr	r2, [sp, #8]
 8004fb2:	429a      	cmp	r2, r3
 8004fb4:	dd00      	ble.n	8004fb8 <__ieee754_rem_pio2+0x11c>
 8004fb6:	e0d1      	b.n	800515c <__ieee754_rem_pio2+0x2c0>
 8004fb8:	f001 f860 	bl	800607c <fabs>
 8004fbc:	4a77      	ldr	r2, [pc, #476]	; (800519c <__ieee754_rem_pio2+0x300>)
 8004fbe:	4b78      	ldr	r3, [pc, #480]	; (80051a0 <__ieee754_rem_pio2+0x304>)
 8004fc0:	0004      	movs	r4, r0
 8004fc2:	000d      	movs	r5, r1
 8004fc4:	f7fc ff4c 	bl	8001e60 <__aeabi_dmul>
 8004fc8:	2200      	movs	r2, #0
 8004fca:	4b76      	ldr	r3, [pc, #472]	; (80051a4 <__ieee754_rem_pio2+0x308>)
 8004fcc:	f7fc f822 	bl	8001014 <__aeabi_dadd>
 8004fd0:	f7fd fd1c 	bl	8002a0c <__aeabi_d2iz>
 8004fd4:	0006      	movs	r6, r0
 8004fd6:	f7fd fd4f 	bl	8002a78 <__aeabi_i2d>
 8004fda:	4a69      	ldr	r2, [pc, #420]	; (8005180 <__ieee754_rem_pio2+0x2e4>)
 8004fdc:	4b69      	ldr	r3, [pc, #420]	; (8005184 <__ieee754_rem_pio2+0x2e8>)
 8004fde:	9006      	str	r0, [sp, #24]
 8004fe0:	9107      	str	r1, [sp, #28]
 8004fe2:	f7fc ff3d 	bl	8001e60 <__aeabi_dmul>
 8004fe6:	0002      	movs	r2, r0
 8004fe8:	000b      	movs	r3, r1
 8004fea:	0020      	movs	r0, r4
 8004fec:	0029      	movs	r1, r5
 8004fee:	f7fd f9a9 	bl	8002344 <__aeabi_dsub>
 8004ff2:	4a65      	ldr	r2, [pc, #404]	; (8005188 <__ieee754_rem_pio2+0x2ec>)
 8004ff4:	9004      	str	r0, [sp, #16]
 8004ff6:	9105      	str	r1, [sp, #20]
 8004ff8:	9806      	ldr	r0, [sp, #24]
 8004ffa:	9907      	ldr	r1, [sp, #28]
 8004ffc:	4b63      	ldr	r3, [pc, #396]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8004ffe:	f7fc ff2f 	bl	8001e60 <__aeabi_dmul>
 8005002:	0004      	movs	r4, r0
 8005004:	000d      	movs	r5, r1
 8005006:	2e1f      	cmp	r6, #31
 8005008:	dc0f      	bgt.n	800502a <__ieee754_rem_pio2+0x18e>
 800500a:	4a67      	ldr	r2, [pc, #412]	; (80051a8 <__ieee754_rem_pio2+0x30c>)
 800500c:	1e73      	subs	r3, r6, #1
 800500e:	009b      	lsls	r3, r3, #2
 8005010:	589b      	ldr	r3, [r3, r2]
 8005012:	9a02      	ldr	r2, [sp, #8]
 8005014:	4293      	cmp	r3, r2
 8005016:	d008      	beq.n	800502a <__ieee754_rem_pio2+0x18e>
 8005018:	9804      	ldr	r0, [sp, #16]
 800501a:	9905      	ldr	r1, [sp, #20]
 800501c:	0022      	movs	r2, r4
 800501e:	002b      	movs	r3, r5
 8005020:	f7fd f990 	bl	8002344 <__aeabi_dsub>
 8005024:	6038      	str	r0, [r7, #0]
 8005026:	6079      	str	r1, [r7, #4]
 8005028:	e012      	b.n	8005050 <__ieee754_rem_pio2+0x1b4>
 800502a:	0022      	movs	r2, r4
 800502c:	9804      	ldr	r0, [sp, #16]
 800502e:	9905      	ldr	r1, [sp, #20]
 8005030:	002b      	movs	r3, r5
 8005032:	f7fd f987 	bl	8002344 <__aeabi_dsub>
 8005036:	9b02      	ldr	r3, [sp, #8]
 8005038:	151b      	asrs	r3, r3, #20
 800503a:	9308      	str	r3, [sp, #32]
 800503c:	9a08      	ldr	r2, [sp, #32]
 800503e:	004b      	lsls	r3, r1, #1
 8005040:	0d5b      	lsrs	r3, r3, #21
 8005042:	1ad3      	subs	r3, r2, r3
 8005044:	2b10      	cmp	r3, #16
 8005046:	dc21      	bgt.n	800508c <__ieee754_rem_pio2+0x1f0>
 8005048:	0002      	movs	r2, r0
 800504a:	000b      	movs	r3, r1
 800504c:	603a      	str	r2, [r7, #0]
 800504e:	607b      	str	r3, [r7, #4]
 8005050:	9804      	ldr	r0, [sp, #16]
 8005052:	9905      	ldr	r1, [sp, #20]
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	683a      	ldr	r2, [r7, #0]
 8005058:	9302      	str	r3, [sp, #8]
 800505a:	9b02      	ldr	r3, [sp, #8]
 800505c:	f7fd f972 	bl	8002344 <__aeabi_dsub>
 8005060:	0022      	movs	r2, r4
 8005062:	002b      	movs	r3, r5
 8005064:	f7fd f96e 	bl	8002344 <__aeabi_dsub>
 8005068:	000b      	movs	r3, r1
 800506a:	0002      	movs	r2, r0
 800506c:	60ba      	str	r2, [r7, #8]
 800506e:	60fb      	str	r3, [r7, #12]
 8005070:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005072:	2b00      	cmp	r3, #0
 8005074:	db00      	blt.n	8005078 <__ieee754_rem_pio2+0x1dc>
 8005076:	e74c      	b.n	8004f12 <__ieee754_rem_pio2+0x76>
 8005078:	2280      	movs	r2, #128	; 0x80
 800507a:	0612      	lsls	r2, r2, #24
 800507c:	4694      	mov	ip, r2
 800507e:	9b02      	ldr	r3, [sp, #8]
 8005080:	1889      	adds	r1, r1, r2
 8005082:	4463      	add	r3, ip
 8005084:	607b      	str	r3, [r7, #4]
 8005086:	60b8      	str	r0, [r7, #8]
 8005088:	60f9      	str	r1, [r7, #12]
 800508a:	e778      	b.n	8004f7e <__ieee754_rem_pio2+0xe2>
 800508c:	22d3      	movs	r2, #211	; 0xd3
 800508e:	9806      	ldr	r0, [sp, #24]
 8005090:	9907      	ldr	r1, [sp, #28]
 8005092:	0552      	lsls	r2, r2, #21
 8005094:	4b3d      	ldr	r3, [pc, #244]	; (800518c <__ieee754_rem_pio2+0x2f0>)
 8005096:	f7fc fee3 	bl	8001e60 <__aeabi_dmul>
 800509a:	0004      	movs	r4, r0
 800509c:	000d      	movs	r5, r1
 800509e:	0002      	movs	r2, r0
 80050a0:	000b      	movs	r3, r1
 80050a2:	9804      	ldr	r0, [sp, #16]
 80050a4:	9905      	ldr	r1, [sp, #20]
 80050a6:	f7fd f94d 	bl	8002344 <__aeabi_dsub>
 80050aa:	0002      	movs	r2, r0
 80050ac:	000b      	movs	r3, r1
 80050ae:	9002      	str	r0, [sp, #8]
 80050b0:	9103      	str	r1, [sp, #12]
 80050b2:	9804      	ldr	r0, [sp, #16]
 80050b4:	9905      	ldr	r1, [sp, #20]
 80050b6:	f7fd f945 	bl	8002344 <__aeabi_dsub>
 80050ba:	0022      	movs	r2, r4
 80050bc:	002b      	movs	r3, r5
 80050be:	f7fd f941 	bl	8002344 <__aeabi_dsub>
 80050c2:	0004      	movs	r4, r0
 80050c4:	000d      	movs	r5, r1
 80050c6:	9806      	ldr	r0, [sp, #24]
 80050c8:	9907      	ldr	r1, [sp, #28]
 80050ca:	4a31      	ldr	r2, [pc, #196]	; (8005190 <__ieee754_rem_pio2+0x2f4>)
 80050cc:	4b31      	ldr	r3, [pc, #196]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 80050ce:	f7fc fec7 	bl	8001e60 <__aeabi_dmul>
 80050d2:	0022      	movs	r2, r4
 80050d4:	002b      	movs	r3, r5
 80050d6:	f7fd f935 	bl	8002344 <__aeabi_dsub>
 80050da:	0002      	movs	r2, r0
 80050dc:	000b      	movs	r3, r1
 80050de:	0004      	movs	r4, r0
 80050e0:	000d      	movs	r5, r1
 80050e2:	9802      	ldr	r0, [sp, #8]
 80050e4:	9903      	ldr	r1, [sp, #12]
 80050e6:	f7fd f92d 	bl	8002344 <__aeabi_dsub>
 80050ea:	9a08      	ldr	r2, [sp, #32]
 80050ec:	004b      	lsls	r3, r1, #1
 80050ee:	0d5b      	lsrs	r3, r3, #21
 80050f0:	1ad3      	subs	r3, r2, r3
 80050f2:	2b31      	cmp	r3, #49	; 0x31
 80050f4:	dc08      	bgt.n	8005108 <__ieee754_rem_pio2+0x26c>
 80050f6:	0002      	movs	r2, r0
 80050f8:	000b      	movs	r3, r1
 80050fa:	603a      	str	r2, [r7, #0]
 80050fc:	607b      	str	r3, [r7, #4]
 80050fe:	9a02      	ldr	r2, [sp, #8]
 8005100:	9b03      	ldr	r3, [sp, #12]
 8005102:	9204      	str	r2, [sp, #16]
 8005104:	9305      	str	r3, [sp, #20]
 8005106:	e7a3      	b.n	8005050 <__ieee754_rem_pio2+0x1b4>
 8005108:	22b8      	movs	r2, #184	; 0xb8
 800510a:	9806      	ldr	r0, [sp, #24]
 800510c:	9907      	ldr	r1, [sp, #28]
 800510e:	0592      	lsls	r2, r2, #22
 8005110:	4b20      	ldr	r3, [pc, #128]	; (8005194 <__ieee754_rem_pio2+0x2f8>)
 8005112:	f7fc fea5 	bl	8001e60 <__aeabi_dmul>
 8005116:	0004      	movs	r4, r0
 8005118:	000d      	movs	r5, r1
 800511a:	0002      	movs	r2, r0
 800511c:	000b      	movs	r3, r1
 800511e:	9802      	ldr	r0, [sp, #8]
 8005120:	9903      	ldr	r1, [sp, #12]
 8005122:	f7fd f90f 	bl	8002344 <__aeabi_dsub>
 8005126:	0002      	movs	r2, r0
 8005128:	000b      	movs	r3, r1
 800512a:	9004      	str	r0, [sp, #16]
 800512c:	9105      	str	r1, [sp, #20]
 800512e:	9802      	ldr	r0, [sp, #8]
 8005130:	9903      	ldr	r1, [sp, #12]
 8005132:	f7fd f907 	bl	8002344 <__aeabi_dsub>
 8005136:	0022      	movs	r2, r4
 8005138:	002b      	movs	r3, r5
 800513a:	f7fd f903 	bl	8002344 <__aeabi_dsub>
 800513e:	0004      	movs	r4, r0
 8005140:	000d      	movs	r5, r1
 8005142:	9806      	ldr	r0, [sp, #24]
 8005144:	9907      	ldr	r1, [sp, #28]
 8005146:	4a19      	ldr	r2, [pc, #100]	; (80051ac <__ieee754_rem_pio2+0x310>)
 8005148:	4b19      	ldr	r3, [pc, #100]	; (80051b0 <__ieee754_rem_pio2+0x314>)
 800514a:	f7fc fe89 	bl	8001e60 <__aeabi_dmul>
 800514e:	0022      	movs	r2, r4
 8005150:	002b      	movs	r3, r5
 8005152:	f7fd f8f7 	bl	8002344 <__aeabi_dsub>
 8005156:	0004      	movs	r4, r0
 8005158:	000d      	movs	r5, r1
 800515a:	e75d      	b.n	8005018 <__ieee754_rem_pio2+0x17c>
 800515c:	4b15      	ldr	r3, [pc, #84]	; (80051b4 <__ieee754_rem_pio2+0x318>)
 800515e:	9a02      	ldr	r2, [sp, #8]
 8005160:	429a      	cmp	r2, r3
 8005162:	dd29      	ble.n	80051b8 <__ieee754_rem_pio2+0x31c>
 8005164:	0002      	movs	r2, r0
 8005166:	000b      	movs	r3, r1
 8005168:	f7fd f8ec 	bl	8002344 <__aeabi_dsub>
 800516c:	60b8      	str	r0, [r7, #8]
 800516e:	60f9      	str	r1, [r7, #12]
 8005170:	6038      	str	r0, [r7, #0]
 8005172:	6079      	str	r1, [r7, #4]
 8005174:	e6a6      	b.n	8004ec4 <__ieee754_rem_pio2+0x28>
 8005176:	46c0      	nop			; (mov r8, r8)
 8005178:	3fe921fb 	.word	0x3fe921fb
 800517c:	4002d97b 	.word	0x4002d97b
 8005180:	54400000 	.word	0x54400000
 8005184:	3ff921fb 	.word	0x3ff921fb
 8005188:	1a626331 	.word	0x1a626331
 800518c:	3dd0b461 	.word	0x3dd0b461
 8005190:	2e037073 	.word	0x2e037073
 8005194:	3ba3198a 	.word	0x3ba3198a
 8005198:	413921fb 	.word	0x413921fb
 800519c:	6dc9c883 	.word	0x6dc9c883
 80051a0:	3fe45f30 	.word	0x3fe45f30
 80051a4:	3fe00000 	.word	0x3fe00000
 80051a8:	080063d8 	.word	0x080063d8
 80051ac:	252049c1 	.word	0x252049c1
 80051b0:	397b839a 	.word	0x397b839a
 80051b4:	7fefffff 	.word	0x7fefffff
 80051b8:	9b02      	ldr	r3, [sp, #8]
 80051ba:	4a29      	ldr	r2, [pc, #164]	; (8005260 <__ieee754_rem_pio2+0x3c4>)
 80051bc:	151b      	asrs	r3, r3, #20
 80051be:	189b      	adds	r3, r3, r2
 80051c0:	9a02      	ldr	r2, [sp, #8]
 80051c2:	9304      	str	r3, [sp, #16]
 80051c4:	051b      	lsls	r3, r3, #20
 80051c6:	1ad5      	subs	r5, r2, r3
 80051c8:	0029      	movs	r1, r5
 80051ca:	f7fd fc1f 	bl	8002a0c <__aeabi_d2iz>
 80051ce:	f7fd fc53 	bl	8002a78 <__aeabi_i2d>
 80051d2:	0002      	movs	r2, r0
 80051d4:	000b      	movs	r3, r1
 80051d6:	0020      	movs	r0, r4
 80051d8:	0029      	movs	r1, r5
 80051da:	920a      	str	r2, [sp, #40]	; 0x28
 80051dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80051de:	f7fd f8b1 	bl	8002344 <__aeabi_dsub>
 80051e2:	2200      	movs	r2, #0
 80051e4:	4b1f      	ldr	r3, [pc, #124]	; (8005264 <__ieee754_rem_pio2+0x3c8>)
 80051e6:	f7fc fe3b 	bl	8001e60 <__aeabi_dmul>
 80051ea:	0004      	movs	r4, r0
 80051ec:	000d      	movs	r5, r1
 80051ee:	f7fd fc0d 	bl	8002a0c <__aeabi_d2iz>
 80051f2:	f7fd fc41 	bl	8002a78 <__aeabi_i2d>
 80051f6:	0002      	movs	r2, r0
 80051f8:	000b      	movs	r3, r1
 80051fa:	ae0a      	add	r6, sp, #40	; 0x28
 80051fc:	60b2      	str	r2, [r6, #8]
 80051fe:	60f3      	str	r3, [r6, #12]
 8005200:	0020      	movs	r0, r4
 8005202:	0029      	movs	r1, r5
 8005204:	f7fd f89e 	bl	8002344 <__aeabi_dsub>
 8005208:	2200      	movs	r2, #0
 800520a:	4b16      	ldr	r3, [pc, #88]	; (8005264 <__ieee754_rem_pio2+0x3c8>)
 800520c:	f7fc fe28 	bl	8001e60 <__aeabi_dmul>
 8005210:	2403      	movs	r4, #3
 8005212:	6130      	str	r0, [r6, #16]
 8005214:	6171      	str	r1, [r6, #20]
 8005216:	1e65      	subs	r5, r4, #1
 8005218:	00eb      	lsls	r3, r5, #3
 800521a:	18f3      	adds	r3, r6, r3
 800521c:	6818      	ldr	r0, [r3, #0]
 800521e:	6859      	ldr	r1, [r3, #4]
 8005220:	2200      	movs	r2, #0
 8005222:	2300      	movs	r3, #0
 8005224:	f7fb f900 	bl	8000428 <__aeabi_dcmpeq>
 8005228:	2800      	cmp	r0, #0
 800522a:	d117      	bne.n	800525c <__ieee754_rem_pio2+0x3c0>
 800522c:	4b0e      	ldr	r3, [pc, #56]	; (8005268 <__ieee754_rem_pio2+0x3cc>)
 800522e:	0030      	movs	r0, r6
 8005230:	9301      	str	r3, [sp, #4]
 8005232:	2302      	movs	r3, #2
 8005234:	9a04      	ldr	r2, [sp, #16]
 8005236:	9300      	str	r3, [sp, #0]
 8005238:	0039      	movs	r1, r7
 800523a:	0023      	movs	r3, r4
 800523c:	f000 f988 	bl	8005550 <__kernel_rem_pio2>
 8005240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005242:	0006      	movs	r6, r0
 8005244:	2b00      	cmp	r3, #0
 8005246:	db00      	blt.n	800524a <__ieee754_rem_pio2+0x3ae>
 8005248:	e663      	b.n	8004f12 <__ieee754_rem_pio2+0x76>
 800524a:	2280      	movs	r2, #128	; 0x80
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	0612      	lsls	r2, r2, #24
 8005250:	189b      	adds	r3, r3, r2
 8005252:	607b      	str	r3, [r7, #4]
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	189b      	adds	r3, r3, r2
 8005258:	60fb      	str	r3, [r7, #12]
 800525a:	e690      	b.n	8004f7e <__ieee754_rem_pio2+0xe2>
 800525c:	002c      	movs	r4, r5
 800525e:	e7da      	b.n	8005216 <__ieee754_rem_pio2+0x37a>
 8005260:	fffffbea 	.word	0xfffffbea
 8005264:	41700000 	.word	0x41700000
 8005268:	08006458 	.word	0x08006458

0800526c <__ieee754_sqrt>:
 800526c:	4b55      	ldr	r3, [pc, #340]	; (80053c4 <__ieee754_sqrt+0x158>)
 800526e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005270:	001a      	movs	r2, r3
 8005272:	0005      	movs	r5, r0
 8005274:	000c      	movs	r4, r1
 8005276:	400a      	ands	r2, r1
 8005278:	429a      	cmp	r2, r3
 800527a:	d10f      	bne.n	800529c <__ieee754_sqrt+0x30>
 800527c:	0002      	movs	r2, r0
 800527e:	000b      	movs	r3, r1
 8005280:	f7fc fdee 	bl	8001e60 <__aeabi_dmul>
 8005284:	0002      	movs	r2, r0
 8005286:	000b      	movs	r3, r1
 8005288:	0028      	movs	r0, r5
 800528a:	0021      	movs	r1, r4
 800528c:	f7fb fec2 	bl	8001014 <__aeabi_dadd>
 8005290:	0005      	movs	r5, r0
 8005292:	000c      	movs	r4, r1
 8005294:	0028      	movs	r0, r5
 8005296:	0021      	movs	r1, r4
 8005298:	b003      	add	sp, #12
 800529a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800529c:	0002      	movs	r2, r0
 800529e:	2900      	cmp	r1, #0
 80052a0:	dc10      	bgt.n	80052c4 <__ieee754_sqrt+0x58>
 80052a2:	004b      	lsls	r3, r1, #1
 80052a4:	085b      	lsrs	r3, r3, #1
 80052a6:	4303      	orrs	r3, r0
 80052a8:	d0f4      	beq.n	8005294 <__ieee754_sqrt+0x28>
 80052aa:	2000      	movs	r0, #0
 80052ac:	4281      	cmp	r1, r0
 80052ae:	d100      	bne.n	80052b2 <__ieee754_sqrt+0x46>
 80052b0:	e07f      	b.n	80053b2 <__ieee754_sqrt+0x146>
 80052b2:	000b      	movs	r3, r1
 80052b4:	0028      	movs	r0, r5
 80052b6:	f7fd f845 	bl	8002344 <__aeabi_dsub>
 80052ba:	0002      	movs	r2, r0
 80052bc:	000b      	movs	r3, r1
 80052be:	f7fc f9c5 	bl	800164c <__aeabi_ddiv>
 80052c2:	e7e5      	b.n	8005290 <__ieee754_sqrt+0x24>
 80052c4:	1508      	asrs	r0, r1, #20
 80052c6:	d074      	beq.n	80053b2 <__ieee754_sqrt+0x146>
 80052c8:	4b3f      	ldr	r3, [pc, #252]	; (80053c8 <__ieee754_sqrt+0x15c>)
 80052ca:	0309      	lsls	r1, r1, #12
 80052cc:	18c0      	adds	r0, r0, r3
 80052ce:	2380      	movs	r3, #128	; 0x80
 80052d0:	0b09      	lsrs	r1, r1, #12
 80052d2:	035b      	lsls	r3, r3, #13
 80052d4:	4319      	orrs	r1, r3
 80052d6:	07c3      	lsls	r3, r0, #31
 80052d8:	d503      	bpl.n	80052e2 <__ieee754_sqrt+0x76>
 80052da:	0fd3      	lsrs	r3, r2, #31
 80052dc:	0049      	lsls	r1, r1, #1
 80052de:	18c9      	adds	r1, r1, r3
 80052e0:	0052      	lsls	r2, r2, #1
 80052e2:	2400      	movs	r4, #0
 80052e4:	1043      	asrs	r3, r0, #1
 80052e6:	0049      	lsls	r1, r1, #1
 80052e8:	9301      	str	r3, [sp, #4]
 80052ea:	2580      	movs	r5, #128	; 0x80
 80052ec:	0fd3      	lsrs	r3, r2, #31
 80052ee:	18cb      	adds	r3, r1, r3
 80052f0:	0020      	movs	r0, r4
 80052f2:	2116      	movs	r1, #22
 80052f4:	0052      	lsls	r2, r2, #1
 80052f6:	03ad      	lsls	r5, r5, #14
 80052f8:	1946      	adds	r6, r0, r5
 80052fa:	429e      	cmp	r6, r3
 80052fc:	dc02      	bgt.n	8005304 <__ieee754_sqrt+0x98>
 80052fe:	1970      	adds	r0, r6, r5
 8005300:	1b9b      	subs	r3, r3, r6
 8005302:	1964      	adds	r4, r4, r5
 8005304:	0fd6      	lsrs	r6, r2, #31
 8005306:	005b      	lsls	r3, r3, #1
 8005308:	3901      	subs	r1, #1
 800530a:	199b      	adds	r3, r3, r6
 800530c:	0052      	lsls	r2, r2, #1
 800530e:	086d      	lsrs	r5, r5, #1
 8005310:	2900      	cmp	r1, #0
 8005312:	d1f1      	bne.n	80052f8 <__ieee754_sqrt+0x8c>
 8005314:	2520      	movs	r5, #32
 8005316:	2680      	movs	r6, #128	; 0x80
 8005318:	46ac      	mov	ip, r5
 800531a:	9100      	str	r1, [sp, #0]
 800531c:	0636      	lsls	r6, r6, #24
 800531e:	9d00      	ldr	r5, [sp, #0]
 8005320:	1977      	adds	r7, r6, r5
 8005322:	4283      	cmp	r3, r0
 8005324:	dc02      	bgt.n	800532c <__ieee754_sqrt+0xc0>
 8005326:	d112      	bne.n	800534e <__ieee754_sqrt+0xe2>
 8005328:	4297      	cmp	r7, r2
 800532a:	d810      	bhi.n	800534e <__ieee754_sqrt+0xe2>
 800532c:	19bd      	adds	r5, r7, r6
 800532e:	9500      	str	r5, [sp, #0]
 8005330:	0005      	movs	r5, r0
 8005332:	2f00      	cmp	r7, #0
 8005334:	da03      	bge.n	800533e <__ieee754_sqrt+0xd2>
 8005336:	9d00      	ldr	r5, [sp, #0]
 8005338:	43ed      	mvns	r5, r5
 800533a:	0fed      	lsrs	r5, r5, #31
 800533c:	1945      	adds	r5, r0, r5
 800533e:	1a1b      	subs	r3, r3, r0
 8005340:	42ba      	cmp	r2, r7
 8005342:	4180      	sbcs	r0, r0
 8005344:	4240      	negs	r0, r0
 8005346:	1a1b      	subs	r3, r3, r0
 8005348:	0028      	movs	r0, r5
 800534a:	1bd2      	subs	r2, r2, r7
 800534c:	1989      	adds	r1, r1, r6
 800534e:	0fd5      	lsrs	r5, r2, #31
 8005350:	005b      	lsls	r3, r3, #1
 8005352:	18eb      	adds	r3, r5, r3
 8005354:	2501      	movs	r5, #1
 8005356:	426d      	negs	r5, r5
 8005358:	44ac      	add	ip, r5
 800535a:	4665      	mov	r5, ip
 800535c:	0052      	lsls	r2, r2, #1
 800535e:	0876      	lsrs	r6, r6, #1
 8005360:	2d00      	cmp	r5, #0
 8005362:	d1dc      	bne.n	800531e <__ieee754_sqrt+0xb2>
 8005364:	4313      	orrs	r3, r2
 8005366:	d003      	beq.n	8005370 <__ieee754_sqrt+0x104>
 8005368:	1c4b      	adds	r3, r1, #1
 800536a:	d127      	bne.n	80053bc <__ieee754_sqrt+0x150>
 800536c:	4661      	mov	r1, ip
 800536e:	3401      	adds	r4, #1
 8005370:	4b16      	ldr	r3, [pc, #88]	; (80053cc <__ieee754_sqrt+0x160>)
 8005372:	1060      	asrs	r0, r4, #1
 8005374:	18c0      	adds	r0, r0, r3
 8005376:	0849      	lsrs	r1, r1, #1
 8005378:	07e3      	lsls	r3, r4, #31
 800537a:	d502      	bpl.n	8005382 <__ieee754_sqrt+0x116>
 800537c:	2380      	movs	r3, #128	; 0x80
 800537e:	061b      	lsls	r3, r3, #24
 8005380:	4319      	orrs	r1, r3
 8005382:	9b01      	ldr	r3, [sp, #4]
 8005384:	000d      	movs	r5, r1
 8005386:	051c      	lsls	r4, r3, #20
 8005388:	1823      	adds	r3, r4, r0
 800538a:	001c      	movs	r4, r3
 800538c:	e782      	b.n	8005294 <__ieee754_sqrt+0x28>
 800538e:	0ad1      	lsrs	r1, r2, #11
 8005390:	3b15      	subs	r3, #21
 8005392:	0552      	lsls	r2, r2, #21
 8005394:	2900      	cmp	r1, #0
 8005396:	d0fa      	beq.n	800538e <__ieee754_sqrt+0x122>
 8005398:	2480      	movs	r4, #128	; 0x80
 800539a:	0364      	lsls	r4, r4, #13
 800539c:	4221      	tst	r1, r4
 800539e:	d00a      	beq.n	80053b6 <__ieee754_sqrt+0x14a>
 80053a0:	2420      	movs	r4, #32
 80053a2:	0016      	movs	r6, r2
 80053a4:	1a24      	subs	r4, r4, r0
 80053a6:	40e6      	lsrs	r6, r4
 80053a8:	1e45      	subs	r5, r0, #1
 80053aa:	4082      	lsls	r2, r0
 80053ac:	4331      	orrs	r1, r6
 80053ae:	1b58      	subs	r0, r3, r5
 80053b0:	e78a      	b.n	80052c8 <__ieee754_sqrt+0x5c>
 80053b2:	2300      	movs	r3, #0
 80053b4:	e7ee      	b.n	8005394 <__ieee754_sqrt+0x128>
 80053b6:	0049      	lsls	r1, r1, #1
 80053b8:	3001      	adds	r0, #1
 80053ba:	e7ef      	b.n	800539c <__ieee754_sqrt+0x130>
 80053bc:	2301      	movs	r3, #1
 80053be:	3101      	adds	r1, #1
 80053c0:	4399      	bics	r1, r3
 80053c2:	e7d5      	b.n	8005370 <__ieee754_sqrt+0x104>
 80053c4:	7ff00000 	.word	0x7ff00000
 80053c8:	fffffc01 	.word	0xfffffc01
 80053cc:	3fe00000 	.word	0x3fe00000

080053d0 <__kernel_cos>:
 80053d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053d2:	b087      	sub	sp, #28
 80053d4:	9204      	str	r2, [sp, #16]
 80053d6:	9305      	str	r3, [sp, #20]
 80053d8:	004b      	lsls	r3, r1, #1
 80053da:	085b      	lsrs	r3, r3, #1
 80053dc:	9300      	str	r3, [sp, #0]
 80053de:	9a00      	ldr	r2, [sp, #0]
 80053e0:	4b48      	ldr	r3, [pc, #288]	; (8005504 <__kernel_cos+0x134>)
 80053e2:	0005      	movs	r5, r0
 80053e4:	000c      	movs	r4, r1
 80053e6:	429a      	cmp	r2, r3
 80053e8:	dc04      	bgt.n	80053f4 <__kernel_cos+0x24>
 80053ea:	f7fd fb0f 	bl	8002a0c <__aeabi_d2iz>
 80053ee:	2800      	cmp	r0, #0
 80053f0:	d100      	bne.n	80053f4 <__kernel_cos+0x24>
 80053f2:	e084      	b.n	80054fe <__kernel_cos+0x12e>
 80053f4:	002a      	movs	r2, r5
 80053f6:	0023      	movs	r3, r4
 80053f8:	0028      	movs	r0, r5
 80053fa:	0021      	movs	r1, r4
 80053fc:	f7fc fd30 	bl	8001e60 <__aeabi_dmul>
 8005400:	2200      	movs	r2, #0
 8005402:	4b41      	ldr	r3, [pc, #260]	; (8005508 <__kernel_cos+0x138>)
 8005404:	0006      	movs	r6, r0
 8005406:	000f      	movs	r7, r1
 8005408:	f7fc fd2a 	bl	8001e60 <__aeabi_dmul>
 800540c:	4a3f      	ldr	r2, [pc, #252]	; (800550c <__kernel_cos+0x13c>)
 800540e:	9002      	str	r0, [sp, #8]
 8005410:	9103      	str	r1, [sp, #12]
 8005412:	4b3f      	ldr	r3, [pc, #252]	; (8005510 <__kernel_cos+0x140>)
 8005414:	0030      	movs	r0, r6
 8005416:	0039      	movs	r1, r7
 8005418:	f7fc fd22 	bl	8001e60 <__aeabi_dmul>
 800541c:	4a3d      	ldr	r2, [pc, #244]	; (8005514 <__kernel_cos+0x144>)
 800541e:	4b3e      	ldr	r3, [pc, #248]	; (8005518 <__kernel_cos+0x148>)
 8005420:	f7fb fdf8 	bl	8001014 <__aeabi_dadd>
 8005424:	0032      	movs	r2, r6
 8005426:	003b      	movs	r3, r7
 8005428:	f7fc fd1a 	bl	8001e60 <__aeabi_dmul>
 800542c:	4a3b      	ldr	r2, [pc, #236]	; (800551c <__kernel_cos+0x14c>)
 800542e:	4b3c      	ldr	r3, [pc, #240]	; (8005520 <__kernel_cos+0x150>)
 8005430:	f7fc ff88 	bl	8002344 <__aeabi_dsub>
 8005434:	0032      	movs	r2, r6
 8005436:	003b      	movs	r3, r7
 8005438:	f7fc fd12 	bl	8001e60 <__aeabi_dmul>
 800543c:	4a39      	ldr	r2, [pc, #228]	; (8005524 <__kernel_cos+0x154>)
 800543e:	4b3a      	ldr	r3, [pc, #232]	; (8005528 <__kernel_cos+0x158>)
 8005440:	f7fb fde8 	bl	8001014 <__aeabi_dadd>
 8005444:	0032      	movs	r2, r6
 8005446:	003b      	movs	r3, r7
 8005448:	f7fc fd0a 	bl	8001e60 <__aeabi_dmul>
 800544c:	4a37      	ldr	r2, [pc, #220]	; (800552c <__kernel_cos+0x15c>)
 800544e:	4b38      	ldr	r3, [pc, #224]	; (8005530 <__kernel_cos+0x160>)
 8005450:	f7fc ff78 	bl	8002344 <__aeabi_dsub>
 8005454:	0032      	movs	r2, r6
 8005456:	003b      	movs	r3, r7
 8005458:	f7fc fd02 	bl	8001e60 <__aeabi_dmul>
 800545c:	4a35      	ldr	r2, [pc, #212]	; (8005534 <__kernel_cos+0x164>)
 800545e:	4b36      	ldr	r3, [pc, #216]	; (8005538 <__kernel_cos+0x168>)
 8005460:	f7fb fdd8 	bl	8001014 <__aeabi_dadd>
 8005464:	0032      	movs	r2, r6
 8005466:	003b      	movs	r3, r7
 8005468:	f7fc fcfa 	bl	8001e60 <__aeabi_dmul>
 800546c:	0032      	movs	r2, r6
 800546e:	003b      	movs	r3, r7
 8005470:	f7fc fcf6 	bl	8001e60 <__aeabi_dmul>
 8005474:	9a04      	ldr	r2, [sp, #16]
 8005476:	9b05      	ldr	r3, [sp, #20]
 8005478:	0006      	movs	r6, r0
 800547a:	000f      	movs	r7, r1
 800547c:	0028      	movs	r0, r5
 800547e:	0021      	movs	r1, r4
 8005480:	f7fc fcee 	bl	8001e60 <__aeabi_dmul>
 8005484:	0002      	movs	r2, r0
 8005486:	000b      	movs	r3, r1
 8005488:	0030      	movs	r0, r6
 800548a:	0039      	movs	r1, r7
 800548c:	f7fc ff5a 	bl	8002344 <__aeabi_dsub>
 8005490:	4b2a      	ldr	r3, [pc, #168]	; (800553c <__kernel_cos+0x16c>)
 8005492:	9a00      	ldr	r2, [sp, #0]
 8005494:	0004      	movs	r4, r0
 8005496:	000d      	movs	r5, r1
 8005498:	429a      	cmp	r2, r3
 800549a:	dc0d      	bgt.n	80054b8 <__kernel_cos+0xe8>
 800549c:	0002      	movs	r2, r0
 800549e:	000b      	movs	r3, r1
 80054a0:	9802      	ldr	r0, [sp, #8]
 80054a2:	9903      	ldr	r1, [sp, #12]
 80054a4:	f7fc ff4e 	bl	8002344 <__aeabi_dsub>
 80054a8:	0002      	movs	r2, r0
 80054aa:	2000      	movs	r0, #0
 80054ac:	000b      	movs	r3, r1
 80054ae:	4924      	ldr	r1, [pc, #144]	; (8005540 <__kernel_cos+0x170>)
 80054b0:	f7fc ff48 	bl	8002344 <__aeabi_dsub>
 80054b4:	b007      	add	sp, #28
 80054b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80054b8:	4b22      	ldr	r3, [pc, #136]	; (8005544 <__kernel_cos+0x174>)
 80054ba:	9a00      	ldr	r2, [sp, #0]
 80054bc:	2600      	movs	r6, #0
 80054be:	429a      	cmp	r2, r3
 80054c0:	dc1b      	bgt.n	80054fa <__kernel_cos+0x12a>
 80054c2:	0013      	movs	r3, r2
 80054c4:	4a20      	ldr	r2, [pc, #128]	; (8005548 <__kernel_cos+0x178>)
 80054c6:	4694      	mov	ip, r2
 80054c8:	4463      	add	r3, ip
 80054ca:	001f      	movs	r7, r3
 80054cc:	0032      	movs	r2, r6
 80054ce:	003b      	movs	r3, r7
 80054d0:	2000      	movs	r0, #0
 80054d2:	491b      	ldr	r1, [pc, #108]	; (8005540 <__kernel_cos+0x170>)
 80054d4:	f7fc ff36 	bl	8002344 <__aeabi_dsub>
 80054d8:	0032      	movs	r2, r6
 80054da:	9000      	str	r0, [sp, #0]
 80054dc:	9101      	str	r1, [sp, #4]
 80054de:	9802      	ldr	r0, [sp, #8]
 80054e0:	9903      	ldr	r1, [sp, #12]
 80054e2:	003b      	movs	r3, r7
 80054e4:	f7fc ff2e 	bl	8002344 <__aeabi_dsub>
 80054e8:	0022      	movs	r2, r4
 80054ea:	002b      	movs	r3, r5
 80054ec:	f7fc ff2a 	bl	8002344 <__aeabi_dsub>
 80054f0:	0002      	movs	r2, r0
 80054f2:	000b      	movs	r3, r1
 80054f4:	9800      	ldr	r0, [sp, #0]
 80054f6:	9901      	ldr	r1, [sp, #4]
 80054f8:	e7da      	b.n	80054b0 <__kernel_cos+0xe0>
 80054fa:	4f14      	ldr	r7, [pc, #80]	; (800554c <__kernel_cos+0x17c>)
 80054fc:	e7e6      	b.n	80054cc <__kernel_cos+0xfc>
 80054fe:	2000      	movs	r0, #0
 8005500:	490f      	ldr	r1, [pc, #60]	; (8005540 <__kernel_cos+0x170>)
 8005502:	e7d7      	b.n	80054b4 <__kernel_cos+0xe4>
 8005504:	3e3fffff 	.word	0x3e3fffff
 8005508:	3fe00000 	.word	0x3fe00000
 800550c:	be8838d4 	.word	0xbe8838d4
 8005510:	bda8fae9 	.word	0xbda8fae9
 8005514:	bdb4b1c4 	.word	0xbdb4b1c4
 8005518:	3e21ee9e 	.word	0x3e21ee9e
 800551c:	809c52ad 	.word	0x809c52ad
 8005520:	3e927e4f 	.word	0x3e927e4f
 8005524:	19cb1590 	.word	0x19cb1590
 8005528:	3efa01a0 	.word	0x3efa01a0
 800552c:	16c15177 	.word	0x16c15177
 8005530:	3f56c16c 	.word	0x3f56c16c
 8005534:	5555554c 	.word	0x5555554c
 8005538:	3fa55555 	.word	0x3fa55555
 800553c:	3fd33332 	.word	0x3fd33332
 8005540:	3ff00000 	.word	0x3ff00000
 8005544:	3fe90000 	.word	0x3fe90000
 8005548:	ffe00000 	.word	0xffe00000
 800554c:	3fd20000 	.word	0x3fd20000

08005550 <__kernel_rem_pio2>:
 8005550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005552:	0015      	movs	r5, r2
 8005554:	4cdc      	ldr	r4, [pc, #880]	; (80058c8 <__kernel_rem_pio2+0x378>)
 8005556:	44a5      	add	sp, r4
 8005558:	930b      	str	r3, [sp, #44]	; 0x2c
 800555a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800555c:	900d      	str	r0, [sp, #52]	; 0x34
 800555e:	009a      	lsls	r2, r3, #2
 8005560:	4bda      	ldr	r3, [pc, #872]	; (80058cc <__kernel_rem_pio2+0x37c>)
 8005562:	9103      	str	r1, [sp, #12]
 8005564:	58d3      	ldr	r3, [r2, r3]
 8005566:	1ee8      	subs	r0, r5, #3
 8005568:	9306      	str	r3, [sp, #24]
 800556a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800556c:	2118      	movs	r1, #24
 800556e:	3b01      	subs	r3, #1
 8005570:	9308      	str	r3, [sp, #32]
 8005572:	f7fa fe5d 	bl	8000230 <__divsi3>
 8005576:	43c3      	mvns	r3, r0
 8005578:	0004      	movs	r4, r0
 800557a:	17db      	asrs	r3, r3, #31
 800557c:	401c      	ands	r4, r3
 800557e:	2318      	movs	r3, #24
 8005580:	1c62      	adds	r2, r4, #1
 8005582:	425b      	negs	r3, r3
 8005584:	4353      	muls	r3, r2
 8005586:	9a08      	ldr	r2, [sp, #32]
 8005588:	195b      	adds	r3, r3, r5
 800558a:	4694      	mov	ip, r2
 800558c:	2500      	movs	r5, #0
 800558e:	9300      	str	r3, [sp, #0]
 8005590:	9b06      	ldr	r3, [sp, #24]
 8005592:	1aa7      	subs	r7, r4, r2
 8005594:	4463      	add	r3, ip
 8005596:	9304      	str	r3, [sp, #16]
 8005598:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800559a:	00be      	lsls	r6, r7, #2
 800559c:	199e      	adds	r6, r3, r6
 800559e:	9b04      	ldr	r3, [sp, #16]
 80055a0:	429d      	cmp	r5, r3
 80055a2:	dc00      	bgt.n	80055a6 <__kernel_rem_pio2+0x56>
 80055a4:	e094      	b.n	80056d0 <__kernel_rem_pio2+0x180>
 80055a6:	2600      	movs	r6, #0
 80055a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80055aa:	00dd      	lsls	r5, r3, #3
 80055ac:	ab28      	add	r3, sp, #160	; 0xa0
 80055ae:	195d      	adds	r5, r3, r5
 80055b0:	9b06      	ldr	r3, [sp, #24]
 80055b2:	429e      	cmp	r6, r3
 80055b4:	dc00      	bgt.n	80055b8 <__kernel_rem_pio2+0x68>
 80055b6:	e0bc      	b.n	8005732 <__kernel_rem_pio2+0x1e2>
 80055b8:	009b      	lsls	r3, r3, #2
 80055ba:	aa14      	add	r2, sp, #80	; 0x50
 80055bc:	189b      	adds	r3, r3, r2
 80055be:	9312      	str	r3, [sp, #72]	; 0x48
 80055c0:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80055c2:	00a4      	lsls	r4, r4, #2
 80055c4:	191b      	adds	r3, r3, r4
 80055c6:	9f06      	ldr	r7, [sp, #24]
 80055c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80055ca:	003c      	movs	r4, r7
 80055cc:	aa78      	add	r2, sp, #480	; 0x1e0
 80055ce:	00fb      	lsls	r3, r7, #3
 80055d0:	18d3      	adds	r3, r2, r3
 80055d2:	681d      	ldr	r5, [r3, #0]
 80055d4:	685e      	ldr	r6, [r3, #4]
 80055d6:	a914      	add	r1, sp, #80	; 0x50
 80055d8:	00bb      	lsls	r3, r7, #2
 80055da:	185b      	adds	r3, r3, r1
 80055dc:	930a      	str	r3, [sp, #40]	; 0x28
 80055de:	920e      	str	r2, [sp, #56]	; 0x38
 80055e0:	2c00      	cmp	r4, #0
 80055e2:	dd00      	ble.n	80055e6 <__kernel_rem_pio2+0x96>
 80055e4:	e0ab      	b.n	800573e <__kernel_rem_pio2+0x1ee>
 80055e6:	9a00      	ldr	r2, [sp, #0]
 80055e8:	0028      	movs	r0, r5
 80055ea:	0031      	movs	r1, r6
 80055ec:	f000 fdce 	bl	800618c <scalbn>
 80055f0:	23ff      	movs	r3, #255	; 0xff
 80055f2:	2200      	movs	r2, #0
 80055f4:	059b      	lsls	r3, r3, #22
 80055f6:	0004      	movs	r4, r0
 80055f8:	000d      	movs	r5, r1
 80055fa:	f7fc fc31 	bl	8001e60 <__aeabi_dmul>
 80055fe:	f000 fd41 	bl	8006084 <floor>
 8005602:	2200      	movs	r2, #0
 8005604:	4bb2      	ldr	r3, [pc, #712]	; (80058d0 <__kernel_rem_pio2+0x380>)
 8005606:	f7fc fc2b 	bl	8001e60 <__aeabi_dmul>
 800560a:	0002      	movs	r2, r0
 800560c:	000b      	movs	r3, r1
 800560e:	0020      	movs	r0, r4
 8005610:	0029      	movs	r1, r5
 8005612:	f7fc fe97 	bl	8002344 <__aeabi_dsub>
 8005616:	000d      	movs	r5, r1
 8005618:	0004      	movs	r4, r0
 800561a:	f7fd f9f7 	bl	8002a0c <__aeabi_d2iz>
 800561e:	900a      	str	r0, [sp, #40]	; 0x28
 8005620:	f7fd fa2a 	bl	8002a78 <__aeabi_i2d>
 8005624:	000b      	movs	r3, r1
 8005626:	0002      	movs	r2, r0
 8005628:	0029      	movs	r1, r5
 800562a:	0020      	movs	r0, r4
 800562c:	f7fc fe8a 	bl	8002344 <__aeabi_dsub>
 8005630:	9b00      	ldr	r3, [sp, #0]
 8005632:	0005      	movs	r5, r0
 8005634:	000e      	movs	r6, r1
 8005636:	2b00      	cmp	r3, #0
 8005638:	dc00      	bgt.n	800563c <__kernel_rem_pio2+0xec>
 800563a:	e0ab      	b.n	8005794 <__kernel_rem_pio2+0x244>
 800563c:	2118      	movs	r1, #24
 800563e:	1e7b      	subs	r3, r7, #1
 8005640:	009b      	lsls	r3, r3, #2
 8005642:	aa14      	add	r2, sp, #80	; 0x50
 8005644:	589a      	ldr	r2, [r3, r2]
 8005646:	9800      	ldr	r0, [sp, #0]
 8005648:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800564a:	1a09      	subs	r1, r1, r0
 800564c:	0010      	movs	r0, r2
 800564e:	4108      	asrs	r0, r1
 8005650:	1824      	adds	r4, r4, r0
 8005652:	4088      	lsls	r0, r1
 8005654:	1a10      	subs	r0, r2, r0
 8005656:	aa14      	add	r2, sp, #80	; 0x50
 8005658:	5098      	str	r0, [r3, r2]
 800565a:	2317      	movs	r3, #23
 800565c:	9a00      	ldr	r2, [sp, #0]
 800565e:	940a      	str	r4, [sp, #40]	; 0x28
 8005660:	1a9b      	subs	r3, r3, r2
 8005662:	4118      	asrs	r0, r3
 8005664:	9004      	str	r0, [sp, #16]
 8005666:	9b04      	ldr	r3, [sp, #16]
 8005668:	2b00      	cmp	r3, #0
 800566a:	dc00      	bgt.n	800566e <__kernel_rem_pio2+0x11e>
 800566c:	e0a3      	b.n	80057b6 <__kernel_rem_pio2+0x266>
 800566e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005670:	2200      	movs	r2, #0
 8005672:	3301      	adds	r3, #1
 8005674:	930a      	str	r3, [sp, #40]	; 0x28
 8005676:	2380      	movs	r3, #128	; 0x80
 8005678:	045b      	lsls	r3, r3, #17
 800567a:	0014      	movs	r4, r2
 800567c:	469c      	mov	ip, r3
 800567e:	4297      	cmp	r7, r2
 8005680:	dd00      	ble.n	8005684 <__kernel_rem_pio2+0x134>
 8005682:	e0d6      	b.n	8005832 <__kernel_rem_pio2+0x2e2>
 8005684:	9b00      	ldr	r3, [sp, #0]
 8005686:	2b00      	cmp	r3, #0
 8005688:	dd05      	ble.n	8005696 <__kernel_rem_pio2+0x146>
 800568a:	2b01      	cmp	r3, #1
 800568c:	d100      	bne.n	8005690 <__kernel_rem_pio2+0x140>
 800568e:	e0e5      	b.n	800585c <__kernel_rem_pio2+0x30c>
 8005690:	2b02      	cmp	r3, #2
 8005692:	d100      	bne.n	8005696 <__kernel_rem_pio2+0x146>
 8005694:	e0ec      	b.n	8005870 <__kernel_rem_pio2+0x320>
 8005696:	9b04      	ldr	r3, [sp, #16]
 8005698:	2b02      	cmp	r3, #2
 800569a:	d000      	beq.n	800569e <__kernel_rem_pio2+0x14e>
 800569c:	e08b      	b.n	80057b6 <__kernel_rem_pio2+0x266>
 800569e:	002a      	movs	r2, r5
 80056a0:	0033      	movs	r3, r6
 80056a2:	2000      	movs	r0, #0
 80056a4:	498b      	ldr	r1, [pc, #556]	; (80058d4 <__kernel_rem_pio2+0x384>)
 80056a6:	f7fc fe4d 	bl	8002344 <__aeabi_dsub>
 80056aa:	0005      	movs	r5, r0
 80056ac:	000e      	movs	r6, r1
 80056ae:	2c00      	cmp	r4, #0
 80056b0:	d100      	bne.n	80056b4 <__kernel_rem_pio2+0x164>
 80056b2:	e080      	b.n	80057b6 <__kernel_rem_pio2+0x266>
 80056b4:	9a00      	ldr	r2, [sp, #0]
 80056b6:	2000      	movs	r0, #0
 80056b8:	4986      	ldr	r1, [pc, #536]	; (80058d4 <__kernel_rem_pio2+0x384>)
 80056ba:	f000 fd67 	bl	800618c <scalbn>
 80056be:	0002      	movs	r2, r0
 80056c0:	000b      	movs	r3, r1
 80056c2:	0028      	movs	r0, r5
 80056c4:	0031      	movs	r1, r6
 80056c6:	f7fc fe3d 	bl	8002344 <__aeabi_dsub>
 80056ca:	0005      	movs	r5, r0
 80056cc:	000e      	movs	r6, r1
 80056ce:	e072      	b.n	80057b6 <__kernel_rem_pio2+0x266>
 80056d0:	42ef      	cmn	r7, r5
 80056d2:	d40a      	bmi.n	80056ea <__kernel_rem_pio2+0x19a>
 80056d4:	00ab      	lsls	r3, r5, #2
 80056d6:	58f0      	ldr	r0, [r6, r3]
 80056d8:	f7fd f9ce 	bl	8002a78 <__aeabi_i2d>
 80056dc:	00eb      	lsls	r3, r5, #3
 80056de:	aa28      	add	r2, sp, #160	; 0xa0
 80056e0:	18d3      	adds	r3, r2, r3
 80056e2:	6018      	str	r0, [r3, #0]
 80056e4:	6059      	str	r1, [r3, #4]
 80056e6:	3501      	adds	r5, #1
 80056e8:	e759      	b.n	800559e <__kernel_rem_pio2+0x4e>
 80056ea:	2000      	movs	r0, #0
 80056ec:	2100      	movs	r1, #0
 80056ee:	e7f5      	b.n	80056dc <__kernel_rem_pio2+0x18c>
 80056f0:	00fb      	lsls	r3, r7, #3
 80056f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80056f4:	1ae9      	subs	r1, r5, r3
 80056f6:	3908      	subs	r1, #8
 80056f8:	18d3      	adds	r3, r2, r3
 80056fa:	681a      	ldr	r2, [r3, #0]
 80056fc:	685b      	ldr	r3, [r3, #4]
 80056fe:	6808      	ldr	r0, [r1, #0]
 8005700:	6849      	ldr	r1, [r1, #4]
 8005702:	f7fc fbad 	bl	8001e60 <__aeabi_dmul>
 8005706:	0002      	movs	r2, r0
 8005708:	000b      	movs	r3, r1
 800570a:	9804      	ldr	r0, [sp, #16]
 800570c:	9905      	ldr	r1, [sp, #20]
 800570e:	f7fb fc81 	bl	8001014 <__aeabi_dadd>
 8005712:	9004      	str	r0, [sp, #16]
 8005714:	9105      	str	r1, [sp, #20]
 8005716:	3701      	adds	r7, #1
 8005718:	9b08      	ldr	r3, [sp, #32]
 800571a:	429f      	cmp	r7, r3
 800571c:	dde8      	ble.n	80056f0 <__kernel_rem_pio2+0x1a0>
 800571e:	00f3      	lsls	r3, r6, #3
 8005720:	aa78      	add	r2, sp, #480	; 0x1e0
 8005722:	18d3      	adds	r3, r2, r3
 8005724:	3601      	adds	r6, #1
 8005726:	9904      	ldr	r1, [sp, #16]
 8005728:	9a05      	ldr	r2, [sp, #20]
 800572a:	3508      	adds	r5, #8
 800572c:	6019      	str	r1, [r3, #0]
 800572e:	605a      	str	r2, [r3, #4]
 8005730:	e73e      	b.n	80055b0 <__kernel_rem_pio2+0x60>
 8005732:	2200      	movs	r2, #0
 8005734:	2300      	movs	r3, #0
 8005736:	2700      	movs	r7, #0
 8005738:	9204      	str	r2, [sp, #16]
 800573a:	9305      	str	r3, [sp, #20]
 800573c:	e7ec      	b.n	8005718 <__kernel_rem_pio2+0x1c8>
 800573e:	2200      	movs	r2, #0
 8005740:	4b65      	ldr	r3, [pc, #404]	; (80058d8 <__kernel_rem_pio2+0x388>)
 8005742:	0028      	movs	r0, r5
 8005744:	0031      	movs	r1, r6
 8005746:	f7fc fb8b 	bl	8001e60 <__aeabi_dmul>
 800574a:	f7fd f95f 	bl	8002a0c <__aeabi_d2iz>
 800574e:	f7fd f993 	bl	8002a78 <__aeabi_i2d>
 8005752:	00a3      	lsls	r3, r4, #2
 8005754:	425b      	negs	r3, r3
 8005756:	930c      	str	r3, [sp, #48]	; 0x30
 8005758:	2200      	movs	r2, #0
 800575a:	4b60      	ldr	r3, [pc, #384]	; (80058dc <__kernel_rem_pio2+0x38c>)
 800575c:	9004      	str	r0, [sp, #16]
 800575e:	9105      	str	r1, [sp, #20]
 8005760:	f7fc fb7e 	bl	8001e60 <__aeabi_dmul>
 8005764:	0002      	movs	r2, r0
 8005766:	000b      	movs	r3, r1
 8005768:	0028      	movs	r0, r5
 800576a:	0031      	movs	r1, r6
 800576c:	f7fc fdea 	bl	8002344 <__aeabi_dsub>
 8005770:	f7fd f94c 	bl	8002a0c <__aeabi_d2iz>
 8005774:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005776:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005778:	3c01      	subs	r4, #1
 800577a:	5098      	str	r0, [r3, r2]
 800577c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800577e:	00e3      	lsls	r3, r4, #3
 8005780:	18d3      	adds	r3, r2, r3
 8005782:	681a      	ldr	r2, [r3, #0]
 8005784:	685b      	ldr	r3, [r3, #4]
 8005786:	9804      	ldr	r0, [sp, #16]
 8005788:	9905      	ldr	r1, [sp, #20]
 800578a:	f7fb fc43 	bl	8001014 <__aeabi_dadd>
 800578e:	0005      	movs	r5, r0
 8005790:	000e      	movs	r6, r1
 8005792:	e725      	b.n	80055e0 <__kernel_rem_pio2+0x90>
 8005794:	9b00      	ldr	r3, [sp, #0]
 8005796:	2b00      	cmp	r3, #0
 8005798:	d106      	bne.n	80057a8 <__kernel_rem_pio2+0x258>
 800579a:	1e7b      	subs	r3, r7, #1
 800579c:	009b      	lsls	r3, r3, #2
 800579e:	aa14      	add	r2, sp, #80	; 0x50
 80057a0:	5898      	ldr	r0, [r3, r2]
 80057a2:	15c3      	asrs	r3, r0, #23
 80057a4:	9304      	str	r3, [sp, #16]
 80057a6:	e75e      	b.n	8005666 <__kernel_rem_pio2+0x116>
 80057a8:	2200      	movs	r2, #0
 80057aa:	4b4d      	ldr	r3, [pc, #308]	; (80058e0 <__kernel_rem_pio2+0x390>)
 80057ac:	f7fa fe60 	bl	8000470 <__aeabi_dcmpge>
 80057b0:	2800      	cmp	r0, #0
 80057b2:	d13b      	bne.n	800582c <__kernel_rem_pio2+0x2dc>
 80057b4:	9004      	str	r0, [sp, #16]
 80057b6:	2200      	movs	r2, #0
 80057b8:	2300      	movs	r3, #0
 80057ba:	0028      	movs	r0, r5
 80057bc:	0031      	movs	r1, r6
 80057be:	f7fa fe33 	bl	8000428 <__aeabi_dcmpeq>
 80057c2:	2800      	cmp	r0, #0
 80057c4:	d100      	bne.n	80057c8 <__kernel_rem_pio2+0x278>
 80057c6:	e0c9      	b.n	800595c <__kernel_rem_pio2+0x40c>
 80057c8:	003b      	movs	r3, r7
 80057ca:	2200      	movs	r2, #0
 80057cc:	1e79      	subs	r1, r7, #1
 80057ce:	9806      	ldr	r0, [sp, #24]
 80057d0:	3b01      	subs	r3, #1
 80057d2:	4298      	cmp	r0, r3
 80057d4:	dd54      	ble.n	8005880 <__kernel_rem_pio2+0x330>
 80057d6:	2a00      	cmp	r2, #0
 80057d8:	d074      	beq.n	80058c4 <__kernel_rem_pio2+0x374>
 80057da:	000f      	movs	r7, r1
 80057dc:	9b00      	ldr	r3, [sp, #0]
 80057de:	3b18      	subs	r3, #24
 80057e0:	9300      	str	r3, [sp, #0]
 80057e2:	00bb      	lsls	r3, r7, #2
 80057e4:	aa14      	add	r2, sp, #80	; 0x50
 80057e6:	589b      	ldr	r3, [r3, r2]
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d100      	bne.n	80057ee <__kernel_rem_pio2+0x29e>
 80057ec:	e0b1      	b.n	8005952 <__kernel_rem_pio2+0x402>
 80057ee:	9a00      	ldr	r2, [sp, #0]
 80057f0:	2000      	movs	r0, #0
 80057f2:	4938      	ldr	r1, [pc, #224]	; (80058d4 <__kernel_rem_pio2+0x384>)
 80057f4:	f000 fcca 	bl	800618c <scalbn>
 80057f8:	003c      	movs	r4, r7
 80057fa:	0005      	movs	r5, r0
 80057fc:	000e      	movs	r6, r1
 80057fe:	2c00      	cmp	r4, #0
 8005800:	db00      	blt.n	8005804 <__kernel_rem_pio2+0x2b4>
 8005802:	e0e3      	b.n	80059cc <__kernel_rem_pio2+0x47c>
 8005804:	2500      	movs	r5, #0
 8005806:	00fb      	lsls	r3, r7, #3
 8005808:	9308      	str	r3, [sp, #32]
 800580a:	00fa      	lsls	r2, r7, #3
 800580c:	ab78      	add	r3, sp, #480	; 0x1e0
 800580e:	189c      	adds	r4, r3, r2
 8005810:	1b7b      	subs	r3, r7, r5
 8005812:	d400      	bmi.n	8005816 <__kernel_rem_pio2+0x2c6>
 8005814:	e116      	b.n	8005a44 <__kernel_rem_pio2+0x4f4>
 8005816:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8005818:	2b03      	cmp	r3, #3
 800581a:	d900      	bls.n	800581e <__kernel_rem_pio2+0x2ce>
 800581c:	e15d      	b.n	8005ada <__kernel_rem_pio2+0x58a>
 800581e:	0018      	movs	r0, r3
 8005820:	f7fa fc72 	bl	8000108 <__gnu_thumb1_case_uhi>
 8005824:	01940163 	.word	0x01940163
 8005828:	01160194 	.word	0x01160194
 800582c:	2302      	movs	r3, #2
 800582e:	9304      	str	r3, [sp, #16]
 8005830:	e71d      	b.n	800566e <__kernel_rem_pio2+0x11e>
 8005832:	0091      	lsls	r1, r2, #2
 8005834:	ab14      	add	r3, sp, #80	; 0x50
 8005836:	58cb      	ldr	r3, [r1, r3]
 8005838:	2c00      	cmp	r4, #0
 800583a:	d109      	bne.n	8005850 <__kernel_rem_pio2+0x300>
 800583c:	2b00      	cmp	r3, #0
 800583e:	d004      	beq.n	800584a <__kernel_rem_pio2+0x2fa>
 8005840:	4664      	mov	r4, ip
 8005842:	1ae3      	subs	r3, r4, r3
 8005844:	ac14      	add	r4, sp, #80	; 0x50
 8005846:	510b      	str	r3, [r1, r4]
 8005848:	2301      	movs	r3, #1
 800584a:	3201      	adds	r2, #1
 800584c:	001c      	movs	r4, r3
 800584e:	e716      	b.n	800567e <__kernel_rem_pio2+0x12e>
 8005850:	4824      	ldr	r0, [pc, #144]	; (80058e4 <__kernel_rem_pio2+0x394>)
 8005852:	1ac3      	subs	r3, r0, r3
 8005854:	a814      	add	r0, sp, #80	; 0x50
 8005856:	500b      	str	r3, [r1, r0]
 8005858:	0023      	movs	r3, r4
 800585a:	e7f6      	b.n	800584a <__kernel_rem_pio2+0x2fa>
 800585c:	1e7b      	subs	r3, r7, #1
 800585e:	009b      	lsls	r3, r3, #2
 8005860:	aa14      	add	r2, sp, #80	; 0x50
 8005862:	589a      	ldr	r2, [r3, r2]
 8005864:	920c      	str	r2, [sp, #48]	; 0x30
 8005866:	0252      	lsls	r2, r2, #9
 8005868:	0a52      	lsrs	r2, r2, #9
 800586a:	a914      	add	r1, sp, #80	; 0x50
 800586c:	505a      	str	r2, [r3, r1]
 800586e:	e712      	b.n	8005696 <__kernel_rem_pio2+0x146>
 8005870:	1e7b      	subs	r3, r7, #1
 8005872:	009b      	lsls	r3, r3, #2
 8005874:	aa14      	add	r2, sp, #80	; 0x50
 8005876:	589a      	ldr	r2, [r3, r2]
 8005878:	920c      	str	r2, [sp, #48]	; 0x30
 800587a:	0292      	lsls	r2, r2, #10
 800587c:	0a92      	lsrs	r2, r2, #10
 800587e:	e7f4      	b.n	800586a <__kernel_rem_pio2+0x31a>
 8005880:	0098      	lsls	r0, r3, #2
 8005882:	ac14      	add	r4, sp, #80	; 0x50
 8005884:	5900      	ldr	r0, [r0, r4]
 8005886:	4302      	orrs	r2, r0
 8005888:	e7a1      	b.n	80057ce <__kernel_rem_pio2+0x27e>
 800588a:	3301      	adds	r3, #1
 800588c:	009a      	lsls	r2, r3, #2
 800588e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005890:	4252      	negs	r2, r2
 8005892:	588a      	ldr	r2, [r1, r2]
 8005894:	2a00      	cmp	r2, #0
 8005896:	d0f8      	beq.n	800588a <__kernel_rem_pio2+0x33a>
 8005898:	2400      	movs	r4, #0
 800589a:	1c7a      	adds	r2, r7, #1
 800589c:	9204      	str	r2, [sp, #16]
 800589e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80058a0:	18fb      	adds	r3, r7, r3
 80058a2:	18ba      	adds	r2, r7, r2
 80058a4:	00d2      	lsls	r2, r2, #3
 80058a6:	920c      	str	r2, [sp, #48]	; 0x30
 80058a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80058aa:	00fa      	lsls	r2, r7, #3
 80058ac:	920e      	str	r2, [sp, #56]	; 0x38
 80058ae:	aa28      	add	r2, sp, #160	; 0xa0
 80058b0:	1851      	adds	r1, r2, r1
 80058b2:	9110      	str	r1, [sp, #64]	; 0x40
 80058b4:	930a      	str	r3, [sp, #40]	; 0x28
 80058b6:	9213      	str	r2, [sp, #76]	; 0x4c
 80058b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80058ba:	9a04      	ldr	r2, [sp, #16]
 80058bc:	4293      	cmp	r3, r2
 80058be:	da13      	bge.n	80058e8 <__kernel_rem_pio2+0x398>
 80058c0:	001f      	movs	r7, r3
 80058c2:	e682      	b.n	80055ca <__kernel_rem_pio2+0x7a>
 80058c4:	2301      	movs	r3, #1
 80058c6:	e7e1      	b.n	800588c <__kernel_rem_pio2+0x33c>
 80058c8:	fffffd7c 	.word	0xfffffd7c
 80058cc:	080065a0 	.word	0x080065a0
 80058d0:	40200000 	.word	0x40200000
 80058d4:	3ff00000 	.word	0x3ff00000
 80058d8:	3e700000 	.word	0x3e700000
 80058dc:	41700000 	.word	0x41700000
 80058e0:	3fe00000 	.word	0x3fe00000
 80058e4:	00ffffff 	.word	0x00ffffff
 80058e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80058ea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80058ec:	18e5      	adds	r5, r4, r3
 80058ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80058f0:	2600      	movs	r6, #0
 80058f2:	195d      	adds	r5, r3, r5
 80058f4:	9b04      	ldr	r3, [sp, #16]
 80058f6:	2700      	movs	r7, #0
 80058f8:	009b      	lsls	r3, r3, #2
 80058fa:	58d0      	ldr	r0, [r2, r3]
 80058fc:	f7fd f8bc 	bl	8002a78 <__aeabi_i2d>
 8005900:	6028      	str	r0, [r5, #0]
 8005902:	6069      	str	r1, [r5, #4]
 8005904:	2500      	movs	r5, #0
 8005906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005908:	18e3      	adds	r3, r4, r3
 800590a:	9311      	str	r3, [sp, #68]	; 0x44
 800590c:	9b08      	ldr	r3, [sp, #32]
 800590e:	429d      	cmp	r5, r3
 8005910:	dd0a      	ble.n	8005928 <__kernel_rem_pio2+0x3d8>
 8005912:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005914:	aa78      	add	r2, sp, #480	; 0x1e0
 8005916:	18e3      	adds	r3, r4, r3
 8005918:	18d3      	adds	r3, r2, r3
 800591a:	609e      	str	r6, [r3, #8]
 800591c:	60df      	str	r7, [r3, #12]
 800591e:	9b04      	ldr	r3, [sp, #16]
 8005920:	3408      	adds	r4, #8
 8005922:	3301      	adds	r3, #1
 8005924:	9304      	str	r3, [sp, #16]
 8005926:	e7c7      	b.n	80058b8 <__kernel_rem_pio2+0x368>
 8005928:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800592a:	00eb      	lsls	r3, r5, #3
 800592c:	18d1      	adds	r1, r2, r3
 800592e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005930:	6808      	ldr	r0, [r1, #0]
 8005932:	6849      	ldr	r1, [r1, #4]
 8005934:	1ad3      	subs	r3, r2, r3
 8005936:	681a      	ldr	r2, [r3, #0]
 8005938:	685b      	ldr	r3, [r3, #4]
 800593a:	f7fc fa91 	bl	8001e60 <__aeabi_dmul>
 800593e:	0002      	movs	r2, r0
 8005940:	000b      	movs	r3, r1
 8005942:	0030      	movs	r0, r6
 8005944:	0039      	movs	r1, r7
 8005946:	f7fb fb65 	bl	8001014 <__aeabi_dadd>
 800594a:	3501      	adds	r5, #1
 800594c:	0006      	movs	r6, r0
 800594e:	000f      	movs	r7, r1
 8005950:	e7dc      	b.n	800590c <__kernel_rem_pio2+0x3bc>
 8005952:	9b00      	ldr	r3, [sp, #0]
 8005954:	3f01      	subs	r7, #1
 8005956:	3b18      	subs	r3, #24
 8005958:	9300      	str	r3, [sp, #0]
 800595a:	e742      	b.n	80057e2 <__kernel_rem_pio2+0x292>
 800595c:	9b00      	ldr	r3, [sp, #0]
 800595e:	0028      	movs	r0, r5
 8005960:	425a      	negs	r2, r3
 8005962:	0031      	movs	r1, r6
 8005964:	f000 fc12 	bl	800618c <scalbn>
 8005968:	2200      	movs	r2, #0
 800596a:	4baa      	ldr	r3, [pc, #680]	; (8005c14 <__kernel_rem_pio2+0x6c4>)
 800596c:	0004      	movs	r4, r0
 800596e:	000d      	movs	r5, r1
 8005970:	f7fa fd7e 	bl	8000470 <__aeabi_dcmpge>
 8005974:	2800      	cmp	r0, #0
 8005976:	d021      	beq.n	80059bc <__kernel_rem_pio2+0x46c>
 8005978:	2200      	movs	r2, #0
 800597a:	4ba7      	ldr	r3, [pc, #668]	; (8005c18 <__kernel_rem_pio2+0x6c8>)
 800597c:	0020      	movs	r0, r4
 800597e:	0029      	movs	r1, r5
 8005980:	f7fc fa6e 	bl	8001e60 <__aeabi_dmul>
 8005984:	f7fd f842 	bl	8002a0c <__aeabi_d2iz>
 8005988:	0006      	movs	r6, r0
 800598a:	f7fd f875 	bl	8002a78 <__aeabi_i2d>
 800598e:	2200      	movs	r2, #0
 8005990:	4ba0      	ldr	r3, [pc, #640]	; (8005c14 <__kernel_rem_pio2+0x6c4>)
 8005992:	f7fc fa65 	bl	8001e60 <__aeabi_dmul>
 8005996:	0002      	movs	r2, r0
 8005998:	000b      	movs	r3, r1
 800599a:	0020      	movs	r0, r4
 800599c:	0029      	movs	r1, r5
 800599e:	f7fc fcd1 	bl	8002344 <__aeabi_dsub>
 80059a2:	f7fd f833 	bl	8002a0c <__aeabi_d2iz>
 80059a6:	00ba      	lsls	r2, r7, #2
 80059a8:	ab14      	add	r3, sp, #80	; 0x50
 80059aa:	50d0      	str	r0, [r2, r3]
 80059ac:	9b00      	ldr	r3, [sp, #0]
 80059ae:	3701      	adds	r7, #1
 80059b0:	3318      	adds	r3, #24
 80059b2:	9300      	str	r3, [sp, #0]
 80059b4:	aa14      	add	r2, sp, #80	; 0x50
 80059b6:	00bb      	lsls	r3, r7, #2
 80059b8:	509e      	str	r6, [r3, r2]
 80059ba:	e718      	b.n	80057ee <__kernel_rem_pio2+0x29e>
 80059bc:	0020      	movs	r0, r4
 80059be:	0029      	movs	r1, r5
 80059c0:	f7fd f824 	bl	8002a0c <__aeabi_d2iz>
 80059c4:	00be      	lsls	r6, r7, #2
 80059c6:	ab14      	add	r3, sp, #80	; 0x50
 80059c8:	50f0      	str	r0, [r6, r3]
 80059ca:	e710      	b.n	80057ee <__kernel_rem_pio2+0x29e>
 80059cc:	00e3      	lsls	r3, r4, #3
 80059ce:	aa78      	add	r2, sp, #480	; 0x1e0
 80059d0:	18d3      	adds	r3, r2, r3
 80059d2:	9300      	str	r3, [sp, #0]
 80059d4:	aa14      	add	r2, sp, #80	; 0x50
 80059d6:	00a3      	lsls	r3, r4, #2
 80059d8:	5898      	ldr	r0, [r3, r2]
 80059da:	f7fd f84d 	bl	8002a78 <__aeabi_i2d>
 80059de:	002a      	movs	r2, r5
 80059e0:	0033      	movs	r3, r6
 80059e2:	f7fc fa3d 	bl	8001e60 <__aeabi_dmul>
 80059e6:	9b00      	ldr	r3, [sp, #0]
 80059e8:	2200      	movs	r2, #0
 80059ea:	6018      	str	r0, [r3, #0]
 80059ec:	6059      	str	r1, [r3, #4]
 80059ee:	0028      	movs	r0, r5
 80059f0:	0031      	movs	r1, r6
 80059f2:	4b89      	ldr	r3, [pc, #548]	; (8005c18 <__kernel_rem_pio2+0x6c8>)
 80059f4:	f7fc fa34 	bl	8001e60 <__aeabi_dmul>
 80059f8:	3c01      	subs	r4, #1
 80059fa:	0005      	movs	r5, r0
 80059fc:	000e      	movs	r6, r1
 80059fe:	e6fe      	b.n	80057fe <__kernel_rem_pio2+0x2ae>
 8005a00:	4a86      	ldr	r2, [pc, #536]	; (8005c1c <__kernel_rem_pio2+0x6cc>)
 8005a02:	00f3      	lsls	r3, r6, #3
 8005a04:	18d1      	adds	r1, r2, r3
 8005a06:	18e3      	adds	r3, r4, r3
 8005a08:	681a      	ldr	r2, [r3, #0]
 8005a0a:	685b      	ldr	r3, [r3, #4]
 8005a0c:	6808      	ldr	r0, [r1, #0]
 8005a0e:	6849      	ldr	r1, [r1, #4]
 8005a10:	f7fc fa26 	bl	8001e60 <__aeabi_dmul>
 8005a14:	0002      	movs	r2, r0
 8005a16:	000b      	movs	r3, r1
 8005a18:	9800      	ldr	r0, [sp, #0]
 8005a1a:	9901      	ldr	r1, [sp, #4]
 8005a1c:	f7fb fafa 	bl	8001014 <__aeabi_dadd>
 8005a20:	9000      	str	r0, [sp, #0]
 8005a22:	9101      	str	r1, [sp, #4]
 8005a24:	3601      	adds	r6, #1
 8005a26:	9b06      	ldr	r3, [sp, #24]
 8005a28:	429e      	cmp	r6, r3
 8005a2a:	dc01      	bgt.n	8005a30 <__kernel_rem_pio2+0x4e0>
 8005a2c:	42b5      	cmp	r5, r6
 8005a2e:	dae7      	bge.n	8005a00 <__kernel_rem_pio2+0x4b0>
 8005a30:	00eb      	lsls	r3, r5, #3
 8005a32:	aa50      	add	r2, sp, #320	; 0x140
 8005a34:	18d3      	adds	r3, r2, r3
 8005a36:	3501      	adds	r5, #1
 8005a38:	9900      	ldr	r1, [sp, #0]
 8005a3a:	9a01      	ldr	r2, [sp, #4]
 8005a3c:	3c08      	subs	r4, #8
 8005a3e:	6019      	str	r1, [r3, #0]
 8005a40:	605a      	str	r2, [r3, #4]
 8005a42:	e6e5      	b.n	8005810 <__kernel_rem_pio2+0x2c0>
 8005a44:	2200      	movs	r2, #0
 8005a46:	2300      	movs	r3, #0
 8005a48:	2600      	movs	r6, #0
 8005a4a:	9200      	str	r2, [sp, #0]
 8005a4c:	9301      	str	r3, [sp, #4]
 8005a4e:	e7ea      	b.n	8005a26 <__kernel_rem_pio2+0x4d6>
 8005a50:	aa50      	add	r2, sp, #320	; 0x140
 8005a52:	4694      	mov	ip, r2
 8005a54:	9b08      	ldr	r3, [sp, #32]
 8005a56:	003e      	movs	r6, r7
 8005a58:	4463      	add	r3, ip
 8005a5a:	001c      	movs	r4, r3
 8005a5c:	001d      	movs	r5, r3
 8005a5e:	3d08      	subs	r5, #8
 8005a60:	2e00      	cmp	r6, #0
 8005a62:	dd00      	ble.n	8005a66 <__kernel_rem_pio2+0x516>
 8005a64:	e07f      	b.n	8005b66 <__kernel_rem_pio2+0x616>
 8005a66:	9700      	str	r7, [sp, #0]
 8005a68:	9b00      	ldr	r3, [sp, #0]
 8005a6a:	3c08      	subs	r4, #8
 8005a6c:	2b01      	cmp	r3, #1
 8005a6e:	dd00      	ble.n	8005a72 <__kernel_rem_pio2+0x522>
 8005a70:	e099      	b.n	8005ba6 <__kernel_rem_pio2+0x656>
 8005a72:	2000      	movs	r0, #0
 8005a74:	0001      	movs	r1, r0
 8005a76:	2f01      	cmp	r7, #1
 8005a78:	dd00      	ble.n	8005a7c <__kernel_rem_pio2+0x52c>
 8005a7a:	e0b4      	b.n	8005be6 <__kernel_rem_pio2+0x696>
 8005a7c:	9b04      	ldr	r3, [sp, #16]
 8005a7e:	9f50      	ldr	r7, [sp, #320]	; 0x140
 8005a80:	9e51      	ldr	r6, [sp, #324]	; 0x144
 8005a82:	9d52      	ldr	r5, [sp, #328]	; 0x148
 8005a84:	9c53      	ldr	r4, [sp, #332]	; 0x14c
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d000      	beq.n	8005a8c <__kernel_rem_pio2+0x53c>
 8005a8a:	e0b5      	b.n	8005bf8 <__kernel_rem_pio2+0x6a8>
 8005a8c:	0033      	movs	r3, r6
 8005a8e:	003a      	movs	r2, r7
 8005a90:	9e03      	ldr	r6, [sp, #12]
 8005a92:	6032      	str	r2, [r6, #0]
 8005a94:	6073      	str	r3, [r6, #4]
 8005a96:	002a      	movs	r2, r5
 8005a98:	0023      	movs	r3, r4
 8005a9a:	60b2      	str	r2, [r6, #8]
 8005a9c:	60f3      	str	r3, [r6, #12]
 8005a9e:	0002      	movs	r2, r0
 8005aa0:	000b      	movs	r3, r1
 8005aa2:	6132      	str	r2, [r6, #16]
 8005aa4:	6173      	str	r3, [r6, #20]
 8005aa6:	e018      	b.n	8005ada <__kernel_rem_pio2+0x58a>
 8005aa8:	00fb      	lsls	r3, r7, #3
 8005aaa:	aa50      	add	r2, sp, #320	; 0x140
 8005aac:	18d3      	adds	r3, r2, r3
 8005aae:	0028      	movs	r0, r5
 8005ab0:	681a      	ldr	r2, [r3, #0]
 8005ab2:	685b      	ldr	r3, [r3, #4]
 8005ab4:	0021      	movs	r1, r4
 8005ab6:	f7fb faad 	bl	8001014 <__aeabi_dadd>
 8005aba:	0005      	movs	r5, r0
 8005abc:	000c      	movs	r4, r1
 8005abe:	3f01      	subs	r7, #1
 8005ac0:	2f00      	cmp	r7, #0
 8005ac2:	daf1      	bge.n	8005aa8 <__kernel_rem_pio2+0x558>
 8005ac4:	9b04      	ldr	r3, [sp, #16]
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d002      	beq.n	8005ad0 <__kernel_rem_pio2+0x580>
 8005aca:	2380      	movs	r3, #128	; 0x80
 8005acc:	061b      	lsls	r3, r3, #24
 8005ace:	18e4      	adds	r4, r4, r3
 8005ad0:	002a      	movs	r2, r5
 8005ad2:	0023      	movs	r3, r4
 8005ad4:	9903      	ldr	r1, [sp, #12]
 8005ad6:	600a      	str	r2, [r1, #0]
 8005ad8:	604b      	str	r3, [r1, #4]
 8005ada:	2007      	movs	r0, #7
 8005adc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ade:	4003      	ands	r3, r0
 8005ae0:	0018      	movs	r0, r3
 8005ae2:	23a1      	movs	r3, #161	; 0xa1
 8005ae4:	009b      	lsls	r3, r3, #2
 8005ae6:	449d      	add	sp, r3
 8005ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005aea:	2500      	movs	r5, #0
 8005aec:	002c      	movs	r4, r5
 8005aee:	e7e7      	b.n	8005ac0 <__kernel_rem_pio2+0x570>
 8005af0:	00e3      	lsls	r3, r4, #3
 8005af2:	aa50      	add	r2, sp, #320	; 0x140
 8005af4:	18d3      	adds	r3, r2, r3
 8005af6:	0030      	movs	r0, r6
 8005af8:	681a      	ldr	r2, [r3, #0]
 8005afa:	685b      	ldr	r3, [r3, #4]
 8005afc:	0029      	movs	r1, r5
 8005afe:	f7fb fa89 	bl	8001014 <__aeabi_dadd>
 8005b02:	0006      	movs	r6, r0
 8005b04:	000d      	movs	r5, r1
 8005b06:	3c01      	subs	r4, #1
 8005b08:	2c00      	cmp	r4, #0
 8005b0a:	daf1      	bge.n	8005af0 <__kernel_rem_pio2+0x5a0>
 8005b0c:	9b04      	ldr	r3, [sp, #16]
 8005b0e:	0029      	movs	r1, r5
 8005b10:	2b00      	cmp	r3, #0
 8005b12:	d002      	beq.n	8005b1a <__kernel_rem_pio2+0x5ca>
 8005b14:	2380      	movs	r3, #128	; 0x80
 8005b16:	061b      	lsls	r3, r3, #24
 8005b18:	18e9      	adds	r1, r5, r3
 8005b1a:	000b      	movs	r3, r1
 8005b1c:	0032      	movs	r2, r6
 8005b1e:	9903      	ldr	r1, [sp, #12]
 8005b20:	2401      	movs	r4, #1
 8005b22:	600a      	str	r2, [r1, #0]
 8005b24:	604b      	str	r3, [r1, #4]
 8005b26:	9850      	ldr	r0, [sp, #320]	; 0x140
 8005b28:	9951      	ldr	r1, [sp, #324]	; 0x144
 8005b2a:	002b      	movs	r3, r5
 8005b2c:	f7fc fc0a 	bl	8002344 <__aeabi_dsub>
 8005b30:	42a7      	cmp	r7, r4
 8005b32:	da0f      	bge.n	8005b54 <__kernel_rem_pio2+0x604>
 8005b34:	9b04      	ldr	r3, [sp, #16]
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d002      	beq.n	8005b40 <__kernel_rem_pio2+0x5f0>
 8005b3a:	2380      	movs	r3, #128	; 0x80
 8005b3c:	061b      	lsls	r3, r3, #24
 8005b3e:	18c9      	adds	r1, r1, r3
 8005b40:	000b      	movs	r3, r1
 8005b42:	0002      	movs	r2, r0
 8005b44:	9903      	ldr	r1, [sp, #12]
 8005b46:	608a      	str	r2, [r1, #8]
 8005b48:	60cb      	str	r3, [r1, #12]
 8005b4a:	e7c6      	b.n	8005ada <__kernel_rem_pio2+0x58a>
 8005b4c:	2600      	movs	r6, #0
 8005b4e:	003c      	movs	r4, r7
 8005b50:	0035      	movs	r5, r6
 8005b52:	e7d9      	b.n	8005b08 <__kernel_rem_pio2+0x5b8>
 8005b54:	00e3      	lsls	r3, r4, #3
 8005b56:	aa50      	add	r2, sp, #320	; 0x140
 8005b58:	18d3      	adds	r3, r2, r3
 8005b5a:	681a      	ldr	r2, [r3, #0]
 8005b5c:	685b      	ldr	r3, [r3, #4]
 8005b5e:	f7fb fa59 	bl	8001014 <__aeabi_dadd>
 8005b62:	3401      	adds	r4, #1
 8005b64:	e7e4      	b.n	8005b30 <__kernel_rem_pio2+0x5e0>
 8005b66:	682a      	ldr	r2, [r5, #0]
 8005b68:	686b      	ldr	r3, [r5, #4]
 8005b6a:	9200      	str	r2, [sp, #0]
 8005b6c:	9301      	str	r3, [sp, #4]
 8005b6e:	9800      	ldr	r0, [sp, #0]
 8005b70:	9901      	ldr	r1, [sp, #4]
 8005b72:	68aa      	ldr	r2, [r5, #8]
 8005b74:	68eb      	ldr	r3, [r5, #12]
 8005b76:	9206      	str	r2, [sp, #24]
 8005b78:	9307      	str	r3, [sp, #28]
 8005b7a:	f7fb fa4b 	bl	8001014 <__aeabi_dadd>
 8005b7e:	0002      	movs	r2, r0
 8005b80:	000b      	movs	r3, r1
 8005b82:	9008      	str	r0, [sp, #32]
 8005b84:	9109      	str	r1, [sp, #36]	; 0x24
 8005b86:	9800      	ldr	r0, [sp, #0]
 8005b88:	9901      	ldr	r1, [sp, #4]
 8005b8a:	f7fc fbdb 	bl	8002344 <__aeabi_dsub>
 8005b8e:	9a06      	ldr	r2, [sp, #24]
 8005b90:	9b07      	ldr	r3, [sp, #28]
 8005b92:	f7fb fa3f 	bl	8001014 <__aeabi_dadd>
 8005b96:	9a08      	ldr	r2, [sp, #32]
 8005b98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b9a:	3e01      	subs	r6, #1
 8005b9c:	60a8      	str	r0, [r5, #8]
 8005b9e:	60e9      	str	r1, [r5, #12]
 8005ba0:	602a      	str	r2, [r5, #0]
 8005ba2:	606b      	str	r3, [r5, #4]
 8005ba4:	e75b      	b.n	8005a5e <__kernel_rem_pio2+0x50e>
 8005ba6:	9b00      	ldr	r3, [sp, #0]
 8005ba8:	3b01      	subs	r3, #1
 8005baa:	9300      	str	r3, [sp, #0]
 8005bac:	6822      	ldr	r2, [r4, #0]
 8005bae:	6863      	ldr	r3, [r4, #4]
 8005bb0:	9206      	str	r2, [sp, #24]
 8005bb2:	9307      	str	r3, [sp, #28]
 8005bb4:	9806      	ldr	r0, [sp, #24]
 8005bb6:	9907      	ldr	r1, [sp, #28]
 8005bb8:	68a2      	ldr	r2, [r4, #8]
 8005bba:	68e3      	ldr	r3, [r4, #12]
 8005bbc:	9208      	str	r2, [sp, #32]
 8005bbe:	9309      	str	r3, [sp, #36]	; 0x24
 8005bc0:	f7fb fa28 	bl	8001014 <__aeabi_dadd>
 8005bc4:	0002      	movs	r2, r0
 8005bc6:	000b      	movs	r3, r1
 8005bc8:	0005      	movs	r5, r0
 8005bca:	000e      	movs	r6, r1
 8005bcc:	9806      	ldr	r0, [sp, #24]
 8005bce:	9907      	ldr	r1, [sp, #28]
 8005bd0:	f7fc fbb8 	bl	8002344 <__aeabi_dsub>
 8005bd4:	9a08      	ldr	r2, [sp, #32]
 8005bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005bd8:	f7fb fa1c 	bl	8001014 <__aeabi_dadd>
 8005bdc:	6025      	str	r5, [r4, #0]
 8005bde:	6066      	str	r6, [r4, #4]
 8005be0:	60a0      	str	r0, [r4, #8]
 8005be2:	60e1      	str	r1, [r4, #12]
 8005be4:	e740      	b.n	8005a68 <__kernel_rem_pio2+0x518>
 8005be6:	00fb      	lsls	r3, r7, #3
 8005be8:	aa50      	add	r2, sp, #320	; 0x140
 8005bea:	18d3      	adds	r3, r2, r3
 8005bec:	681a      	ldr	r2, [r3, #0]
 8005bee:	685b      	ldr	r3, [r3, #4]
 8005bf0:	f7fb fa10 	bl	8001014 <__aeabi_dadd>
 8005bf4:	3f01      	subs	r7, #1
 8005bf6:	e73e      	b.n	8005a76 <__kernel_rem_pio2+0x526>
 8005bf8:	9b03      	ldr	r3, [sp, #12]
 8005bfa:	9a03      	ldr	r2, [sp, #12]
 8005bfc:	601f      	str	r7, [r3, #0]
 8005bfe:	2380      	movs	r3, #128	; 0x80
 8005c00:	061b      	lsls	r3, r3, #24
 8005c02:	18f6      	adds	r6, r6, r3
 8005c04:	18e4      	adds	r4, r4, r3
 8005c06:	18c9      	adds	r1, r1, r3
 8005c08:	6056      	str	r6, [r2, #4]
 8005c0a:	6095      	str	r5, [r2, #8]
 8005c0c:	60d4      	str	r4, [r2, #12]
 8005c0e:	6110      	str	r0, [r2, #16]
 8005c10:	6151      	str	r1, [r2, #20]
 8005c12:	e762      	b.n	8005ada <__kernel_rem_pio2+0x58a>
 8005c14:	41700000 	.word	0x41700000
 8005c18:	3e700000 	.word	0x3e700000
 8005c1c:	08006560 	.word	0x08006560

08005c20 <__kernel_sin>:
 8005c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c22:	b089      	sub	sp, #36	; 0x24
 8005c24:	9202      	str	r2, [sp, #8]
 8005c26:	9303      	str	r3, [sp, #12]
 8005c28:	4a46      	ldr	r2, [pc, #280]	; (8005d44 <__kernel_sin+0x124>)
 8005c2a:	004b      	lsls	r3, r1, #1
 8005c2c:	0005      	movs	r5, r0
 8005c2e:	000c      	movs	r4, r1
 8005c30:	085b      	lsrs	r3, r3, #1
 8005c32:	4293      	cmp	r3, r2
 8005c34:	dc03      	bgt.n	8005c3e <__kernel_sin+0x1e>
 8005c36:	f7fc fee9 	bl	8002a0c <__aeabi_d2iz>
 8005c3a:	2800      	cmp	r0, #0
 8005c3c:	d04c      	beq.n	8005cd8 <__kernel_sin+0xb8>
 8005c3e:	002a      	movs	r2, r5
 8005c40:	0023      	movs	r3, r4
 8005c42:	0028      	movs	r0, r5
 8005c44:	0021      	movs	r1, r4
 8005c46:	f7fc f90b 	bl	8001e60 <__aeabi_dmul>
 8005c4a:	0006      	movs	r6, r0
 8005c4c:	000f      	movs	r7, r1
 8005c4e:	0002      	movs	r2, r0
 8005c50:	000b      	movs	r3, r1
 8005c52:	0028      	movs	r0, r5
 8005c54:	0021      	movs	r1, r4
 8005c56:	f7fc f903 	bl	8001e60 <__aeabi_dmul>
 8005c5a:	4a3b      	ldr	r2, [pc, #236]	; (8005d48 <__kernel_sin+0x128>)
 8005c5c:	9000      	str	r0, [sp, #0]
 8005c5e:	9101      	str	r1, [sp, #4]
 8005c60:	4b3a      	ldr	r3, [pc, #232]	; (8005d4c <__kernel_sin+0x12c>)
 8005c62:	0030      	movs	r0, r6
 8005c64:	0039      	movs	r1, r7
 8005c66:	f7fc f8fb 	bl	8001e60 <__aeabi_dmul>
 8005c6a:	4a39      	ldr	r2, [pc, #228]	; (8005d50 <__kernel_sin+0x130>)
 8005c6c:	4b39      	ldr	r3, [pc, #228]	; (8005d54 <__kernel_sin+0x134>)
 8005c6e:	f7fc fb69 	bl	8002344 <__aeabi_dsub>
 8005c72:	0032      	movs	r2, r6
 8005c74:	003b      	movs	r3, r7
 8005c76:	f7fc f8f3 	bl	8001e60 <__aeabi_dmul>
 8005c7a:	4a37      	ldr	r2, [pc, #220]	; (8005d58 <__kernel_sin+0x138>)
 8005c7c:	4b37      	ldr	r3, [pc, #220]	; (8005d5c <__kernel_sin+0x13c>)
 8005c7e:	f7fb f9c9 	bl	8001014 <__aeabi_dadd>
 8005c82:	0032      	movs	r2, r6
 8005c84:	003b      	movs	r3, r7
 8005c86:	f7fc f8eb 	bl	8001e60 <__aeabi_dmul>
 8005c8a:	4a35      	ldr	r2, [pc, #212]	; (8005d60 <__kernel_sin+0x140>)
 8005c8c:	4b35      	ldr	r3, [pc, #212]	; (8005d64 <__kernel_sin+0x144>)
 8005c8e:	f7fc fb59 	bl	8002344 <__aeabi_dsub>
 8005c92:	0032      	movs	r2, r6
 8005c94:	003b      	movs	r3, r7
 8005c96:	f7fc f8e3 	bl	8001e60 <__aeabi_dmul>
 8005c9a:	4b33      	ldr	r3, [pc, #204]	; (8005d68 <__kernel_sin+0x148>)
 8005c9c:	4a33      	ldr	r2, [pc, #204]	; (8005d6c <__kernel_sin+0x14c>)
 8005c9e:	f7fb f9b9 	bl	8001014 <__aeabi_dadd>
 8005ca2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ca4:	9004      	str	r0, [sp, #16]
 8005ca6:	9105      	str	r1, [sp, #20]
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d119      	bne.n	8005ce0 <__kernel_sin+0xc0>
 8005cac:	0002      	movs	r2, r0
 8005cae:	000b      	movs	r3, r1
 8005cb0:	0030      	movs	r0, r6
 8005cb2:	0039      	movs	r1, r7
 8005cb4:	f7fc f8d4 	bl	8001e60 <__aeabi_dmul>
 8005cb8:	4a2d      	ldr	r2, [pc, #180]	; (8005d70 <__kernel_sin+0x150>)
 8005cba:	4b2e      	ldr	r3, [pc, #184]	; (8005d74 <__kernel_sin+0x154>)
 8005cbc:	f7fc fb42 	bl	8002344 <__aeabi_dsub>
 8005cc0:	9a00      	ldr	r2, [sp, #0]
 8005cc2:	9b01      	ldr	r3, [sp, #4]
 8005cc4:	f7fc f8cc 	bl	8001e60 <__aeabi_dmul>
 8005cc8:	0002      	movs	r2, r0
 8005cca:	000b      	movs	r3, r1
 8005ccc:	0028      	movs	r0, r5
 8005cce:	0021      	movs	r1, r4
 8005cd0:	f7fb f9a0 	bl	8001014 <__aeabi_dadd>
 8005cd4:	0005      	movs	r5, r0
 8005cd6:	000c      	movs	r4, r1
 8005cd8:	0028      	movs	r0, r5
 8005cda:	0021      	movs	r1, r4
 8005cdc:	b009      	add	sp, #36	; 0x24
 8005cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ce0:	2200      	movs	r2, #0
 8005ce2:	9802      	ldr	r0, [sp, #8]
 8005ce4:	9903      	ldr	r1, [sp, #12]
 8005ce6:	4b24      	ldr	r3, [pc, #144]	; (8005d78 <__kernel_sin+0x158>)
 8005ce8:	f7fc f8ba 	bl	8001e60 <__aeabi_dmul>
 8005cec:	9a04      	ldr	r2, [sp, #16]
 8005cee:	9b05      	ldr	r3, [sp, #20]
 8005cf0:	9006      	str	r0, [sp, #24]
 8005cf2:	9107      	str	r1, [sp, #28]
 8005cf4:	9800      	ldr	r0, [sp, #0]
 8005cf6:	9901      	ldr	r1, [sp, #4]
 8005cf8:	f7fc f8b2 	bl	8001e60 <__aeabi_dmul>
 8005cfc:	0002      	movs	r2, r0
 8005cfe:	000b      	movs	r3, r1
 8005d00:	9806      	ldr	r0, [sp, #24]
 8005d02:	9907      	ldr	r1, [sp, #28]
 8005d04:	f7fc fb1e 	bl	8002344 <__aeabi_dsub>
 8005d08:	0032      	movs	r2, r6
 8005d0a:	003b      	movs	r3, r7
 8005d0c:	f7fc f8a8 	bl	8001e60 <__aeabi_dmul>
 8005d10:	9a02      	ldr	r2, [sp, #8]
 8005d12:	9b03      	ldr	r3, [sp, #12]
 8005d14:	f7fc fb16 	bl	8002344 <__aeabi_dsub>
 8005d18:	4a15      	ldr	r2, [pc, #84]	; (8005d70 <__kernel_sin+0x150>)
 8005d1a:	0006      	movs	r6, r0
 8005d1c:	000f      	movs	r7, r1
 8005d1e:	9800      	ldr	r0, [sp, #0]
 8005d20:	9901      	ldr	r1, [sp, #4]
 8005d22:	4b14      	ldr	r3, [pc, #80]	; (8005d74 <__kernel_sin+0x154>)
 8005d24:	f7fc f89c 	bl	8001e60 <__aeabi_dmul>
 8005d28:	0002      	movs	r2, r0
 8005d2a:	000b      	movs	r3, r1
 8005d2c:	0030      	movs	r0, r6
 8005d2e:	0039      	movs	r1, r7
 8005d30:	f7fb f970 	bl	8001014 <__aeabi_dadd>
 8005d34:	0002      	movs	r2, r0
 8005d36:	000b      	movs	r3, r1
 8005d38:	0028      	movs	r0, r5
 8005d3a:	0021      	movs	r1, r4
 8005d3c:	f7fc fb02 	bl	8002344 <__aeabi_dsub>
 8005d40:	e7c8      	b.n	8005cd4 <__kernel_sin+0xb4>
 8005d42:	46c0      	nop			; (mov r8, r8)
 8005d44:	3e3fffff 	.word	0x3e3fffff
 8005d48:	5acfd57c 	.word	0x5acfd57c
 8005d4c:	3de5d93a 	.word	0x3de5d93a
 8005d50:	8a2b9ceb 	.word	0x8a2b9ceb
 8005d54:	3e5ae5e6 	.word	0x3e5ae5e6
 8005d58:	57b1fe7d 	.word	0x57b1fe7d
 8005d5c:	3ec71de3 	.word	0x3ec71de3
 8005d60:	19c161d5 	.word	0x19c161d5
 8005d64:	3f2a01a0 	.word	0x3f2a01a0
 8005d68:	3f811111 	.word	0x3f811111
 8005d6c:	1110f8a6 	.word	0x1110f8a6
 8005d70:	55555549 	.word	0x55555549
 8005d74:	3fc55555 	.word	0x3fc55555
 8005d78:	3fe00000 	.word	0x3fe00000

08005d7c <atan>:
 8005d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d7e:	4b98      	ldr	r3, [pc, #608]	; (8005fe0 <atan+0x264>)
 8005d80:	b085      	sub	sp, #20
 8005d82:	004e      	lsls	r6, r1, #1
 8005d84:	0004      	movs	r4, r0
 8005d86:	000d      	movs	r5, r1
 8005d88:	9103      	str	r1, [sp, #12]
 8005d8a:	0876      	lsrs	r6, r6, #1
 8005d8c:	429e      	cmp	r6, r3
 8005d8e:	dd18      	ble.n	8005dc2 <atan+0x46>
 8005d90:	4b94      	ldr	r3, [pc, #592]	; (8005fe4 <atan+0x268>)
 8005d92:	429e      	cmp	r6, r3
 8005d94:	dc02      	bgt.n	8005d9c <atan+0x20>
 8005d96:	d10a      	bne.n	8005dae <atan+0x32>
 8005d98:	2800      	cmp	r0, #0
 8005d9a:	d008      	beq.n	8005dae <atan+0x32>
 8005d9c:	0022      	movs	r2, r4
 8005d9e:	002b      	movs	r3, r5
 8005da0:	0020      	movs	r0, r4
 8005da2:	0029      	movs	r1, r5
 8005da4:	f7fb f936 	bl	8001014 <__aeabi_dadd>
 8005da8:	0004      	movs	r4, r0
 8005daa:	000d      	movs	r5, r1
 8005dac:	e005      	b.n	8005dba <atan+0x3e>
 8005dae:	9b03      	ldr	r3, [sp, #12]
 8005db0:	4c8d      	ldr	r4, [pc, #564]	; (8005fe8 <atan+0x26c>)
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	dc00      	bgt.n	8005db8 <atan+0x3c>
 8005db6:	e110      	b.n	8005fda <atan+0x25e>
 8005db8:	4d8c      	ldr	r5, [pc, #560]	; (8005fec <atan+0x270>)
 8005dba:	0020      	movs	r0, r4
 8005dbc:	0029      	movs	r1, r5
 8005dbe:	b005      	add	sp, #20
 8005dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005dc2:	4b8b      	ldr	r3, [pc, #556]	; (8005ff0 <atan+0x274>)
 8005dc4:	429e      	cmp	r6, r3
 8005dc6:	dc0f      	bgt.n	8005de8 <atan+0x6c>
 8005dc8:	4b8a      	ldr	r3, [pc, #552]	; (8005ff4 <atan+0x278>)
 8005dca:	429e      	cmp	r6, r3
 8005dcc:	dc09      	bgt.n	8005de2 <atan+0x66>
 8005dce:	4a8a      	ldr	r2, [pc, #552]	; (8005ff8 <atan+0x27c>)
 8005dd0:	4b8a      	ldr	r3, [pc, #552]	; (8005ffc <atan+0x280>)
 8005dd2:	f7fb f91f 	bl	8001014 <__aeabi_dadd>
 8005dd6:	2200      	movs	r2, #0
 8005dd8:	4b89      	ldr	r3, [pc, #548]	; (8006000 <atan+0x284>)
 8005dda:	f7fa fb3f 	bl	800045c <__aeabi_dcmpgt>
 8005dde:	2800      	cmp	r0, #0
 8005de0:	d1eb      	bne.n	8005dba <atan+0x3e>
 8005de2:	2301      	movs	r3, #1
 8005de4:	425b      	negs	r3, r3
 8005de6:	e025      	b.n	8005e34 <atan+0xb8>
 8005de8:	f000 f948 	bl	800607c <fabs>
 8005dec:	4b85      	ldr	r3, [pc, #532]	; (8006004 <atan+0x288>)
 8005dee:	0004      	movs	r4, r0
 8005df0:	000d      	movs	r5, r1
 8005df2:	429e      	cmp	r6, r3
 8005df4:	dd00      	ble.n	8005df8 <atan+0x7c>
 8005df6:	e0aa      	b.n	8005f4e <atan+0x1d2>
 8005df8:	4b83      	ldr	r3, [pc, #524]	; (8006008 <atan+0x28c>)
 8005dfa:	429e      	cmp	r6, r3
 8005dfc:	dd00      	ble.n	8005e00 <atan+0x84>
 8005dfe:	e090      	b.n	8005f22 <atan+0x1a6>
 8005e00:	0002      	movs	r2, r0
 8005e02:	000b      	movs	r3, r1
 8005e04:	f7fb f906 	bl	8001014 <__aeabi_dadd>
 8005e08:	2200      	movs	r2, #0
 8005e0a:	4b7d      	ldr	r3, [pc, #500]	; (8006000 <atan+0x284>)
 8005e0c:	f7fc fa9a 	bl	8002344 <__aeabi_dsub>
 8005e10:	2380      	movs	r3, #128	; 0x80
 8005e12:	0006      	movs	r6, r0
 8005e14:	000f      	movs	r7, r1
 8005e16:	2200      	movs	r2, #0
 8005e18:	05db      	lsls	r3, r3, #23
 8005e1a:	0020      	movs	r0, r4
 8005e1c:	0029      	movs	r1, r5
 8005e1e:	f7fb f8f9 	bl	8001014 <__aeabi_dadd>
 8005e22:	000b      	movs	r3, r1
 8005e24:	0002      	movs	r2, r0
 8005e26:	0039      	movs	r1, r7
 8005e28:	0030      	movs	r0, r6
 8005e2a:	f7fb fc0f 	bl	800164c <__aeabi_ddiv>
 8005e2e:	2300      	movs	r3, #0
 8005e30:	0004      	movs	r4, r0
 8005e32:	000d      	movs	r5, r1
 8005e34:	9302      	str	r3, [sp, #8]
 8005e36:	0022      	movs	r2, r4
 8005e38:	002b      	movs	r3, r5
 8005e3a:	0020      	movs	r0, r4
 8005e3c:	0029      	movs	r1, r5
 8005e3e:	f7fc f80f 	bl	8001e60 <__aeabi_dmul>
 8005e42:	0002      	movs	r2, r0
 8005e44:	000b      	movs	r3, r1
 8005e46:	9000      	str	r0, [sp, #0]
 8005e48:	9101      	str	r1, [sp, #4]
 8005e4a:	f7fc f809 	bl	8001e60 <__aeabi_dmul>
 8005e4e:	0006      	movs	r6, r0
 8005e50:	000f      	movs	r7, r1
 8005e52:	4a6e      	ldr	r2, [pc, #440]	; (800600c <atan+0x290>)
 8005e54:	4b6e      	ldr	r3, [pc, #440]	; (8006010 <atan+0x294>)
 8005e56:	f7fc f803 	bl	8001e60 <__aeabi_dmul>
 8005e5a:	4a6e      	ldr	r2, [pc, #440]	; (8006014 <atan+0x298>)
 8005e5c:	4b6e      	ldr	r3, [pc, #440]	; (8006018 <atan+0x29c>)
 8005e5e:	f7fb f8d9 	bl	8001014 <__aeabi_dadd>
 8005e62:	0032      	movs	r2, r6
 8005e64:	003b      	movs	r3, r7
 8005e66:	f7fb fffb 	bl	8001e60 <__aeabi_dmul>
 8005e6a:	4a6c      	ldr	r2, [pc, #432]	; (800601c <atan+0x2a0>)
 8005e6c:	4b6c      	ldr	r3, [pc, #432]	; (8006020 <atan+0x2a4>)
 8005e6e:	f7fb f8d1 	bl	8001014 <__aeabi_dadd>
 8005e72:	0032      	movs	r2, r6
 8005e74:	003b      	movs	r3, r7
 8005e76:	f7fb fff3 	bl	8001e60 <__aeabi_dmul>
 8005e7a:	4a6a      	ldr	r2, [pc, #424]	; (8006024 <atan+0x2a8>)
 8005e7c:	4b6a      	ldr	r3, [pc, #424]	; (8006028 <atan+0x2ac>)
 8005e7e:	f7fb f8c9 	bl	8001014 <__aeabi_dadd>
 8005e82:	0032      	movs	r2, r6
 8005e84:	003b      	movs	r3, r7
 8005e86:	f7fb ffeb 	bl	8001e60 <__aeabi_dmul>
 8005e8a:	4a68      	ldr	r2, [pc, #416]	; (800602c <atan+0x2b0>)
 8005e8c:	4b68      	ldr	r3, [pc, #416]	; (8006030 <atan+0x2b4>)
 8005e8e:	f7fb f8c1 	bl	8001014 <__aeabi_dadd>
 8005e92:	0032      	movs	r2, r6
 8005e94:	003b      	movs	r3, r7
 8005e96:	f7fb ffe3 	bl	8001e60 <__aeabi_dmul>
 8005e9a:	4a66      	ldr	r2, [pc, #408]	; (8006034 <atan+0x2b8>)
 8005e9c:	4b66      	ldr	r3, [pc, #408]	; (8006038 <atan+0x2bc>)
 8005e9e:	f7fb f8b9 	bl	8001014 <__aeabi_dadd>
 8005ea2:	9a00      	ldr	r2, [sp, #0]
 8005ea4:	9b01      	ldr	r3, [sp, #4]
 8005ea6:	f7fb ffdb 	bl	8001e60 <__aeabi_dmul>
 8005eaa:	4a64      	ldr	r2, [pc, #400]	; (800603c <atan+0x2c0>)
 8005eac:	9000      	str	r0, [sp, #0]
 8005eae:	9101      	str	r1, [sp, #4]
 8005eb0:	4b63      	ldr	r3, [pc, #396]	; (8006040 <atan+0x2c4>)
 8005eb2:	0030      	movs	r0, r6
 8005eb4:	0039      	movs	r1, r7
 8005eb6:	f7fb ffd3 	bl	8001e60 <__aeabi_dmul>
 8005eba:	4a62      	ldr	r2, [pc, #392]	; (8006044 <atan+0x2c8>)
 8005ebc:	4b62      	ldr	r3, [pc, #392]	; (8006048 <atan+0x2cc>)
 8005ebe:	f7fc fa41 	bl	8002344 <__aeabi_dsub>
 8005ec2:	0032      	movs	r2, r6
 8005ec4:	003b      	movs	r3, r7
 8005ec6:	f7fb ffcb 	bl	8001e60 <__aeabi_dmul>
 8005eca:	4a60      	ldr	r2, [pc, #384]	; (800604c <atan+0x2d0>)
 8005ecc:	4b60      	ldr	r3, [pc, #384]	; (8006050 <atan+0x2d4>)
 8005ece:	f7fc fa39 	bl	8002344 <__aeabi_dsub>
 8005ed2:	0032      	movs	r2, r6
 8005ed4:	003b      	movs	r3, r7
 8005ed6:	f7fb ffc3 	bl	8001e60 <__aeabi_dmul>
 8005eda:	4a5e      	ldr	r2, [pc, #376]	; (8006054 <atan+0x2d8>)
 8005edc:	4b5e      	ldr	r3, [pc, #376]	; (8006058 <atan+0x2dc>)
 8005ede:	f7fc fa31 	bl	8002344 <__aeabi_dsub>
 8005ee2:	0032      	movs	r2, r6
 8005ee4:	003b      	movs	r3, r7
 8005ee6:	f7fb ffbb 	bl	8001e60 <__aeabi_dmul>
 8005eea:	4a5c      	ldr	r2, [pc, #368]	; (800605c <atan+0x2e0>)
 8005eec:	4b5c      	ldr	r3, [pc, #368]	; (8006060 <atan+0x2e4>)
 8005eee:	f7fc fa29 	bl	8002344 <__aeabi_dsub>
 8005ef2:	0032      	movs	r2, r6
 8005ef4:	003b      	movs	r3, r7
 8005ef6:	f7fb ffb3 	bl	8001e60 <__aeabi_dmul>
 8005efa:	0002      	movs	r2, r0
 8005efc:	000b      	movs	r3, r1
 8005efe:	9800      	ldr	r0, [sp, #0]
 8005f00:	9901      	ldr	r1, [sp, #4]
 8005f02:	f7fb f887 	bl	8001014 <__aeabi_dadd>
 8005f06:	002b      	movs	r3, r5
 8005f08:	0022      	movs	r2, r4
 8005f0a:	f7fb ffa9 	bl	8001e60 <__aeabi_dmul>
 8005f0e:	9b02      	ldr	r3, [sp, #8]
 8005f10:	3301      	adds	r3, #1
 8005f12:	d143      	bne.n	8005f9c <atan+0x220>
 8005f14:	0002      	movs	r2, r0
 8005f16:	000b      	movs	r3, r1
 8005f18:	0020      	movs	r0, r4
 8005f1a:	0029      	movs	r1, r5
 8005f1c:	f7fc fa12 	bl	8002344 <__aeabi_dsub>
 8005f20:	e742      	b.n	8005da8 <atan+0x2c>
 8005f22:	2200      	movs	r2, #0
 8005f24:	4b36      	ldr	r3, [pc, #216]	; (8006000 <atan+0x284>)
 8005f26:	f7fc fa0d 	bl	8002344 <__aeabi_dsub>
 8005f2a:	2200      	movs	r2, #0
 8005f2c:	0006      	movs	r6, r0
 8005f2e:	000f      	movs	r7, r1
 8005f30:	4b33      	ldr	r3, [pc, #204]	; (8006000 <atan+0x284>)
 8005f32:	0020      	movs	r0, r4
 8005f34:	0029      	movs	r1, r5
 8005f36:	f7fb f86d 	bl	8001014 <__aeabi_dadd>
 8005f3a:	000b      	movs	r3, r1
 8005f3c:	0002      	movs	r2, r0
 8005f3e:	0039      	movs	r1, r7
 8005f40:	0030      	movs	r0, r6
 8005f42:	f7fb fb83 	bl	800164c <__aeabi_ddiv>
 8005f46:	2301      	movs	r3, #1
 8005f48:	0004      	movs	r4, r0
 8005f4a:	000d      	movs	r5, r1
 8005f4c:	e772      	b.n	8005e34 <atan+0xb8>
 8005f4e:	4b45      	ldr	r3, [pc, #276]	; (8006064 <atan+0x2e8>)
 8005f50:	429e      	cmp	r6, r3
 8005f52:	dc19      	bgt.n	8005f88 <atan+0x20c>
 8005f54:	2200      	movs	r2, #0
 8005f56:	4b44      	ldr	r3, [pc, #272]	; (8006068 <atan+0x2ec>)
 8005f58:	f7fc f9f4 	bl	8002344 <__aeabi_dsub>
 8005f5c:	2200      	movs	r2, #0
 8005f5e:	0006      	movs	r6, r0
 8005f60:	000f      	movs	r7, r1
 8005f62:	4b41      	ldr	r3, [pc, #260]	; (8006068 <atan+0x2ec>)
 8005f64:	0020      	movs	r0, r4
 8005f66:	0029      	movs	r1, r5
 8005f68:	f7fb ff7a 	bl	8001e60 <__aeabi_dmul>
 8005f6c:	2200      	movs	r2, #0
 8005f6e:	4b24      	ldr	r3, [pc, #144]	; (8006000 <atan+0x284>)
 8005f70:	f7fb f850 	bl	8001014 <__aeabi_dadd>
 8005f74:	000b      	movs	r3, r1
 8005f76:	0002      	movs	r2, r0
 8005f78:	0039      	movs	r1, r7
 8005f7a:	0030      	movs	r0, r6
 8005f7c:	f7fb fb66 	bl	800164c <__aeabi_ddiv>
 8005f80:	2302      	movs	r3, #2
 8005f82:	0004      	movs	r4, r0
 8005f84:	000d      	movs	r5, r1
 8005f86:	e755      	b.n	8005e34 <atan+0xb8>
 8005f88:	000b      	movs	r3, r1
 8005f8a:	0002      	movs	r2, r0
 8005f8c:	4937      	ldr	r1, [pc, #220]	; (800606c <atan+0x2f0>)
 8005f8e:	2000      	movs	r0, #0
 8005f90:	f7fb fb5c 	bl	800164c <__aeabi_ddiv>
 8005f94:	2303      	movs	r3, #3
 8005f96:	0004      	movs	r4, r0
 8005f98:	000d      	movs	r5, r1
 8005f9a:	e74b      	b.n	8005e34 <atan+0xb8>
 8005f9c:	9b02      	ldr	r3, [sp, #8]
 8005f9e:	4f34      	ldr	r7, [pc, #208]	; (8006070 <atan+0x2f4>)
 8005fa0:	00de      	lsls	r6, r3, #3
 8005fa2:	4b34      	ldr	r3, [pc, #208]	; (8006074 <atan+0x2f8>)
 8005fa4:	19bf      	adds	r7, r7, r6
 8005fa6:	199e      	adds	r6, r3, r6
 8005fa8:	6832      	ldr	r2, [r6, #0]
 8005faa:	6873      	ldr	r3, [r6, #4]
 8005fac:	f7fc f9ca 	bl	8002344 <__aeabi_dsub>
 8005fb0:	0022      	movs	r2, r4
 8005fb2:	002b      	movs	r3, r5
 8005fb4:	f7fc f9c6 	bl	8002344 <__aeabi_dsub>
 8005fb8:	000b      	movs	r3, r1
 8005fba:	0002      	movs	r2, r0
 8005fbc:	6838      	ldr	r0, [r7, #0]
 8005fbe:	6879      	ldr	r1, [r7, #4]
 8005fc0:	f7fc f9c0 	bl	8002344 <__aeabi_dsub>
 8005fc4:	9b03      	ldr	r3, [sp, #12]
 8005fc6:	0004      	movs	r4, r0
 8005fc8:	000d      	movs	r5, r1
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	db00      	blt.n	8005fd0 <atan+0x254>
 8005fce:	e6f4      	b.n	8005dba <atan+0x3e>
 8005fd0:	2180      	movs	r1, #128	; 0x80
 8005fd2:	0609      	lsls	r1, r1, #24
 8005fd4:	186b      	adds	r3, r5, r1
 8005fd6:	001d      	movs	r5, r3
 8005fd8:	e6ef      	b.n	8005dba <atan+0x3e>
 8005fda:	4d27      	ldr	r5, [pc, #156]	; (8006078 <atan+0x2fc>)
 8005fdc:	e6ed      	b.n	8005dba <atan+0x3e>
 8005fde:	46c0      	nop			; (mov r8, r8)
 8005fe0:	440fffff 	.word	0x440fffff
 8005fe4:	7ff00000 	.word	0x7ff00000
 8005fe8:	54442d18 	.word	0x54442d18
 8005fec:	3ff921fb 	.word	0x3ff921fb
 8005ff0:	3fdbffff 	.word	0x3fdbffff
 8005ff4:	3e1fffff 	.word	0x3e1fffff
 8005ff8:	8800759c 	.word	0x8800759c
 8005ffc:	7e37e43c 	.word	0x7e37e43c
 8006000:	3ff00000 	.word	0x3ff00000
 8006004:	3ff2ffff 	.word	0x3ff2ffff
 8006008:	3fe5ffff 	.word	0x3fe5ffff
 800600c:	e322da11 	.word	0xe322da11
 8006010:	3f90ad3a 	.word	0x3f90ad3a
 8006014:	24760deb 	.word	0x24760deb
 8006018:	3fa97b4b 	.word	0x3fa97b4b
 800601c:	a0d03d51 	.word	0xa0d03d51
 8006020:	3fb10d66 	.word	0x3fb10d66
 8006024:	c54c206e 	.word	0xc54c206e
 8006028:	3fb745cd 	.word	0x3fb745cd
 800602c:	920083ff 	.word	0x920083ff
 8006030:	3fc24924 	.word	0x3fc24924
 8006034:	5555550d 	.word	0x5555550d
 8006038:	3fd55555 	.word	0x3fd55555
 800603c:	2c6a6c2f 	.word	0x2c6a6c2f
 8006040:	bfa2b444 	.word	0xbfa2b444
 8006044:	52defd9a 	.word	0x52defd9a
 8006048:	3fadde2d 	.word	0x3fadde2d
 800604c:	af749a6d 	.word	0xaf749a6d
 8006050:	3fb3b0f2 	.word	0x3fb3b0f2
 8006054:	fe231671 	.word	0xfe231671
 8006058:	3fbc71c6 	.word	0x3fbc71c6
 800605c:	9998ebc4 	.word	0x9998ebc4
 8006060:	3fc99999 	.word	0x3fc99999
 8006064:	40037fff 	.word	0x40037fff
 8006068:	3ff80000 	.word	0x3ff80000
 800606c:	bff00000 	.word	0xbff00000
 8006070:	080065b0 	.word	0x080065b0
 8006074:	080065d0 	.word	0x080065d0
 8006078:	bff921fb 	.word	0xbff921fb

0800607c <fabs>:
 800607c:	0049      	lsls	r1, r1, #1
 800607e:	084b      	lsrs	r3, r1, #1
 8006080:	0019      	movs	r1, r3
 8006082:	4770      	bx	lr

08006084 <floor>:
 8006084:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006086:	004b      	lsls	r3, r1, #1
 8006088:	4a39      	ldr	r2, [pc, #228]	; (8006170 <floor+0xec>)
 800608a:	0d5b      	lsrs	r3, r3, #21
 800608c:	b085      	sub	sp, #20
 800608e:	189e      	adds	r6, r3, r2
 8006090:	000c      	movs	r4, r1
 8006092:	0005      	movs	r5, r0
 8006094:	9003      	str	r0, [sp, #12]
 8006096:	2e13      	cmp	r6, #19
 8006098:	dc34      	bgt.n	8006104 <floor+0x80>
 800609a:	2e00      	cmp	r6, #0
 800609c:	da15      	bge.n	80060ca <floor+0x46>
 800609e:	4a35      	ldr	r2, [pc, #212]	; (8006174 <floor+0xf0>)
 80060a0:	4b35      	ldr	r3, [pc, #212]	; (8006178 <floor+0xf4>)
 80060a2:	f7fa ffb7 	bl	8001014 <__aeabi_dadd>
 80060a6:	2200      	movs	r2, #0
 80060a8:	2300      	movs	r3, #0
 80060aa:	f7fa f9d7 	bl	800045c <__aeabi_dcmpgt>
 80060ae:	2800      	cmp	r0, #0
 80060b0:	d008      	beq.n	80060c4 <floor+0x40>
 80060b2:	2c00      	cmp	r4, #0
 80060b4:	da59      	bge.n	800616a <floor+0xe6>
 80060b6:	0063      	lsls	r3, r4, #1
 80060b8:	085b      	lsrs	r3, r3, #1
 80060ba:	432b      	orrs	r3, r5
 80060bc:	2500      	movs	r5, #0
 80060be:	42ab      	cmp	r3, r5
 80060c0:	d000      	beq.n	80060c4 <floor+0x40>
 80060c2:	4c2e      	ldr	r4, [pc, #184]	; (800617c <floor+0xf8>)
 80060c4:	0028      	movs	r0, r5
 80060c6:	0021      	movs	r1, r4
 80060c8:	e026      	b.n	8006118 <floor+0x94>
 80060ca:	4f2d      	ldr	r7, [pc, #180]	; (8006180 <floor+0xfc>)
 80060cc:	4137      	asrs	r7, r6
 80060ce:	003b      	movs	r3, r7
 80060d0:	400b      	ands	r3, r1
 80060d2:	4303      	orrs	r3, r0
 80060d4:	d020      	beq.n	8006118 <floor+0x94>
 80060d6:	9000      	str	r0, [sp, #0]
 80060d8:	9101      	str	r1, [sp, #4]
 80060da:	4a26      	ldr	r2, [pc, #152]	; (8006174 <floor+0xf0>)
 80060dc:	4b26      	ldr	r3, [pc, #152]	; (8006178 <floor+0xf4>)
 80060de:	9800      	ldr	r0, [sp, #0]
 80060e0:	9901      	ldr	r1, [sp, #4]
 80060e2:	f7fa ff97 	bl	8001014 <__aeabi_dadd>
 80060e6:	2200      	movs	r2, #0
 80060e8:	2300      	movs	r3, #0
 80060ea:	f7fa f9b7 	bl	800045c <__aeabi_dcmpgt>
 80060ee:	2800      	cmp	r0, #0
 80060f0:	d0e8      	beq.n	80060c4 <floor+0x40>
 80060f2:	2c00      	cmp	r4, #0
 80060f4:	da03      	bge.n	80060fe <floor+0x7a>
 80060f6:	2380      	movs	r3, #128	; 0x80
 80060f8:	035b      	lsls	r3, r3, #13
 80060fa:	4133      	asrs	r3, r6
 80060fc:	18e4      	adds	r4, r4, r3
 80060fe:	43bc      	bics	r4, r7
 8006100:	2500      	movs	r5, #0
 8006102:	e7df      	b.n	80060c4 <floor+0x40>
 8006104:	2e33      	cmp	r6, #51	; 0x33
 8006106:	dd09      	ble.n	800611c <floor+0x98>
 8006108:	2380      	movs	r3, #128	; 0x80
 800610a:	00db      	lsls	r3, r3, #3
 800610c:	429e      	cmp	r6, r3
 800610e:	d103      	bne.n	8006118 <floor+0x94>
 8006110:	0002      	movs	r2, r0
 8006112:	000b      	movs	r3, r1
 8006114:	f7fa ff7e 	bl	8001014 <__aeabi_dadd>
 8006118:	b005      	add	sp, #20
 800611a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800611c:	2701      	movs	r7, #1
 800611e:	4a19      	ldr	r2, [pc, #100]	; (8006184 <floor+0x100>)
 8006120:	427f      	negs	r7, r7
 8006122:	189b      	adds	r3, r3, r2
 8006124:	40df      	lsrs	r7, r3
 8006126:	4238      	tst	r0, r7
 8006128:	d0f6      	beq.n	8006118 <floor+0x94>
 800612a:	9000      	str	r0, [sp, #0]
 800612c:	9101      	str	r1, [sp, #4]
 800612e:	4a11      	ldr	r2, [pc, #68]	; (8006174 <floor+0xf0>)
 8006130:	4b11      	ldr	r3, [pc, #68]	; (8006178 <floor+0xf4>)
 8006132:	9800      	ldr	r0, [sp, #0]
 8006134:	9901      	ldr	r1, [sp, #4]
 8006136:	f7fa ff6d 	bl	8001014 <__aeabi_dadd>
 800613a:	2200      	movs	r2, #0
 800613c:	2300      	movs	r3, #0
 800613e:	f7fa f98d 	bl	800045c <__aeabi_dcmpgt>
 8006142:	2800      	cmp	r0, #0
 8006144:	d0be      	beq.n	80060c4 <floor+0x40>
 8006146:	2c00      	cmp	r4, #0
 8006148:	da02      	bge.n	8006150 <floor+0xcc>
 800614a:	2e14      	cmp	r6, #20
 800614c:	d102      	bne.n	8006154 <floor+0xd0>
 800614e:	3401      	adds	r4, #1
 8006150:	43bd      	bics	r5, r7
 8006152:	e7b7      	b.n	80060c4 <floor+0x40>
 8006154:	2334      	movs	r3, #52	; 0x34
 8006156:	1b9e      	subs	r6, r3, r6
 8006158:	3b33      	subs	r3, #51	; 0x33
 800615a:	40b3      	lsls	r3, r6
 800615c:	18ed      	adds	r5, r5, r3
 800615e:	9b03      	ldr	r3, [sp, #12]
 8006160:	429d      	cmp	r5, r3
 8006162:	419b      	sbcs	r3, r3
 8006164:	425b      	negs	r3, r3
 8006166:	18e4      	adds	r4, r4, r3
 8006168:	e7f2      	b.n	8006150 <floor+0xcc>
 800616a:	2500      	movs	r5, #0
 800616c:	002c      	movs	r4, r5
 800616e:	e7a9      	b.n	80060c4 <floor+0x40>
 8006170:	fffffc01 	.word	0xfffffc01
 8006174:	8800759c 	.word	0x8800759c
 8006178:	7e37e43c 	.word	0x7e37e43c
 800617c:	bff00000 	.word	0xbff00000
 8006180:	000fffff 	.word	0x000fffff
 8006184:	fffffbed 	.word	0xfffffbed

08006188 <matherr>:
 8006188:	2000      	movs	r0, #0
 800618a:	4770      	bx	lr

0800618c <scalbn>:
 800618c:	004b      	lsls	r3, r1, #1
 800618e:	b570      	push	{r4, r5, r6, lr}
 8006190:	0d5b      	lsrs	r3, r3, #21
 8006192:	0014      	movs	r4, r2
 8006194:	000a      	movs	r2, r1
 8006196:	2b00      	cmp	r3, #0
 8006198:	d10d      	bne.n	80061b6 <scalbn+0x2a>
 800619a:	004b      	lsls	r3, r1, #1
 800619c:	085b      	lsrs	r3, r3, #1
 800619e:	4303      	orrs	r3, r0
 80061a0:	d010      	beq.n	80061c4 <scalbn+0x38>
 80061a2:	4b21      	ldr	r3, [pc, #132]	; (8006228 <scalbn+0x9c>)
 80061a4:	2200      	movs	r2, #0
 80061a6:	f7fb fe5b 	bl	8001e60 <__aeabi_dmul>
 80061aa:	4b20      	ldr	r3, [pc, #128]	; (800622c <scalbn+0xa0>)
 80061ac:	429c      	cmp	r4, r3
 80061ae:	da0a      	bge.n	80061c6 <scalbn+0x3a>
 80061b0:	4a1f      	ldr	r2, [pc, #124]	; (8006230 <scalbn+0xa4>)
 80061b2:	4b20      	ldr	r3, [pc, #128]	; (8006234 <scalbn+0xa8>)
 80061b4:	e017      	b.n	80061e6 <scalbn+0x5a>
 80061b6:	4d20      	ldr	r5, [pc, #128]	; (8006238 <scalbn+0xac>)
 80061b8:	42ab      	cmp	r3, r5
 80061ba:	d108      	bne.n	80061ce <scalbn+0x42>
 80061bc:	0002      	movs	r2, r0
 80061be:	000b      	movs	r3, r1
 80061c0:	f7fa ff28 	bl	8001014 <__aeabi_dadd>
 80061c4:	bd70      	pop	{r4, r5, r6, pc}
 80061c6:	000a      	movs	r2, r1
 80061c8:	004b      	lsls	r3, r1, #1
 80061ca:	0d5b      	lsrs	r3, r3, #21
 80061cc:	3b36      	subs	r3, #54	; 0x36
 80061ce:	4d1b      	ldr	r5, [pc, #108]	; (800623c <scalbn+0xb0>)
 80061d0:	18e3      	adds	r3, r4, r3
 80061d2:	42ab      	cmp	r3, r5
 80061d4:	dd0a      	ble.n	80061ec <scalbn+0x60>
 80061d6:	0002      	movs	r2, r0
 80061d8:	000b      	movs	r3, r1
 80061da:	4819      	ldr	r0, [pc, #100]	; (8006240 <scalbn+0xb4>)
 80061dc:	4919      	ldr	r1, [pc, #100]	; (8006244 <scalbn+0xb8>)
 80061de:	f000 f839 	bl	8006254 <copysign>
 80061e2:	4a17      	ldr	r2, [pc, #92]	; (8006240 <scalbn+0xb4>)
 80061e4:	4b17      	ldr	r3, [pc, #92]	; (8006244 <scalbn+0xb8>)
 80061e6:	f7fb fe3b 	bl	8001e60 <__aeabi_dmul>
 80061ea:	e7eb      	b.n	80061c4 <scalbn+0x38>
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	dd05      	ble.n	80061fc <scalbn+0x70>
 80061f0:	4c15      	ldr	r4, [pc, #84]	; (8006248 <scalbn+0xbc>)
 80061f2:	051b      	lsls	r3, r3, #20
 80061f4:	4022      	ands	r2, r4
 80061f6:	431a      	orrs	r2, r3
 80061f8:	0011      	movs	r1, r2
 80061fa:	e7e3      	b.n	80061c4 <scalbn+0x38>
 80061fc:	001d      	movs	r5, r3
 80061fe:	3535      	adds	r5, #53	; 0x35
 8006200:	da09      	bge.n	8006216 <scalbn+0x8a>
 8006202:	4b12      	ldr	r3, [pc, #72]	; (800624c <scalbn+0xc0>)
 8006204:	0002      	movs	r2, r0
 8006206:	429c      	cmp	r4, r3
 8006208:	dce6      	bgt.n	80061d8 <scalbn+0x4c>
 800620a:	000b      	movs	r3, r1
 800620c:	4808      	ldr	r0, [pc, #32]	; (8006230 <scalbn+0xa4>)
 800620e:	4909      	ldr	r1, [pc, #36]	; (8006234 <scalbn+0xa8>)
 8006210:	f000 f820 	bl	8006254 <copysign>
 8006214:	e7cc      	b.n	80061b0 <scalbn+0x24>
 8006216:	4c0c      	ldr	r4, [pc, #48]	; (8006248 <scalbn+0xbc>)
 8006218:	3336      	adds	r3, #54	; 0x36
 800621a:	4022      	ands	r2, r4
 800621c:	051b      	lsls	r3, r3, #20
 800621e:	4313      	orrs	r3, r2
 8006220:	0019      	movs	r1, r3
 8006222:	2200      	movs	r2, #0
 8006224:	4b0a      	ldr	r3, [pc, #40]	; (8006250 <scalbn+0xc4>)
 8006226:	e7de      	b.n	80061e6 <scalbn+0x5a>
 8006228:	43500000 	.word	0x43500000
 800622c:	ffff3cb0 	.word	0xffff3cb0
 8006230:	c2f8f359 	.word	0xc2f8f359
 8006234:	01a56e1f 	.word	0x01a56e1f
 8006238:	000007ff 	.word	0x000007ff
 800623c:	000007fe 	.word	0x000007fe
 8006240:	8800759c 	.word	0x8800759c
 8006244:	7e37e43c 	.word	0x7e37e43c
 8006248:	800fffff 	.word	0x800fffff
 800624c:	0000c350 	.word	0x0000c350
 8006250:	3c900000 	.word	0x3c900000

08006254 <copysign>:
 8006254:	b530      	push	{r4, r5, lr}
 8006256:	004a      	lsls	r2, r1, #1
 8006258:	0fdb      	lsrs	r3, r3, #31
 800625a:	07db      	lsls	r3, r3, #31
 800625c:	0852      	lsrs	r2, r2, #1
 800625e:	431a      	orrs	r2, r3
 8006260:	0011      	movs	r1, r2
 8006262:	bd30      	pop	{r4, r5, pc}

08006264 <__errno>:
 8006264:	4b01      	ldr	r3, [pc, #4]	; (800626c <__errno+0x8>)
 8006266:	6818      	ldr	r0, [r3, #0]
 8006268:	4770      	bx	lr
 800626a:	46c0      	nop			; (mov r8, r8)
 800626c:	2000004c 	.word	0x2000004c

08006270 <__libc_init_array>:
 8006270:	b570      	push	{r4, r5, r6, lr}
 8006272:	2600      	movs	r6, #0
 8006274:	4d0c      	ldr	r5, [pc, #48]	; (80062a8 <__libc_init_array+0x38>)
 8006276:	4c0d      	ldr	r4, [pc, #52]	; (80062ac <__libc_init_array+0x3c>)
 8006278:	1b64      	subs	r4, r4, r5
 800627a:	10a4      	asrs	r4, r4, #2
 800627c:	42a6      	cmp	r6, r4
 800627e:	d109      	bne.n	8006294 <__libc_init_array+0x24>
 8006280:	2600      	movs	r6, #0
 8006282:	f000 f821 	bl	80062c8 <_init>
 8006286:	4d0a      	ldr	r5, [pc, #40]	; (80062b0 <__libc_init_array+0x40>)
 8006288:	4c0a      	ldr	r4, [pc, #40]	; (80062b4 <__libc_init_array+0x44>)
 800628a:	1b64      	subs	r4, r4, r5
 800628c:	10a4      	asrs	r4, r4, #2
 800628e:	42a6      	cmp	r6, r4
 8006290:	d105      	bne.n	800629e <__libc_init_array+0x2e>
 8006292:	bd70      	pop	{r4, r5, r6, pc}
 8006294:	00b3      	lsls	r3, r6, #2
 8006296:	58eb      	ldr	r3, [r5, r3]
 8006298:	4798      	blx	r3
 800629a:	3601      	adds	r6, #1
 800629c:	e7ee      	b.n	800627c <__libc_init_array+0xc>
 800629e:	00b3      	lsls	r3, r6, #2
 80062a0:	58eb      	ldr	r3, [r5, r3]
 80062a2:	4798      	blx	r3
 80062a4:	3601      	adds	r6, #1
 80062a6:	e7f2      	b.n	800628e <__libc_init_array+0x1e>
 80062a8:	080065f0 	.word	0x080065f0
 80062ac:	080065f0 	.word	0x080065f0
 80062b0:	080065f0 	.word	0x080065f0
 80062b4:	080065f4 	.word	0x080065f4

080062b8 <memset>:
 80062b8:	0003      	movs	r3, r0
 80062ba:	1812      	adds	r2, r2, r0
 80062bc:	4293      	cmp	r3, r2
 80062be:	d100      	bne.n	80062c2 <memset+0xa>
 80062c0:	4770      	bx	lr
 80062c2:	7019      	strb	r1, [r3, #0]
 80062c4:	3301      	adds	r3, #1
 80062c6:	e7f9      	b.n	80062bc <memset+0x4>

080062c8 <_init>:
 80062c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062ca:	46c0      	nop			; (mov r8, r8)
 80062cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80062ce:	bc08      	pop	{r3}
 80062d0:	469e      	mov	lr, r3
 80062d2:	4770      	bx	lr

080062d4 <_fini>:
 80062d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062d6:	46c0      	nop			; (mov r8, r8)
 80062d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80062da:	bc08      	pop	{r3}
 80062dc:	469e      	mov	lr, r3
 80062de:	4770      	bx	lr
